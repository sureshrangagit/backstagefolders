import * as React from 'react';
import type { FloatingRootContext } from '@floating-ui/react';
import type { TransitionStatus } from '../../utils/useTransitionStatus.js';
import type { GenericHTMLProps } from '../../utils/types.js';
import type { OpenChangeReason } from '../../utils/translateOpenChangeReason.js';
export interface PreviewCardRootContext {
    open: boolean;
    setOpen: (open: boolean, event?: Event, reason?: OpenChangeReason) => void;
    setTriggerElement: (el: Element | null) => void;
    positionerElement: HTMLElement | null;
    setPositionerElement: (el: HTMLElement | null) => void;
    delay: number;
    closeDelay: number;
    mounted: boolean;
    setMounted: React.Dispatch<React.SetStateAction<boolean>>;
    getRootTriggerProps: (externalProps?: GenericHTMLProps) => GenericHTMLProps;
    getRootPopupProps: (externalProps?: GenericHTMLProps) => GenericHTMLProps;
    floatingRootContext: FloatingRootContext;
    transitionStatus: TransitionStatus;
    popupRef: React.RefObject<HTMLElement | null>;
    onOpenChangeComplete: ((open: boolean) => void) | undefined;
}
export declare const PreviewCardRootContext: React.Context<PreviewCardRootContext | undefined>;
export declare function usePreviewCardRootContext(): PreviewCardRootContext;
