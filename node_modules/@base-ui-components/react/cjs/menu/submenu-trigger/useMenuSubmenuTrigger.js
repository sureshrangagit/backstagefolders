"use strict";
'use client';

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.useMenuSubmenuTrigger = useMenuSubmenuTrigger;
var React = _interopRequireWildcard(require("react"));
var _useMenuItem = require("../item/useMenuItem");
var _useForkRef = require("../../utils/useForkRef");
function _getRequireWildcardCache(e) { if ("function" != typeof WeakMap) return null; var r = new WeakMap(), t = new WeakMap(); return (_getRequireWildcardCache = function (e) { return e ? t : r; })(e); }
function _interopRequireWildcard(e, r) { if (!r && e && e.__esModule) return e; if (null === e || "object" != typeof e && "function" != typeof e) return { default: e }; var t = _getRequireWildcardCache(r); if (t && t.has(e)) return t.get(e); var n = { __proto__: null }, a = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var u in e) if ("default" !== u && {}.hasOwnProperty.call(e, u)) { var i = a ? Object.getOwnPropertyDescriptor(e, u) : null; i && (i.get || i.set) ? Object.defineProperty(n, u, i) : n[u] = e[u]; } return n.default = e, t && t.set(e, n), n; }
function useMenuSubmenuTrigger(parameters) {
  const {
    id,
    highlighted,
    disabled,
    ref: externalRef,
    menuEvents,
    setTriggerElement,
    allowMouseUpTriggerRef,
    typingRef
  } = parameters;
  const {
    getItemProps,
    rootRef: menuItemRef
  } = (0, _useMenuItem.useMenuItem)({
    closeOnClick: false,
    disabled,
    highlighted,
    id,
    menuEvents,
    ref: externalRef,
    allowMouseUpTriggerRef,
    typingRef
  });
  const menuTriggerRef = (0, _useForkRef.useForkRef)(menuItemRef, setTriggerElement);
  const getTriggerProps = React.useCallback(externalProps => {
    return {
      ...getItemProps(externalProps),
      'aria-haspopup': 'menu',
      ref: menuTriggerRef
    };
  }, [getItemProps, menuTriggerRef]);
  return React.useMemo(() => ({
    getTriggerProps,
    rootRef: menuTriggerRef
  }), [getTriggerProps, menuTriggerRef]);
}