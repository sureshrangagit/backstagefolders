"use strict";
'use client';

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.useProgressIndicator = useProgressIndicator;
var React = _interopRequireWildcard(require("react"));
var _mergeProps = require("../../merge-props");
var _valueToPercent = require("../../utils/valueToPercent");
function _getRequireWildcardCache(e) { if ("function" != typeof WeakMap) return null; var r = new WeakMap(), t = new WeakMap(); return (_getRequireWildcardCache = function (e) { return e ? t : r; })(e); }
function _interopRequireWildcard(e, r) { if (!r && e && e.__esModule) return e; if (null === e || "object" != typeof e && "function" != typeof e) return { default: e }; var t = _getRequireWildcardCache(r); if (t && t.has(e)) return t.get(e); var n = { __proto__: null }, a = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var u in e) if ("default" !== u && {}.hasOwnProperty.call(e, u)) { var i = a ? Object.getOwnPropertyDescriptor(e, u) : null; i && (i.get || i.set) ? Object.defineProperty(n, u, i) : n[u] = e[u]; } return n.default = e, t && t.set(e, n), n; }
function useProgressIndicator(parameters) {
  const {
    max = 100,
    min = 0,
    value
  } = parameters;
  const percentageValue = Number.isFinite(value) && value !== null ? (0, _valueToPercent.valueToPercent)(value, min, max) : null;
  const getStyles = React.useCallback(() => {
    if (percentageValue == null) {
      return {};
    }
    return {
      insetInlineStart: 0,
      height: 'inherit',
      width: `${percentageValue}%`
    };
  }, [percentageValue]);
  const getRootProps = React.useCallback((externalProps = {}) => (0, _mergeProps.mergeProps)({
    style: getStyles()
  }, externalProps), [getStyles]);
  return {
    getRootProps
  };
}