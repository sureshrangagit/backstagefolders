"use strict";
'use client';

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");
Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.ToolbarRoot = void 0;
var React = _interopRequireWildcard(require("react"));
var _propTypes = _interopRequireDefault(require("prop-types"));
var _useComponentRenderer = require("../../utils/useComponentRenderer");
var _CompositeRoot = require("../../composite/root/CompositeRoot");
var _ToolbarRootContext = require("./ToolbarRootContext");
var _useToolbarRoot = require("./useToolbarRoot");
var _jsxRuntime = require("react/jsx-runtime");
function _getRequireWildcardCache(e) { if ("function" != typeof WeakMap) return null; var r = new WeakMap(), t = new WeakMap(); return (_getRequireWildcardCache = function (e) { return e ? t : r; })(e); }
function _interopRequireWildcard(e, r) { if (!r && e && e.__esModule) return e; if (null === e || "object" != typeof e && "function" != typeof e) return { default: e }; var t = _getRequireWildcardCache(r); if (t && t.has(e)) return t.get(e); var n = { __proto__: null }, a = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var u in e) if ("default" !== u && {}.hasOwnProperty.call(e, u)) { var i = a ? Object.getOwnPropertyDescriptor(e, u) : null; i && (i.get || i.set) ? Object.defineProperty(n, u, i) : n[u] = e[u]; } return n.default = e, t && t.set(e, n), n; }
/**
 * A container for grouping a set of controls, such as buttons, toggle groups, or menus.
 * Renders a `<div>` element.
 *
 * Documentation: [Base UI Toolbar](https://base-ui.com/react/components/toolbar)
 */const ToolbarRoot = exports.ToolbarRoot = /*#__PURE__*/React.forwardRef(function ToolbarRoot(props, forwardedRef) {
  const {
    cols = 1,
    disabled = false,
    loop = true,
    orientation = 'horizontal',
    className,
    render,
    ...otherProps
  } = props;
  const {
    getRootProps,
    disabledIndices,
    setItemMap
  } = (0, _useToolbarRoot.useToolbarRoot)({
    disabled,
    orientation
  });
  const toolbarRootContext = React.useMemo(() => ({
    disabled,
    orientation,
    setItemMap
  }), [disabled, orientation, setItemMap]);
  const state = React.useMemo(() => ({
    disabled,
    orientation
  }), [disabled, orientation]);
  const {
    renderElement
  } = (0, _useComponentRenderer.useComponentRenderer)({
    propGetter: getRootProps,
    render: render ?? 'div',
    className,
    state,
    extraProps: otherProps,
    ref: forwardedRef
  });
  return /*#__PURE__*/(0, _jsxRuntime.jsx)(_ToolbarRootContext.ToolbarRootContext.Provider, {
    value: toolbarRootContext,
    children: /*#__PURE__*/(0, _jsxRuntime.jsx)(_CompositeRoot.CompositeRoot, {
      cols: cols,
      disabledIndices: disabledIndices,
      loop: loop,
      onMapChange: setItemMap,
      orientation: orientation,
      render: renderElement()
    })
  });
});
process.env.NODE_ENV !== "production" ? ToolbarRoot.propTypes /* remove-proptypes */ = {
  // ┌────────────────────────────── Warning ──────────────────────────────┐
  // │ These PropTypes are generated from the TypeScript type definitions. │
  // │ To update them, edit the TypeScript types and run `pnpm proptypes`. │
  // └─────────────────────────────────────────────────────────────────────┘
  /**
   * @ignore
   */
  children: _propTypes.default.node,
  /**
   * CSS class applied to the element, or a function that
   * returns a class based on the component’s state.
   */
  className: _propTypes.default.oneOfType([_propTypes.default.func, _propTypes.default.string]),
  /**
   * The number of columns. When greater than 1, the toolbar is arranged into
   * a grid.
   * @default 1
   */
  cols: _propTypes.default.number,
  /**
   * @ignore
   */
  disabled: _propTypes.default.bool,
  /**
   * If `true`, using keyboard navigation will wrap focus to the other end of the toolbar once the end is reached.
   *
   * @default true
   */
  loop: _propTypes.default.bool,
  /**
   * The orientation of the toolbar.
   * @default 'horizontal'
   */
  orientation: _propTypes.default.oneOf(['horizontal', 'vertical']),
  /**
   * Allows you to replace the component’s HTML element
   * with a different tag, or compose it with another component.
   *
   * Accepts a `ReactElement` or a function that returns the element to render.
   */
  render: _propTypes.default.oneOfType([_propTypes.default.element, _propTypes.default.func])
} : void 0;