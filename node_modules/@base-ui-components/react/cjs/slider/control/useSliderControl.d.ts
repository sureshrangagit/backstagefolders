import * as React from 'react';
import type { GenericHTMLProps } from '../../utils/types.js';
import { type useSliderRoot } from '../root/useSliderRoot.js';
export declare function useSliderControl(parameters: useSliderControl.Parameters): useSliderControl.ReturnValue;
export declare namespace useSliderControl {
    interface Parameters extends Pick<useSliderRoot.ReturnValue, 'disabled' | 'dragging' | 'getFingerState' | 'lastChangedValueRef' | 'minStepsBetweenValues' | 'commitValue' | 'percentageValues' | 'registerSliderControl' | 'setActive' | 'setDragging' | 'setValue' | 'step' | 'thumbRefs'> {
        /**
         * The ref attached to the control area of the Slider.
         */
        rootRef?: React.Ref<Element>;
    }
    interface ReturnValue {
        getRootProps: (externalProps?: GenericHTMLProps) => GenericHTMLProps;
    }
}
