"use strict";
'use client';

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.useFieldsetLegend = useFieldsetLegend;
var React = _interopRequireWildcard(require("react"));
var _mergeProps = require("../../merge-props");
var _useBaseUiId = require("../../utils/useBaseUiId");
var _useEnhancedEffect = require("../../utils/useEnhancedEffect");
var _FieldsetRootContext = require("../root/FieldsetRootContext");
function _getRequireWildcardCache(e) { if ("function" != typeof WeakMap) return null; var r = new WeakMap(), t = new WeakMap(); return (_getRequireWildcardCache = function (e) { return e ? t : r; })(e); }
function _interopRequireWildcard(e, r) { if (!r && e && e.__esModule) return e; if (null === e || "object" != typeof e && "function" != typeof e) return { default: e }; var t = _getRequireWildcardCache(r); if (t && t.has(e)) return t.get(e); var n = { __proto__: null }, a = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var u in e) if ("default" !== u && {}.hasOwnProperty.call(e, u)) { var i = a ? Object.getOwnPropertyDescriptor(e, u) : null; i && (i.get || i.set) ? Object.defineProperty(n, u, i) : n[u] = e[u]; } return n.default = e, t && t.set(e, n), n; }
function useFieldsetLegend(params) {
  const {
    id: idProp
  } = params;
  const {
    setLegendId
  } = (0, _FieldsetRootContext.useFieldsetRootContext)();
  const id = (0, _useBaseUiId.useBaseUiId)(idProp);
  (0, _useEnhancedEffect.useEnhancedEffect)(() => {
    setLegendId(id);
    return () => {
      setLegendId(undefined);
    };
  }, [setLegendId, id]);
  const getLegendProps = React.useCallback((externalProps = {}) => (0, _mergeProps.mergeProps)({
    id
  }, externalProps), [id]);
  return React.useMemo(() => ({
    getLegendProps
  }), [getLegendProps]);
}