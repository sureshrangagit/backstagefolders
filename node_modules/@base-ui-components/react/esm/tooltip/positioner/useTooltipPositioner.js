import * as React from 'react';
import { mergeProps } from '../../merge-props/index.js';
import { useAnchorPositioning } from '../../utils/useAnchorPositioning.js';
import { useTooltipRootContext } from '../root/TooltipRootContext.js';
export function useTooltipPositioner(params) {
  const {
    open,
    trackCursorAxis,
    mounted
  } = useTooltipRootContext();
  const positioning = useAnchorPositioning(params);
  const getPositionerProps = React.useCallback(externalProps => {
    const hiddenStyles = {};
    if (!open) {
      hiddenStyles.pointerEvents = 'none';
    }
    if (trackCursorAxis === 'both') {
      hiddenStyles.pointerEvents = 'none';
    }
    return mergeProps({
      role: 'presentation',
      hidden: !mounted,
      style: {
        ...positioning.positionerStyles,
        ...hiddenStyles
      }
    }, externalProps);
  }, [open, trackCursorAxis, mounted, positioning.positionerStyles]);
  return React.useMemo(() => ({
    getPositionerProps,
    ...positioning
  }), [getPositionerProps, positioning]);
}