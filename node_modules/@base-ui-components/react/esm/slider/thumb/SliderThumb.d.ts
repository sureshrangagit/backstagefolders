import * as React from 'react';
import { BaseUIComponentProps } from '../../utils/types.js';
import type { SliderRoot } from '../root/SliderRoot.js';
import { useSliderThumb } from './useSliderThumb.js';
/**
 * The draggable part of the the slider at the tip of the indicator.
 * Renders a `<div>` element.
 *
 * Documentation: [Base UI Slider](https://base-ui.com/react/components/slider)
 */
declare const SliderThumb: React.ForwardRefExoticComponent<SliderThumb.Props & React.RefAttributes<HTMLDivElement>>;
declare namespace SliderThumb {
    interface State extends SliderRoot.State {
    }
    interface Props extends Partial<Omit<useSliderThumb.Parameters, 'rootRef'>>, Omit<BaseUIComponentProps<'div', State>, 'render' | 'tabIndex'> {
        onPointerLeave?: React.PointerEventHandler;
        onPointerOver?: React.PointerEventHandler;
        onBlur?: React.FocusEventHandler;
        onFocus?: React.FocusEventHandler;
        onKeyDown?: React.KeyboardEventHandler;
        /**
         * Allows you to replace the componentâ€™s HTML element
         * with a different tag, or compose it with another component.
         *
         * Accepts a `ReactElement` or a function that returns the element to render.
         */
        render?: ((props: React.ComponentPropsWithRef<'div'>, inputProps: React.ComponentPropsWithRef<'input'>, state: State) => React.ReactElement) | (React.ReactElement & {
            ref: React.Ref<Element>;
        });
    }
}
export { SliderThumb };
