import * as React from 'react';
import { mergeProps } from '../../merge-props/index.js';
import { usePopoverRootContext } from '../root/PopoverRootContext.js';
export function usePopoverPopup(params) {
  const {
    getProps,
    titleId,
    descriptionId,
    initialFocus
  } = params;
  const {
    popupRef,
    openMethod
  } = usePopoverRootContext();
  const getPopupProps = React.useCallback((externalProps = {}) => {
    return mergeProps({
      'aria-labelledby': titleId,
      'aria-describedby': descriptionId
    }, getProps(externalProps));
  }, [getProps, titleId, descriptionId]);

  // Default initial focus logic:
  // If opened by touch, focus the popup element to prevent the virtual keyboard from opening
  // (this is required for Android specifically as iOS handles this automatically).
  const defaultInitialFocus = React.useCallback(interactionType => {
    if (interactionType === 'touch') {
      return popupRef;
    }
    return 0;
  }, [popupRef]);
  const resolvedInitialFocus = React.useMemo(() => {
    if (initialFocus == null) {
      return defaultInitialFocus(openMethod ?? '');
    }
    if (typeof initialFocus === 'function') {
      return initialFocus(openMethod ?? '');
    }
    return initialFocus;
  }, [defaultInitialFocus, initialFocus, openMethod]);
  return React.useMemo(() => ({
    getPopupProps,
    resolvedInitialFocus
  }), [getPopupProps, resolvedInitialFocus]);
}