'use client';

import * as React from 'react';
import PropTypes from 'prop-types';
import { useComponentRenderer } from '../../utils/useComponentRenderer.js';
import { MenuGroupContext } from './MenuGroupContext.js';
import { jsx as _jsx } from "react/jsx-runtime";
const state = {};

/**
 * Groups related menu items with the corresponding label.
 * Renders a `<div>` element.
 *
 * Documentation: [Base UI Menu](https://base-ui.com/react/components/menu)
 */
const MenuGroup = /*#__PURE__*/React.forwardRef(function MenuGroup(props, forwardedRef) {
  const {
    render,
    className,
    ...other
  } = props;
  const [labelId, setLabelId] = React.useState(undefined);
  const context = React.useMemo(() => ({
    setLabelId
  }), [setLabelId]);
  const {
    renderElement
  } = useComponentRenderer({
    render: render || 'div',
    className,
    state,
    extraProps: {
      role: 'group',
      'aria-labelledby': labelId,
      ...other
    },
    ref: forwardedRef
  });
  return /*#__PURE__*/_jsx(MenuGroupContext.Provider, {
    value: context,
    children: renderElement()
  });
});
process.env.NODE_ENV !== "production" ? MenuGroup.propTypes /* remove-proptypes */ = {
  // ┌────────────────────────────── Warning ──────────────────────────────┐
  // │ These PropTypes are generated from the TypeScript type definitions. │
  // │ To update them, edit the TypeScript types and run `pnpm proptypes`. │
  // └─────────────────────────────────────────────────────────────────────┘
  /**
   * The content of the component.
   */
  children: PropTypes.node,
  /**
   * CSS class applied to the element, or a function that
   * returns a class based on the component’s state.
   */
  className: PropTypes.oneOfType([PropTypes.func, PropTypes.string]),
  /**
   * Allows you to replace the component’s HTML element
   * with a different tag, or compose it with another component.
   *
   * Accepts a `ReactElement` or a function that returns the element to render.
   */
  render: PropTypes.oneOfType([PropTypes.element, PropTypes.func])
} : void 0;
export { MenuGroup };