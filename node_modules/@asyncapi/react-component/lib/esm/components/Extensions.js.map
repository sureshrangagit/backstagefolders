{"version":3,"file":"Extensions.js","sourceRoot":"","sources":["../../../src/components/Extensions.tsx"],"names":[],"mappings":"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","sourcesContent":["/* eslint-disable @typescript-eslint/no-unsafe-return */\n/* eslint-disable @typescript-eslint/no-unsafe-assignment */\n\nimport React, { useState } from 'react';\n\nimport { Schema } from './Schema';\n\nimport { SchemaHelpers } from '../helpers';\nimport { useConfig, useSpec } from '../contexts';\nimport { CollapseButton } from './CollapseButton';\n\ninterface Props {\n  name?: string;\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  item: any;\n}\n\nexport const Extensions: React.FunctionComponent<Props> = ({\n  name = 'Extensions',\n  item,\n}) => {\n  const [expanded, setExpanded] = useState(false);\n\n  const config = useConfig();\n  const document = useSpec();\n\n  const extensions = SchemaHelpers.getCustomExtensions(item);\n  if (!extensions || !Object.keys(extensions).length) {\n    return null;\n  }\n\n  if (!config.extensions || !Object.keys(config.extensions).length) {\n    const schema = SchemaHelpers.jsonToSchema(extensions);\n    return (\n      schema && (\n        <div className=\"mt-2\">\n          <Schema schemaName={name} schema={schema} onlyTitle={true} />\n        </div>\n      )\n    );\n  }\n\n  return (\n    <div>\n      <div className=\"flex py-2\">\n        <div className=\"min-w-1/4\">\n          <>\n            <CollapseButton\n              onClick={() => setExpanded((prev) => !prev)}\n              expanded={expanded}\n            >\n              <span className={`break-anywhere text-sm ${name}`}>{name}</span>\n            </CollapseButton>\n          </>\n        </div>\n      </div>\n      <div\n        className={`rounded p-4 py-2 border bg-gray-100 ${expanded ? 'block' : 'hidden'}`}\n      >\n        {Object.keys(extensions)\n          .sort((extension1, extension2) =>\n            extension1.localeCompare(extension2),\n          )\n          .map((extensionKey) => {\n            if (config.extensions?.[extensionKey]) {\n              const CustomExtensionComponent = config.extensions[extensionKey];\n              return (\n                <CustomExtensionComponent\n                  key={extensionKey}\n                  propertyName={extensionKey}\n                  propertyValue={extensions[extensionKey]}\n                  document={document}\n                  parent={item}\n                />\n              );\n            } else {\n              const extensionSchema = SchemaHelpers.jsonToSchema(\n                extensions[extensionKey],\n              );\n              return (\n                <div key={extensionKey} className=\"mt-2\">\n                  <Schema schemaName={extensionKey} schema={extensionSchema} />\n                </div>\n              );\n            }\n          })}\n      </div>\n    </div>\n  );\n};\n"]}