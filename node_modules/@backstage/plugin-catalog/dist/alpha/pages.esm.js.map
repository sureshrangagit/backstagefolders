{"version":3,"file":"pages.esm.js","sources":["../../src/alpha/pages.tsx"],"sourcesContent":["/*\n * Copyright 2023 The Backstage Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n  compatWrapper,\n  convertLegacyRouteRef,\n} from '@backstage/core-compat-api';\nimport {\n  coreExtensionData,\n  createExtensionInput,\n  PageBlueprint,\n} from '@backstage/frontend-plugin-api';\nimport {\n  AsyncEntityProvider,\n  entityRouteRef,\n} from '@backstage/plugin-catalog-react';\nimport {\n  EntityHeaderBlueprint,\n  EntityContentBlueprint,\n  defaultEntityContentGroups,\n  EntityContextMenuItemBlueprint,\n} from '@backstage/plugin-catalog-react/alpha';\nimport { rootRouteRef } from '../routes';\nimport { useEntityFromUrl } from '../components/CatalogEntityPage/useEntityFromUrl';\nimport { buildFilterFn } from './filter/FilterWrapper';\n\nexport const catalogPage = PageBlueprint.makeWithOverrides({\n  inputs: {\n    filters: createExtensionInput([coreExtensionData.reactElement]),\n  },\n  factory(originalFactory, { inputs }) {\n    return originalFactory({\n      defaultPath: '/catalog',\n      routeRef: convertLegacyRouteRef(rootRouteRef),\n      loader: async () => {\n        const { BaseCatalogPage } = await import('../components/CatalogPage');\n        const filters = inputs.filters.map(filter =>\n          filter.get(coreExtensionData.reactElement),\n        );\n        return compatWrapper(<BaseCatalogPage filters={<>{filters}</>} />);\n      },\n    });\n  },\n});\n\nexport const catalogEntityPage = PageBlueprint.makeWithOverrides({\n  name: 'entity',\n  inputs: {\n    header: createExtensionInput(\n      [EntityHeaderBlueprint.dataRefs.element.optional()],\n      { singleton: true, optional: true },\n    ),\n    contents: createExtensionInput([\n      coreExtensionData.reactElement,\n      coreExtensionData.routePath,\n      coreExtensionData.routeRef.optional(),\n      EntityContentBlueprint.dataRefs.title,\n      EntityContentBlueprint.dataRefs.filterFunction.optional(),\n      EntityContentBlueprint.dataRefs.filterExpression.optional(),\n      EntityContentBlueprint.dataRefs.group.optional(),\n    ]),\n    contextMenuItems: createExtensionInput([\n      coreExtensionData.reactElement,\n      EntityContextMenuItemBlueprint.dataRefs.filterFunction.optional(),\n    ]),\n  },\n  config: {\n    schema: {\n      groups: z =>\n        z\n          .array(z.record(z.string(), z.object({ title: z.string() })))\n          .optional(),\n    },\n  },\n  factory(originalFactory, { config, inputs }) {\n    return originalFactory({\n      defaultPath: '/catalog/:namespace/:kind/:name',\n      routeRef: convertLegacyRouteRef(entityRouteRef),\n      loader: async () => {\n        const { EntityLayout } = await import('./components/EntityLayout');\n\n        const menuItems = inputs.contextMenuItems.map(item => ({\n          element: item.get(coreExtensionData.reactElement),\n          filter:\n            item.get(EntityContextMenuItemBlueprint.dataRefs.filterFunction) ??\n            (() => true),\n        }));\n\n        type Groups = Record<\n          string,\n          { title: string; items: Array<(typeof inputs.contents)[0]> }\n        >;\n\n        const header = inputs.header?.get(\n          EntityHeaderBlueprint.dataRefs.element,\n        );\n\n        let groups = Object.entries(defaultEntityContentGroups).reduce<Groups>(\n          (rest, group) => {\n            const [groupId, groupValue] = group;\n            return {\n              ...rest,\n              [groupId]: { title: groupValue, items: [] },\n            };\n          },\n          {},\n        );\n\n        // config groups override default groups\n        if (config.groups) {\n          groups = config.groups.reduce<Groups>((rest, group) => {\n            const [groupId, groupValue] = Object.entries(group)[0];\n            return {\n              ...rest,\n              [groupId]: { title: groupValue.title, items: [] },\n            };\n          }, {});\n        }\n\n        for (const output of inputs.contents) {\n          const itemId = output.node.spec.id;\n          const itemTitle = output.get(EntityContentBlueprint.dataRefs.title);\n          const itemGroup = output.get(EntityContentBlueprint.dataRefs.group);\n          const group = itemGroup && groups[itemGroup];\n          if (!group) {\n            groups[itemId] = { title: itemTitle, items: [output] };\n            continue;\n          }\n          group.items.push(output);\n        }\n\n        const Component = () => {\n          const entityFromUrl = useEntityFromUrl();\n          const { entity } = entityFromUrl;\n          const filteredMenuItems = entity\n            ? menuItems.filter(i => i.filter(entity)).map(i => i.element)\n            : [];\n\n          return (\n            <AsyncEntityProvider {...entityFromUrl}>\n              <EntityLayout\n                header={header}\n                contextMenuItems={filteredMenuItems}\n              >\n                {Object.values(groups).flatMap(({ title, items }) =>\n                  items.map(output => (\n                    <EntityLayout.Route\n                      group={title}\n                      key={output.get(coreExtensionData.routePath)}\n                      path={output.get(coreExtensionData.routePath)}\n                      title={output.get(EntityContentBlueprint.dataRefs.title)}\n                      if={buildFilterFn(\n                        output.get(\n                          EntityContentBlueprint.dataRefs.filterFunction,\n                        ),\n                        output.get(\n                          EntityContentBlueprint.dataRefs.filterExpression,\n                        ),\n                      )}\n                    >\n                      {output.get(coreExtensionData.reactElement)}\n                    </EntityLayout.Route>\n                  )),\n                )}\n              </EntityLayout>\n            </AsyncEntityProvider>\n          );\n        };\n\n        return compatWrapper(<Component />);\n      },\n    });\n  },\n});\n\nexport default [catalogPage, catalogEntityPage];\n"],"names":[],"mappings":"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"}