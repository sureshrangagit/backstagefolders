{"version":3,"file":"AboutContent.esm.js","sources":["../../../src/components/AboutCard/AboutContent.tsx"],"sourcesContent":["/*\n * Copyright 2020 The Backstage Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n  Entity,\n  getEntitySourceLocation,\n  RELATION_OWNED_BY,\n  RELATION_PART_OF,\n} from '@backstage/catalog-model';\nimport {\n  EntityRefLinks,\n  getEntityRelations,\n} from '@backstage/plugin-catalog-react';\nimport { JsonArray } from '@backstage/types';\nimport Chip from '@material-ui/core/Chip';\nimport Grid from '@material-ui/core/Grid';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { MarkdownContent } from '@backstage/core-components';\nimport { AboutField } from './AboutField';\nimport { LinksGridList } from '../EntityLinksCard/LinksGridList';\nimport { useTranslationRef } from '@backstage/core-plugin-api/alpha';\nimport { catalogTranslationRef } from '../../alpha/translation';\n\nconst useStyles = makeStyles({\n  description: {\n    wordBreak: 'break-word',\n  },\n});\n\n/**\n * Props for {@link AboutContent}.\n *\n * @public\n */\nexport interface AboutContentProps {\n  entity: Entity;\n}\n\nfunction getLocationTargetHref(\n  target: string,\n  type: string,\n  entitySourceLocation: {\n    type: string;\n    target: string;\n  },\n): string {\n  if (type === 'url' || target.includes('://')) {\n    return target;\n  }\n\n  const srcLocationUrl =\n    entitySourceLocation.type === 'file'\n      ? `file://${entitySourceLocation.target}`\n      : entitySourceLocation.target;\n\n  if (type === 'file' || entitySourceLocation.type === 'file') {\n    return new URL(target, srcLocationUrl).href;\n  }\n\n  return srcLocationUrl;\n}\n\n/** @public */\nexport function AboutContent(props: AboutContentProps) {\n  const { entity } = props;\n  const classes = useStyles();\n  const { t } = useTranslationRef(catalogTranslationRef);\n\n  const isSystem = entity.kind.toLocaleLowerCase('en-US') === 'system';\n  const isResource = entity.kind.toLocaleLowerCase('en-US') === 'resource';\n  const isComponent = entity.kind.toLocaleLowerCase('en-US') === 'component';\n  const isAPI = entity.kind.toLocaleLowerCase('en-US') === 'api';\n  const isTemplate = entity.kind.toLocaleLowerCase('en-US') === 'template';\n  const isLocation = entity.kind.toLocaleLowerCase('en-US') === 'location';\n  const isGroup = entity.kind.toLocaleLowerCase('en-US') === 'group';\n\n  const partOfSystemRelations = getEntityRelations(entity, RELATION_PART_OF, {\n    kind: 'system',\n  });\n  const partOfComponentRelations = getEntityRelations(\n    entity,\n    RELATION_PART_OF,\n    {\n      kind: 'component',\n    },\n  );\n  const partOfDomainRelations = getEntityRelations(entity, RELATION_PART_OF, {\n    kind: 'domain',\n  });\n  const ownedByRelations = getEntityRelations(entity, RELATION_OWNED_BY);\n\n  let entitySourceLocation:\n    | {\n        type: string;\n        target: string;\n      }\n    | undefined;\n  try {\n    entitySourceLocation = getEntitySourceLocation(entity);\n  } catch (e) {\n    entitySourceLocation = undefined;\n  }\n\n  return (\n    <Grid container>\n      <AboutField\n        label={t('aboutCard.descriptionField.label')}\n        gridSizes={{ xs: 12 }}\n      >\n        <MarkdownContent\n          className={classes.description}\n          content={\n            entity?.metadata?.description ||\n            t('aboutCard.descriptionField.value')\n          }\n        />\n      </AboutField>\n      <AboutField\n        label={t('aboutCard.ownerField.label')}\n        value={t('aboutCard.ownerField.value')}\n        className={classes.description}\n        gridSizes={{ xs: 12, sm: 6, lg: 4 }}\n      >\n        {ownedByRelations.length > 0 && (\n          <EntityRefLinks entityRefs={ownedByRelations} defaultKind=\"group\" />\n        )}\n      </AboutField>\n      {(isSystem || partOfDomainRelations.length > 0) && (\n        <AboutField\n          label={t('aboutCard.domainField.label')}\n          value={t('aboutCard.domainField.value')}\n          gridSizes={{ xs: 12, sm: 6, lg: 4 }}\n        >\n          {partOfDomainRelations.length > 0 && (\n            <EntityRefLinks\n              entityRefs={partOfDomainRelations}\n              defaultKind=\"domain\"\n            />\n          )}\n        </AboutField>\n      )}\n      {(isAPI ||\n        isComponent ||\n        isResource ||\n        partOfSystemRelations.length > 0) && (\n        <AboutField\n          label={t('aboutCard.systemField.label')}\n          value={t('aboutCard.systemField.value')}\n          gridSizes={{ xs: 12, sm: 6, lg: 4 }}\n        >\n          {partOfSystemRelations.length > 0 && (\n            <EntityRefLinks\n              entityRefs={partOfSystemRelations}\n              defaultKind=\"system\"\n            />\n          )}\n        </AboutField>\n      )}\n      {isComponent && partOfComponentRelations.length > 0 && (\n        <AboutField\n          label={t('aboutCard.parentComponentField.label')}\n          value={t('aboutCard.parentComponentField.value')}\n          gridSizes={{ xs: 12, sm: 6, lg: 4 }}\n        >\n          <EntityRefLinks\n            entityRefs={partOfComponentRelations}\n            defaultKind=\"component\"\n          />\n        </AboutField>\n      )}\n      {(isAPI ||\n        isComponent ||\n        isResource ||\n        isTemplate ||\n        isGroup ||\n        isLocation ||\n        typeof entity?.spec?.type === 'string') && (\n        <AboutField\n          label={t('aboutCard.typeField.label')}\n          value={entity?.spec?.type as string}\n          gridSizes={{ xs: 12, sm: 6, lg: 4 }}\n        />\n      )}\n      {(isAPI ||\n        isComponent ||\n        typeof entity?.spec?.lifecycle === 'string') && (\n        <AboutField\n          label={t('aboutCard.lifecycleField.label')}\n          value={entity?.spec?.lifecycle as string}\n          gridSizes={{ xs: 12, sm: 6, lg: 4 }}\n        />\n      )}\n      <AboutField\n        label={t('aboutCard.tagsField.label')}\n        value={t('aboutCard.tagsField.value')}\n        gridSizes={{ xs: 12, sm: 6, lg: 4 }}\n      >\n        {(entity?.metadata?.tags || []).map(tag => (\n          <Chip key={tag} size=\"small\" label={tag} />\n        ))}\n      </AboutField>\n      {isLocation && (entity?.spec?.targets || entity?.spec?.target) && (\n        <AboutField\n          label={t('aboutCard.targetsField.label')}\n          gridSizes={{ xs: 12 }}\n        >\n          <LinksGridList\n            cols={1}\n            items={((entity.spec.targets as JsonArray) || [entity.spec.target])\n              .map(target => target as string)\n              .map(target => ({\n                text: target,\n                href: getLocationTargetHref(\n                  target,\n                  (entity?.spec?.type || 'unknown') as string,\n                  entitySourceLocation!,\n                ),\n              }))}\n          />\n        </AboutField>\n      )}\n    </Grid>\n  );\n}\n"],"names":[],"mappings":"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"}