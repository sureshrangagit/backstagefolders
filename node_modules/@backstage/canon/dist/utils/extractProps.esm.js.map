{"version":3,"file":"extractProps.esm.js","sources":["../../src/utils/extractProps.ts"],"sourcesContent":["/*\n * Copyright 2025 The Backstage Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\ntype BasePropDef = {\n  type: string;\n  values?: readonly unknown[];\n  default?: unknown;\n  required?: boolean;\n  className?: string;\n  responsive?: true;\n  customProperties?: string[];\n};\n\nexport function extractProps(\n  props: {\n    className?: string;\n    style?: React.CSSProperties;\n    children?: React.ReactNode;\n    as?: keyof JSX.IntrinsicElements;\n    [key: string]: any;\n  },\n  propDefs: { [name in string]: BasePropDef },\n) {\n  let className: string[] = (props.className || '').split(' ');\n  let style: React.CSSProperties = { ...props.style };\n\n  for (const key in propDefs) {\n    const propDef = propDefs[key];\n\n    // Check if the prop is present or has a default value\n    if (!Object.hasOwn(props, key) && !propDef.hasOwnProperty('default')) {\n      continue; // Skip processing if neither is present\n    }\n\n    const value = Object.hasOwn(props, key)\n      ? (props[key] as unknown)\n      : propDefs[key].default;\n    const propDefsValues = propDef.values;\n    const propDefsCustomProperties = propDef.customProperties;\n    const propDefsClassName = propDef.className;\n    const isResponsive = propDef.responsive;\n\n    const handleValue = (val: unknown, prefix: string = '') => {\n      // Skip adding class name if the key is \"as\"\n      if (key === 'as') return;\n\n      if (propDefsValues?.includes(val)) {\n        className.push(`${prefix}${propDefsClassName}-${val}`);\n      } else {\n        if (propDefsCustomProperties) {\n          for (const customProperty of propDefsCustomProperties) {\n            const customPropertyKey =\n              isResponsive && prefix\n                ? `${customProperty}-${prefix.slice(0, -1)}`\n                : customProperty;\n            style[customPropertyKey as keyof typeof style] = val as any;\n          }\n        }\n        className.push(`${prefix}${propDefsClassName}`);\n      }\n    };\n\n    if (isResponsive && typeof value === 'object' && value !== null) {\n      const breakpointValues = value as { [key: string]: unknown };\n      // Handle responsive object values\n      for (const breakpoint in breakpointValues) {\n        const prefix = breakpoint === 'initial' ? '' : `${breakpoint}:`;\n        handleValue(breakpointValues[breakpoint], prefix);\n      }\n    } else {\n      handleValue(value);\n    }\n  }\n\n  // Ensure keys from props that are defined in propDefs are removed\n  const cleanedProps = Object.keys(props).reduce((acc, key) => {\n    if (!propDefs.hasOwnProperty(key)) {\n      acc[key] = props[key];\n    }\n    return acc;\n  }, {} as { [key: string]: any });\n\n  const newClassNames = className\n    .filter(name => name && name.trim() !== '')\n    .join(' ');\n\n  return { ...cleanedProps, className: newClassNames, style };\n}\n"],"names":[],"mappings":"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"}