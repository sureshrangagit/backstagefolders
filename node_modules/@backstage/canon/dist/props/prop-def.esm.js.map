{"version":3,"file":"prop-def.esm.js","sources":["../../src/props/prop-def.ts"],"sourcesContent":["/*\n * Copyright 2025 The Backstage Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport type { ReactNode } from 'react';\nimport type { Breakpoint, Responsive } from '../types';\n\n/** @public */\nconst breakpoints = ['initial', 'xs', 'sm', 'md', 'lg', 'xl'] as Breakpoint[];\n\n/** @public */\nexport type BooleanPropDef = {\n  type: 'boolean';\n  default?: boolean;\n  required?: boolean;\n  className?: string;\n};\n\n/** @public */\nexport type StringPropDef = {\n  type: 'string';\n  default?: string;\n  required?: boolean;\n};\n\n/** @public */\nexport type ReactNodePropDef = {\n  type: 'ReactNode';\n  default?: ReactNode;\n  required?: boolean;\n};\n\n/** @public */\nexport type EnumPropDef<T> = {\n  type: 'enum';\n  values: readonly T[];\n  default?: T;\n  required?: boolean;\n};\n\n/** @public */\nexport type EnumOrStringPropDef<T> = {\n  type: 'enum | string';\n  values: readonly T[];\n  default?: T | string;\n  required?: boolean;\n};\n\n/** @public */\nexport type NonStylingPropDef = {\n  className?: never;\n  customProperties?: never;\n  parseValue?: never;\n};\n\n/** @public */\nexport type StylingPropDef = {\n  className: string;\n  parseValue?: (value: string) => string | undefined;\n};\n\n/** @public */\nexport type ArbitraryStylingPropDef = {\n  className: string;\n  customProperties: `--${string}`[];\n  parseValue?: (value: string) => string | undefined;\n};\n\n/** @public */\nexport type RegularPropDef<T> =\n  | ReactNodePropDef\n  | BooleanPropDef\n  | (StringPropDef & ArbitraryStylingPropDef)\n  | (StringPropDef & NonStylingPropDef)\n  | (EnumPropDef<T> & StylingPropDef)\n  | (EnumPropDef<T> & NonStylingPropDef)\n  | (EnumOrStringPropDef<T> & ArbitraryStylingPropDef)\n  | (EnumOrStringPropDef<T> & NonStylingPropDef);\n\n/** @public */\ntype ResponsivePropDef<T = any> = RegularPropDef<T> & {\n  responsive: true;\n};\n\n/** @public */\ntype PropDef<T = any> = RegularPropDef<T> | ResponsivePropDef<T>;\n\n/** @public */\nexport type GetPropDefType<Def> = Def extends BooleanPropDef\n  ? Def extends ResponsivePropDef\n    ? Responsive<boolean>\n    : boolean\n  : Def extends StringPropDef\n  ? Def extends ResponsivePropDef\n    ? Responsive<string>\n    : string\n  : Def extends ReactNodePropDef\n  ? Def extends ResponsivePropDef\n    ? Responsive<ReactNode>\n    : ReactNode\n  : Def extends EnumOrStringPropDef<infer Type>\n  ? Def extends ResponsivePropDef<infer Type extends string>\n    ? Responsive<string | Type>\n    : string | Type\n  : Def extends EnumPropDef<infer Type>\n  ? Def extends ResponsivePropDef<infer Type>\n    ? Responsive<Type>\n    : Type\n  : never;\n\n/** @public */\ntype GetPropDefTypes<P> = {\n  [K in keyof P]?: GetPropDefType<P[K]>;\n};\n\nexport { breakpoints };\nexport type {\n  PropDef,\n  GetPropDefTypes,\n  ResponsivePropDef,\n  Breakpoint,\n  Responsive,\n};\n"],"names":[],"mappings":"AAmBA,MAAM,cAAc,CAAC,SAAA,EAAW,MAAM,IAAM,EAAA,IAAA,EAAM,MAAM,IAAI;;;;"}