import { useMediaQuery } from './useMediaQuery.esm.js';

const breakpoints = [
  { name: "Initial", id: "initial", value: 0 },
  { name: "Extra Small", id: "xs", value: 640 },
  { name: "Small", id: "sm", value: 768 },
  { name: "Medium", id: "md", value: 1024 },
  { name: "Large", id: "lg", value: 1280 },
  { name: "Extra Large", id: "xl", value: 1536 }
];
const useBreakpoint = () => {
  const matches = breakpoints.map((breakpoint2) => {
    return useMediaQuery(`(min-width: ${breakpoint2.value}px)`);
  });
  const upMatches = new Map(
    breakpoints.map((bp) => [bp.id, useMediaQuery(`(min-width: ${bp.value}px)`)])
  );
  const downMatches = new Map(
    breakpoints.map((bp) => [
      bp.id,
      useMediaQuery(`(max-width: ${bp.value - 1}px)`)
    ])
  );
  let breakpoint = breakpoints[0].id;
  for (let i = matches.length - 1; i >= 0; i--) {
    if (matches[i]) {
      breakpoint = breakpoints[i].id;
      break;
    }
  }
  return {
    breakpoint,
    up: (key) => {
      return upMatches.get(key) ?? false;
    },
    down: (key) => {
      return downMatches.get(key) ?? false;
    }
  };
};

export { breakpoints, useBreakpoint };
//# sourceMappingURL=useBreakpoint.esm.js.map
