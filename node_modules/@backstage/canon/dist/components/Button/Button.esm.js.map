{"version":3,"file":"Button.esm.js","sources":["../../../src/components/Button/Button.tsx"],"sourcesContent":["/*\n * Copyright 2024 The Backstage Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { forwardRef, useRef } from 'react';\nimport clsx from 'clsx';\nimport { useResponsiveValue } from '../../hooks/useResponsiveValue';\nimport { useRender } from '@base-ui-components/react/use-render';\n\nimport type { ButtonProps } from './types';\n\n/** @public */\nexport const Button = forwardRef<HTMLButtonElement, ButtonProps>(\n  (props: ButtonProps, ref) => {\n    const {\n      size = 'small',\n      variant = 'primary',\n      iconStart,\n      iconEnd,\n      children,\n      render = <button />,\n      className,\n      style,\n      ...rest\n    } = props;\n\n    // Get the responsive value for the variant\n    const responsiveSize = useResponsiveValue(size);\n    const responsiveVariant = useResponsiveValue(variant);\n    const internalRef = useRef<HTMLElement | null>(null);\n\n    const { renderElement } = useRender({\n      render,\n      props: {\n        className: clsx('canon-Button', className),\n        ['data-variant']: responsiveVariant,\n        ['data-size']: responsiveSize,\n        ...rest,\n        children: (\n          <>\n            {iconStart && (\n              <span\n                className=\"canon-ButtonIcon\"\n                aria-hidden=\"true\"\n                data-size={responsiveSize}\n              >\n                {iconStart}\n              </span>\n            )}\n            {children}\n            {iconEnd && (\n              <span\n                className=\"canon-ButtonIcon\"\n                aria-hidden=\"true\"\n                data-size={responsiveSize}\n              >\n                {iconEnd}\n              </span>\n            )}\n          </>\n        ),\n      },\n      refs: [ref, internalRef],\n    });\n\n    return renderElement();\n  },\n);\n\nexport default Button;\n"],"names":[],"mappings":";;;;;;AAwBO,MAAM,MAAS,GAAA,UAAA;AAAA,EACpB,CAAC,OAAoB,GAAQ,KAAA;AAC3B,IAAM,MAAA;AAAA,MACJ,IAAO,GAAA,OAAA;AAAA,MACP,OAAU,GAAA,SAAA;AAAA,MACV,SAAA;AAAA,MACA,OAAA;AAAA,MACA,QAAA;AAAA,MACA,MAAA,uBAAU,QAAO,EAAA,EAAA,CAAA;AAAA,MACjB,SAAA;AAAA,MACA,KAAA;AAAA,MACA,GAAG;AAAA,KACD,GAAA,KAAA;AAGJ,IAAM,MAAA,cAAA,GAAiB,mBAAmB,IAAI,CAAA;AAC9C,IAAM,MAAA,iBAAA,GAAoB,mBAAmB,OAAO,CAAA;AACpD,IAAM,MAAA,WAAA,GAAc,OAA2B,IAAI,CAAA;AAEnD,IAAM,MAAA,EAAE,aAAc,EAAA,GAAI,SAAU,CAAA;AAAA,MAClC,MAAA;AAAA,MACA,KAAO,EAAA;AAAA,QACL,SAAA,EAAW,IAAK,CAAA,cAAA,EAAgB,SAAS,CAAA;AAAA,QACzC,CAAC,cAAc,GAAG,iBAAA;AAAA,QAClB,CAAC,WAAW,GAAG,cAAA;AAAA,QACf,GAAG,IAAA;AAAA,QACH,0BAEK,IAAA,CAAA,QAAA,EAAA,EAAA,QAAA,EAAA;AAAA,UACC,SAAA,oBAAA,GAAA;AAAA,YAAC,MAAA;AAAA,YAAA;AAAA,cACC,SAAU,EAAA,kBAAA;AAAA,cACV,aAAY,EAAA,MAAA;AAAA,cACZ,WAAW,EAAA,cAAA;AAAA,cAEV,QAAA,EAAA;AAAA;AAAA,WACH;AAAA,UAED,QAAA;AAAA,UACA,OACC,oBAAA,GAAA;AAAA,YAAC,MAAA;AAAA,YAAA;AAAA,cACC,SAAU,EAAA,kBAAA;AAAA,cACV,aAAY,EAAA,MAAA;AAAA,cACZ,WAAW,EAAA,cAAA;AAAA,cAEV,QAAA,EAAA;AAAA;AAAA;AACH,SAEJ,EAAA;AAAA,OAEJ;AAAA,MACA,IAAA,EAAM,CAAC,GAAA,EAAK,WAAW;AAAA,KACxB,CAAA;AAED,IAAA,OAAO,aAAc,EAAA;AAAA;AAEzB;;;;"}