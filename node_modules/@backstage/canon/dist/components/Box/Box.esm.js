import { forwardRef, createElement } from 'react';
import clsx from 'clsx';
import { extractProps } from '../../utils/extractProps.esm.js';
import { spacingPropDefs } from '../../props/spacing.props.esm.js';
import { boxPropDefs } from './Box.props.esm.js';
import { widthPropDefs } from '../../props/width.props.esm.js';
import { heightPropDefs } from '../../props/height.props.esm.js';
import { positionPropDefs } from '../../props/position.props.esm.js';
import { displayPropDefs } from '../../props/display.props.esm.js';

const Box = forwardRef((props, ref) => {
  const { children } = props;
  const propDefs = {
    ...spacingPropDefs,
    ...widthPropDefs,
    ...heightPropDefs,
    ...positionPropDefs,
    ...displayPropDefs,
    ...boxPropDefs
  };
  const { className, style } = extractProps(props, propDefs);
  return createElement(props.as || "div", {
    ref,
    className: clsx("canon-Box", className),
    style,
    children
  });
});
Box.displayName = "Box";

export { Box };
//# sourceMappingURL=Box.esm.js.map
