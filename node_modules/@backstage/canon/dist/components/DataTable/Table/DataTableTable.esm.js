import { jsxs, jsx } from 'react/jsx-runtime';
import { forwardRef } from 'react';
import clsx from 'clsx';
import { Table } from '../../Table/Table.esm.js';
import { useDataTable } from '../Root/DataTableRoot.esm.js';
import { flexRender } from '@tanstack/react-table';

const DataTableTable = forwardRef(
  (props, ref) => {
    const { className, ...rest } = props;
    const { table } = useDataTable();
    return /* @__PURE__ */ jsxs(
      Table.Root,
      {
        ref,
        style: { minWidth: table.getTotalSize() },
        className: clsx(className),
        ...rest,
        children: [
          /* @__PURE__ */ jsx(Table.Header, { children: table.getHeaderGroups().map((headerGroup) => /* @__PURE__ */ jsx(Table.Row, { children: headerGroup.headers.map((header) => {
            return /* @__PURE__ */ jsx(
              Table.Head,
              {
                style: { width: header.getSize() },
                children: header.isPlaceholder ? null : flexRender(
                  header.column.columnDef.header,
                  header.getContext()
                )
              },
              header.id
            );
          }) }, headerGroup.id)) }),
          /* @__PURE__ */ jsx(Table.Body, { children: table.getRowModel().rows?.length ? table.getRowModel().rows.map((row) => /* @__PURE__ */ jsx(
            Table.Row,
            {
              "data-state": row.getIsSelected() && "selected",
              children: row.getVisibleCells().map((cell) => /* @__PURE__ */ jsx(
                Table.Cell,
                {
                  style: { width: cell.column.getSize() },
                  children: flexRender(cell.column.columnDef.cell, cell.getContext())
                },
                cell.id
              ))
            },
            row.id
          )) : /* @__PURE__ */ jsx(Table.Row, { children: /* @__PURE__ */ jsx(
            Table.Cell,
            {
              colSpan: table.getAllColumns().length,
              className: "h-24 text-center",
              style: { width: table.getTotalSize() },
              children: "No results."
            }
          ) }) })
        ]
      }
    );
  }
);
DataTableTable.displayName = "DataTableRoot";

export { DataTableTable };
//# sourceMappingURL=DataTableTable.esm.js.map
