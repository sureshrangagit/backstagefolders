{"version":3,"file":"OngoingTask.esm.js","sources":["../../../src/components/OngoingTask/OngoingTask.tsx"],"sourcesContent":["/*\n * Copyright 2023 The Backstage Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport {\n  ComponentType,\n  useCallback,\n  useEffect,\n  useMemo,\n  useState,\n} from 'react';\nimport { Content, ErrorPanel, Header, Page } from '@backstage/core-components';\nimport { useNavigate, useParams } from 'react-router-dom';\nimport Box from '@material-ui/core/Box';\nimport Button from '@material-ui/core/Button';\nimport Paper from '@material-ui/core/Paper';\nimport { makeStyles } from '@material-ui/core/styles';\nimport {\n  scaffolderApiRef,\n  ScaffolderTaskOutput,\n  useTaskEventStream,\n} from '@backstage/plugin-scaffolder-react';\nimport { selectedTemplateRouteRef } from '../../routes';\nimport {\n  AnalyticsContext,\n  useAnalytics,\n  useApi,\n  useRouteRef,\n} from '@backstage/core-plugin-api';\nimport qs from 'qs';\nimport { ContextMenu } from './ContextMenu';\nimport {\n  DefaultTemplateOutputs,\n  TaskLogStream,\n  TaskSteps,\n} from '@backstage/plugin-scaffolder-react/alpha';\nimport { useAsync } from '@react-hookz/web';\nimport { usePermission } from '@backstage/plugin-permission-react';\nimport {\n  taskCancelPermission,\n  taskCreatePermission,\n  taskReadPermission,\n} from '@backstage/plugin-scaffolder-common/alpha';\nimport { useTranslationRef } from '@backstage/core-plugin-api/alpha';\nimport { scaffolderTranslationRef } from '../../translation';\nimport { entityPresentationApiRef } from '@backstage/plugin-catalog-react';\nimport { default as reactUseAsync } from 'react-use/esm/useAsync';\nimport { stringifyEntityRef } from '@backstage/catalog-model';\n\nconst useStyles = makeStyles(theme => ({\n  contentWrapper: {\n    display: 'flex',\n    flexDirection: 'column',\n  },\n  buttonBar: {\n    display: 'flex',\n    flexDirection: 'row',\n    justifyContent: 'right',\n  },\n  cancelButton: {\n    marginRight: theme.spacing(1),\n  },\n  retryButton: {\n    marginRight: theme.spacing(1),\n  },\n  logsVisibilityButton: {\n    marginRight: theme.spacing(1),\n  },\n}));\n\n/**\n * @public\n */\nexport const OngoingTask = (props: {\n  TemplateOutputsComponent?: ComponentType<{\n    output?: ScaffolderTaskOutput;\n  }>;\n}) => {\n  // todo(blam): check that task Id actually exists, and that it's valid. otherwise redirect to something more useful.\n  const { taskId } = useParams();\n  const taskStream = useTaskEventStream(taskId!);\n  const { namespace, name } =\n    taskStream.task?.spec.templateInfo?.entity?.metadata ?? {};\n\n  return (\n    <AnalyticsContext\n      attributes={{\n        entityRef:\n          name &&\n          stringifyEntityRef({\n            kind: 'template',\n            namespace,\n            name,\n          }),\n        taskId,\n      }}\n    >\n      <Page themeId=\"website\">\n        <OngoingTaskContent {...props} />\n      </Page>\n    </AnalyticsContext>\n  );\n};\n\nfunction OngoingTaskContent(props: {\n  TemplateOutputsComponent?: ComponentType<{\n    output?: ScaffolderTaskOutput;\n  }>;\n}) {\n  const { taskId } = useParams();\n  const templateRouteRef = useRouteRef(selectedTemplateRouteRef);\n  const navigate = useNavigate();\n  const analytics = useAnalytics();\n  const scaffolderApi = useApi(scaffolderApiRef);\n  const entityPresentationApi = useApi(entityPresentationApiRef);\n  const taskStream = useTaskEventStream(taskId!);\n  const classes = useStyles();\n  const steps = useMemo(\n    () =>\n      taskStream.task?.spec.steps.map(step => ({\n        ...step,\n        ...taskStream?.steps?.[step.id],\n      })) ?? [],\n    [taskStream],\n  );\n  const { t } = useTranslationRef(scaffolderTranslationRef);\n\n  const [logsVisible, setLogVisibleState] = useState(false);\n  const [buttonBarVisible, setButtonBarVisibleState] = useState(true);\n\n  // Used dummy string value for `resourceRef` since `allowed` field will always return `false` if `resourceRef` is `undefined`\n  const { allowed: canCancelTask } = usePermission({\n    permission: taskCancelPermission,\n  });\n\n  const { allowed: canReadTask } = usePermission({\n    permission: taskReadPermission,\n  });\n\n  const { allowed: canCreateTask } = usePermission({\n    permission: taskCreatePermission,\n  });\n\n  // Start Over endpoint requires user to have both read (to grab parameters) and create (to create new task) permissions\n  const canStartOver = canReadTask && canCreateTask;\n\n  useEffect(() => {\n    if (taskStream.error) {\n      setLogVisibleState(true);\n    }\n  }, [taskStream.error]);\n\n  useEffect(() => {\n    if (taskStream.completed && !taskStream.error) {\n      setLogVisibleState(true);\n      setButtonBarVisibleState(false);\n    }\n  }, [taskStream.error, taskStream.completed]);\n\n  const { value: presentation } = reactUseAsync(async () => {\n    const templateEntityRef = taskStream.task?.spec.templateInfo?.entityRef;\n    if (!templateEntityRef) {\n      return undefined;\n    }\n    return entityPresentationApi.forEntity(templateEntityRef).promise;\n  }, [entityPresentationApi, taskStream.task?.spec.templateInfo?.entityRef]);\n\n  const activeStep = useMemo(() => {\n    for (let i = steps.length - 1; i >= 0; i--) {\n      if (steps[i].status !== 'open') {\n        return i;\n      }\n    }\n\n    return 0;\n  }, [steps]);\n\n  const isRetryableTask =\n    taskStream.task?.spec.EXPERIMENTAL_recovery?.EXPERIMENTAL_strategy ===\n    'startOver';\n\n  const canRetry = canReadTask && canCreateTask && isRetryableTask;\n\n  const startOver = useCallback(() => {\n    const { namespace, name } =\n      taskStream.task?.spec.templateInfo?.entity?.metadata ?? {};\n\n    const formData = taskStream.task?.spec.parameters ?? {};\n\n    if (!namespace || !name) {\n      return;\n    }\n\n    analytics.captureEvent('click', `Task has been started over`);\n\n    navigate({\n      pathname: templateRouteRef({\n        namespace,\n        templateName: name,\n      }),\n      search: `?${qs.stringify({ formData: JSON.stringify(formData) })}`,\n    });\n  }, [\n    analytics,\n    navigate,\n    taskStream.task?.spec.parameters,\n    taskStream.task?.spec.templateInfo?.entity?.metadata,\n    templateRouteRef,\n  ]);\n\n  const [, { execute: triggerRetry }] = useAsync(async () => {\n    if (taskId) {\n      analytics.captureEvent('retried', 'Template has been retried');\n      await scaffolderApi.retry?.(taskId);\n    }\n  });\n\n  const [{ status: cancelStatus }, { execute: triggerCancel }] = useAsync(\n    async () => {\n      if (taskId) {\n        analytics.captureEvent('cancelled', 'Template has been cancelled');\n        await scaffolderApi.cancelTask(taskId);\n      }\n    },\n  );\n\n  const Outputs = props.TemplateOutputsComponent ?? DefaultTemplateOutputs;\n\n  const cancelEnabled = !(taskStream.cancelled || taskStream.completed);\n  const isCancelButtonDisabled =\n    !cancelEnabled || cancelStatus !== 'not-executed' || !canCancelTask;\n\n  return (\n    <>\n      <Header\n        pageTitleOverride={\n          presentation\n            ? t('ongoingTask.pageTitle.hasTemplateName', {\n                templateName: presentation.primaryTitle,\n              })\n            : t('ongoingTask.pageTitle.noTemplateName')\n        }\n        title={\n          <div>\n            {t('ongoingTask.title')}{' '}\n            <code>{presentation ? presentation.primaryTitle : ''}</code>\n          </div>\n        }\n        subtitle={t('ongoingTask.subtitle', { taskId: taskId as string })}\n      >\n        <ContextMenu\n          cancelEnabled={cancelEnabled}\n          canRetry={canRetry}\n          isRetryableTask={isRetryableTask}\n          logsVisible={logsVisible}\n          buttonBarVisible={buttonBarVisible}\n          onStartOver={startOver}\n          onRetry={triggerRetry}\n          onToggleLogs={setLogVisibleState}\n          onToggleButtonBar={setButtonBarVisibleState}\n          onCancel={triggerCancel}\n          isCancelButtonDisabled={isCancelButtonDisabled}\n        />\n      </Header>\n      <Content className={classes.contentWrapper}>\n        {taskStream.error ? (\n          <Box paddingBottom={2}>\n            <ErrorPanel\n              error={taskStream.error}\n              titleFormat=\"markdown\"\n              title={taskStream.error.message}\n            />\n          </Box>\n        ) : null}\n\n        <Box paddingBottom={2}>\n          <TaskSteps\n            steps={steps}\n            activeStep={activeStep}\n            isComplete={taskStream.completed}\n            isError={Boolean(taskStream.error)}\n          />\n        </Box>\n\n        <Outputs output={taskStream.output} />\n\n        {buttonBarVisible ? (\n          <Box paddingBottom={2}>\n            <Paper>\n              <Box padding={2}>\n                <div className={classes.buttonBar}>\n                  <Button\n                    className={classes.cancelButton}\n                    disabled={\n                      !cancelEnabled ||\n                      (cancelStatus !== 'not-executed' && !isRetryableTask) ||\n                      !canCancelTask\n                    }\n                    onClick={triggerCancel}\n                    data-testid=\"cancel-button\"\n                  >\n                    {t('ongoingTask.cancelButtonTitle')}\n                  </Button>\n                  {isRetryableTask && (\n                    <Button\n                      className={classes.retryButton}\n                      disabled={cancelEnabled || !canRetry}\n                      onClick={triggerRetry}\n                      data-testid=\"retry-button\"\n                    >\n                      {t('ongoingTask.retryButtonTitle')}\n                    </Button>\n                  )}\n                  <Button\n                    className={classes.logsVisibilityButton}\n                    color=\"primary\"\n                    variant=\"outlined\"\n                    onClick={() => setLogVisibleState(!logsVisible)}\n                  >\n                    {logsVisible\n                      ? t('ongoingTask.hideLogsButtonTitle')\n                      : t('ongoingTask.showLogsButtonTitle')}\n                  </Button>\n                  <Button\n                    variant=\"contained\"\n                    color=\"primary\"\n                    disabled={cancelEnabled || !canStartOver}\n                    onClick={startOver}\n                    data-testid=\"start-over-button\"\n                  >\n                    {t('ongoingTask.startOverButtonTitle')}\n                  </Button>\n                </div>\n              </Box>\n            </Paper>\n          </Box>\n        ) : null}\n\n        {logsVisible ? (\n          <Paper style={{ height: '100%' }}>\n            <Box padding={2} height=\"100%\">\n              <TaskLogStream logs={taskStream.stepLogs} />\n            </Box>\n          </Paper>\n        ) : null}\n      </Content>\n    </>\n  );\n}\n"],"names":["reactUseAsync","useAsync"],"mappings":"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"}