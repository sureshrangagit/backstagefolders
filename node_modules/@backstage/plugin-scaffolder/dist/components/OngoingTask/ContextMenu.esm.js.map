{"version":3,"file":"ContextMenu.esm.js","sources":["../../../src/components/OngoingTask/ContextMenu.tsx"],"sourcesContent":["/*\n * Copyright 2023 The Backstage Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport IconButton from '@material-ui/core/IconButton';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport MenuList from '@material-ui/core/MenuList';\nimport Popover from '@material-ui/core/Popover';\nimport { makeStyles, Theme, useTheme } from '@material-ui/core/styles';\nimport Cancel from '@material-ui/icons/Cancel';\nimport Repeat from '@material-ui/icons/Repeat';\nimport Replay from '@material-ui/icons/Replay';\nimport Toc from '@material-ui/icons/Toc';\nimport ControlPointIcon from '@material-ui/icons/ControlPoint';\nimport MoreVert from '@material-ui/icons/MoreVert';\nimport { SyntheticEvent, useState } from 'react';\nimport { usePermission } from '@backstage/plugin-permission-react';\nimport {\n  taskReadPermission,\n  taskCreatePermission,\n} from '@backstage/plugin-scaffolder-common/alpha';\nimport { useTranslationRef } from '@backstage/core-plugin-api/alpha';\nimport { scaffolderTranslationRef } from '../../translation';\n\ntype ContextMenuProps = {\n  cancelEnabled?: boolean;\n  canRetry: boolean;\n  isRetryableTask: boolean;\n  logsVisible?: boolean;\n  buttonBarVisible?: boolean;\n  onRetry?: () => void;\n  onStartOver?: () => void;\n  onToggleLogs?: (state: boolean) => void;\n  onToggleButtonBar?: (state: boolean) => void;\n  isCancelButtonDisabled: boolean;\n  onCancel: () => void;\n};\n\nconst useStyles = makeStyles<Theme, { fontColor: string }>(() => ({\n  button: {\n    color: ({ fontColor }) => fontColor,\n  },\n}));\n\nexport const ContextMenu = (props: ContextMenuProps) => {\n  const {\n    cancelEnabled,\n    canRetry,\n    isRetryableTask,\n    logsVisible,\n    buttonBarVisible,\n    onRetry,\n    onStartOver,\n    onToggleLogs,\n    onToggleButtonBar,\n  } = props;\n  const { getPageTheme } = useTheme();\n  const pageTheme = getPageTheme({ themeId: 'website' });\n  const classes = useStyles({ fontColor: pageTheme.fontColor });\n  const [anchorEl, setAnchorEl] = useState<HTMLButtonElement>();\n  const { t } = useTranslationRef(scaffolderTranslationRef);\n\n  const { allowed: canReadTask } = usePermission({\n    permission: taskReadPermission,\n  });\n\n  const { allowed: canCreateTask } = usePermission({\n    permission: taskCreatePermission,\n  });\n\n  // Start Over endpoint requires user to have both read (to grab parameters) and create (to create new task) permissions\n  const canStartOver = canReadTask && canCreateTask;\n\n  return (\n    <>\n      <IconButton\n        aria-label=\"more\"\n        aria-controls=\"long-menu\"\n        aria-haspopup=\"true\"\n        onClick={(event: SyntheticEvent<HTMLButtonElement>) => {\n          setAnchorEl(event.currentTarget);\n        }}\n        data-testid=\"menu-button\"\n        className={classes.button}\n      >\n        <MoreVert />\n      </IconButton>\n      <Popover\n        open={Boolean(anchorEl)}\n        onClose={() => setAnchorEl(undefined)}\n        anchorEl={anchorEl}\n        anchorOrigin={{ vertical: 'bottom', horizontal: 'right' }}\n        transformOrigin={{ vertical: 'top', horizontal: 'right' }}\n      >\n        <MenuList>\n          <MenuItem onClick={() => onToggleLogs?.(!logsVisible)}>\n            <ListItemIcon>\n              <Toc fontSize=\"small\" />\n            </ListItemIcon>\n            <ListItemText\n              primary={\n                logsVisible\n                  ? t('ongoingTask.contextMenu.hideLogs')\n                  : t('ongoingTask.contextMenu.showLogs')\n              }\n            />\n          </MenuItem>\n          <MenuItem onClick={() => onToggleButtonBar?.(!buttonBarVisible)}>\n            <ListItemIcon>\n              <ControlPointIcon fontSize=\"small\" />\n            </ListItemIcon>\n            <ListItemText\n              primary={\n                buttonBarVisible\n                  ? t('ongoingTask.contextMenu.hideButtonBar')\n                  : t('ongoingTask.contextMenu.showButtonBar')\n              }\n            />\n          </MenuItem>\n          <MenuItem\n            onClick={onStartOver}\n            disabled={cancelEnabled || !canStartOver}\n            data-testid=\"start-over-task\"\n          >\n            <ListItemIcon>\n              <Repeat fontSize=\"small\" />\n            </ListItemIcon>\n            <ListItemText primary={t('ongoingTask.contextMenu.startOver')} />\n          </MenuItem>\n          {isRetryableTask && (\n            <MenuItem\n              onClick={onRetry}\n              disabled={cancelEnabled || !canRetry}\n              data-testid=\"retry-task\"\n            >\n              <ListItemIcon>\n                <Replay fontSize=\"small\" />\n              </ListItemIcon>\n              <ListItemText primary={t('ongoingTask.contextMenu.retry')} />\n            </MenuItem>\n          )}\n          <MenuItem\n            onClick={props.onCancel}\n            disabled={props.isCancelButtonDisabled}\n            data-testid=\"cancel-task\"\n          >\n            <ListItemIcon>\n              <Cancel fontSize=\"small\" />\n            </ListItemIcon>\n            <ListItemText primary={t('ongoingTask.contextMenu.cancel')} />\n          </MenuItem>\n        </MenuList>\n      </Popover>\n    </>\n  );\n};\n"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;AAoDA,MAAM,SAAA,GAAY,WAAyC,OAAO;AAAA,EAChE,MAAQ,EAAA;AAAA,IACN,KAAO,EAAA,CAAC,EAAE,SAAA,EAAgB,KAAA;AAAA;AAE9B,CAAE,CAAA,CAAA;AAEW,MAAA,WAAA,GAAc,CAAC,KAA4B,KAAA;AACtD,EAAM,MAAA;AAAA,IACJ,aAAA;AAAA,IACA,QAAA;AAAA,IACA,eAAA;AAAA,IACA,WAAA;AAAA,IACA,gBAAA;AAAA,IACA,OAAA;AAAA,IACA,WAAA;AAAA,IACA,YAAA;AAAA,IACA;AAAA,GACE,GAAA,KAAA;AACJ,EAAM,MAAA,EAAE,YAAa,EAAA,GAAI,QAAS,EAAA;AAClC,EAAA,MAAM,SAAY,GAAA,YAAA,CAAa,EAAE,OAAA,EAAS,WAAW,CAAA;AACrD,EAAA,MAAM,UAAU,SAAU,CAAA,EAAE,SAAW,EAAA,SAAA,CAAU,WAAW,CAAA;AAC5D,EAAA,MAAM,CAAC,QAAA,EAAU,WAAW,CAAA,GAAI,QAA4B,EAAA;AAC5D,EAAA,MAAM,EAAE,CAAA,EAAM,GAAA,iBAAA,CAAkB,wBAAwB,CAAA;AAExD,EAAA,MAAM,EAAE,OAAA,EAAS,WAAY,EAAA,GAAI,aAAc,CAAA;AAAA,IAC7C,UAAY,EAAA;AAAA,GACb,CAAA;AAED,EAAA,MAAM,EAAE,OAAA,EAAS,aAAc,EAAA,GAAI,aAAc,CAAA;AAAA,IAC/C,UAAY,EAAA;AAAA,GACb,CAAA;AAGD,EAAA,MAAM,eAAe,WAAe,IAAA,aAAA;AAEpC,EAAA,uBAEI,IAAA,CAAA,QAAA,EAAA,EAAA,QAAA,EAAA;AAAA,oBAAA,GAAA;AAAA,MAAC,UAAA;AAAA,MAAA;AAAA,QACC,YAAW,EAAA,MAAA;AAAA,QACX,eAAc,EAAA,WAAA;AAAA,QACd,eAAc,EAAA,MAAA;AAAA,QACd,OAAA,EAAS,CAAC,KAA6C,KAAA;AACrD,UAAA,WAAA,CAAY,MAAM,aAAa,CAAA;AAAA,SACjC;AAAA,QACA,aAAY,EAAA,aAAA;AAAA,QACZ,WAAW,OAAQ,CAAA,MAAA;AAAA,QAEnB,8BAAC,QAAS,EAAA,EAAA;AAAA;AAAA,KACZ;AAAA,oBACA,GAAA;AAAA,MAAC,OAAA;AAAA,MAAA;AAAA,QACC,IAAA,EAAM,QAAQ,QAAQ,CAAA;AAAA,QACtB,OAAA,EAAS,MAAM,WAAA,CAAY,KAAS,CAAA,CAAA;AAAA,QACpC,QAAA;AAAA,QACA,YAAc,EAAA,EAAE,QAAU,EAAA,QAAA,EAAU,YAAY,OAAQ,EAAA;AAAA,QACxD,eAAiB,EAAA,EAAE,QAAU,EAAA,KAAA,EAAO,YAAY,OAAQ,EAAA;AAAA,QAExD,+BAAC,QACC,EAAA,EAAA,QAAA,EAAA;AAAA,0BAAA,IAAA,CAAC,YAAS,OAAS,EAAA,MAAM,YAAe,GAAA,CAAC,WAAW,CAClD,EAAA,QAAA,EAAA;AAAA,4BAAA,GAAA,CAAC,YACC,EAAA,EAAA,QAAA,kBAAA,GAAA,CAAC,GAAI,EAAA,EAAA,QAAA,EAAS,SAAQ,CACxB,EAAA,CAAA;AAAA,4BACA,GAAA;AAAA,cAAC,YAAA;AAAA,cAAA;AAAA,gBACC,SACE,WACI,GAAA,CAAA,CAAE,kCAAkC,CAAA,GACpC,EAAE,kCAAkC;AAAA;AAAA;AAE5C,WACF,EAAA,CAAA;AAAA,+BACC,QAAS,EAAA,EAAA,OAAA,EAAS,MAAM,iBAAoB,GAAA,CAAC,gBAAgB,CAC5D,EAAA,QAAA,EAAA;AAAA,4BAAA,GAAA,CAAC,YACC,EAAA,EAAA,QAAA,kBAAA,GAAA,CAAC,gBAAiB,EAAA,EAAA,QAAA,EAAS,SAAQ,CACrC,EAAA,CAAA;AAAA,4BACA,GAAA;AAAA,cAAC,YAAA;AAAA,cAAA;AAAA,gBACC,SACE,gBACI,GAAA,CAAA,CAAE,uCAAuC,CAAA,GACzC,EAAE,uCAAuC;AAAA;AAAA;AAEjD,WACF,EAAA,CAAA;AAAA,0BACA,IAAA;AAAA,YAAC,QAAA;AAAA,YAAA;AAAA,cACC,OAAS,EAAA,WAAA;AAAA,cACT,QAAA,EAAU,iBAAiB,CAAC,YAAA;AAAA,cAC5B,aAAY,EAAA,iBAAA;AAAA,cAEZ,QAAA,EAAA;AAAA,gCAAA,GAAA,CAAC,YACC,EAAA,EAAA,QAAA,kBAAA,GAAA,CAAC,MAAO,EAAA,EAAA,QAAA,EAAS,SAAQ,CAC3B,EAAA,CAAA;AAAA,gCACC,GAAA,CAAA,YAAA,EAAA,EAAa,OAAS,EAAA,CAAA,CAAE,mCAAmC,CAAG,EAAA;AAAA;AAAA;AAAA,WACjE;AAAA,UACC,eACC,oBAAA,IAAA;AAAA,YAAC,QAAA;AAAA,YAAA;AAAA,cACC,OAAS,EAAA,OAAA;AAAA,cACT,QAAA,EAAU,iBAAiB,CAAC,QAAA;AAAA,cAC5B,aAAY,EAAA,YAAA;AAAA,cAEZ,QAAA,EAAA;AAAA,gCAAA,GAAA,CAAC,YACC,EAAA,EAAA,QAAA,kBAAA,GAAA,CAAC,MAAO,EAAA,EAAA,QAAA,EAAS,SAAQ,CAC3B,EAAA,CAAA;AAAA,gCACC,GAAA,CAAA,YAAA,EAAA,EAAa,OAAS,EAAA,CAAA,CAAE,+BAA+B,CAAG,EAAA;AAAA;AAAA;AAAA,WAC7D;AAAA,0BAEF,IAAA;AAAA,YAAC,QAAA;AAAA,YAAA;AAAA,cACC,SAAS,KAAM,CAAA,QAAA;AAAA,cACf,UAAU,KAAM,CAAA,sBAAA;AAAA,cAChB,aAAY,EAAA,aAAA;AAAA,cAEZ,QAAA,EAAA;AAAA,gCAAA,GAAA,CAAC,YACC,EAAA,EAAA,QAAA,kBAAA,GAAA,CAAC,MAAO,EAAA,EAAA,QAAA,EAAS,SAAQ,CAC3B,EAAA,CAAA;AAAA,gCACC,GAAA,CAAA,YAAA,EAAA,EAAa,OAAS,EAAA,CAAA,CAAE,gCAAgC,CAAG,EAAA;AAAA;AAAA;AAAA;AAC9D,SACF,EAAA;AAAA;AAAA;AACF,GACF,EAAA,CAAA;AAEJ;;;;"}