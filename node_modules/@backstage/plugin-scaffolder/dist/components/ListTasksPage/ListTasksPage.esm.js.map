{"version":3,"file":"ListTasksPage.esm.js","sources":["../../../src/components/ListTasksPage/ListTasksPage.tsx"],"sourcesContent":["/*\n * Copyright 2022 The Backstage Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport {\n  Content,\n  EmptyState,\n  ErrorPanel,\n  Header,\n  Link,\n  Page,\n  Progress,\n  Table,\n} from '@backstage/core-components';\nimport { useApi, useRouteRef } from '@backstage/core-plugin-api';\nimport { CatalogFilterLayout } from '@backstage/plugin-catalog-react';\nimport useAsync from 'react-use/esm/useAsync';\nimport { useState } from 'react';\nimport {\n  scaffolderApiRef,\n  ScaffolderTask,\n} from '@backstage/plugin-scaffolder-react';\nimport { OwnerListPicker } from './OwnerListPicker';\nimport {\n  CreatedAtColumn,\n  OwnerEntityColumn,\n  TaskStatusColumn,\n  TemplateTitleColumn,\n} from './columns';\nimport {\n  actionsRouteRef,\n  editRouteRef,\n  rootRouteRef,\n  templatingExtensionsRouteRef,\n} from '../../routes';\nimport { ScaffolderPageContextMenu } from '@backstage/plugin-scaffolder-react/alpha';\nimport { useNavigate } from 'react-router-dom';\nimport { useTranslationRef } from '@backstage/core-plugin-api/alpha';\nimport { scaffolderTranslationRef } from '../../translation';\n\nexport interface MyTaskPageProps {\n  initiallySelectedFilter?: 'owned' | 'all';\n  contextMenu?: {\n    editor?: boolean;\n    actions?: boolean;\n    create?: boolean;\n  };\n}\n\nconst ListTaskPageContent = (props: MyTaskPageProps) => {\n  const { initiallySelectedFilter = 'owned' } = props;\n  const { t } = useTranslationRef(scaffolderTranslationRef);\n  const [limit, setLimit] = useState(5);\n  const [page, setPage] = useState(0);\n\n  const scaffolderApi = useApi(scaffolderApiRef);\n  const rootLink = useRouteRef(rootRouteRef);\n\n  const [ownerFilter, setOwnerFilter] = useState(initiallySelectedFilter);\n  const { value, loading, error } = useAsync(() => {\n    if (scaffolderApi.listTasks) {\n      return scaffolderApi.listTasks?.({\n        filterByOwnership: ownerFilter,\n        limit,\n        offset: page * limit,\n      });\n    }\n\n    // eslint-disable-next-line no-console\n    console.warn(\n      'listTasks is not implemented in the scaffolderApi, please make sure to implement this method.',\n    );\n\n    return Promise.resolve({ tasks: [], totalTasks: 0 });\n  }, [scaffolderApi, ownerFilter, limit, page]);\n\n  if (loading) {\n    return <Progress />;\n  }\n\n  if (error) {\n    return (\n      <>\n        <ErrorPanel error={error} />\n        <EmptyState\n          missing=\"info\"\n          title={t('listTaskPage.content.emptyState.title')}\n          description={t('listTaskPage.content.emptyState.description')}\n        />\n      </>\n    );\n  }\n\n  return (\n    <CatalogFilterLayout>\n      <CatalogFilterLayout.Filters>\n        <OwnerListPicker\n          filter={ownerFilter}\n          onSelectOwner={id => setOwnerFilter(id)}\n        />\n      </CatalogFilterLayout.Filters>\n      <CatalogFilterLayout.Content>\n        <Table<ScaffolderTask>\n          onRowsPerPageChange={pageSize => {\n            setPage(0);\n            setLimit(pageSize);\n          }}\n          onPageChange={newPage => setPage(newPage)}\n          options={{ pageSize: limit, emptyRowsWhenPaging: false }}\n          data={value?.tasks ?? []}\n          page={page}\n          totalCount={value?.totalTasks ?? 0}\n          title={t('listTaskPage.content.tableTitle')}\n          columns={[\n            {\n              title: t('listTaskPage.content.tableCell.taskID'),\n              field: 'id',\n              render: row => (\n                <Link to={`${rootLink()}/tasks/${row.id}`}>{row.id}</Link>\n              ),\n            },\n            {\n              title: t('listTaskPage.content.tableCell.template'),\n              field: 'spec.templateInfo.entity.metadata.title',\n              render: row => (\n                <TemplateTitleColumn\n                  entityRef={row.spec.templateInfo?.entityRef}\n                />\n              ),\n            },\n            {\n              title: t('listTaskPage.content.tableCell.created'),\n              field: 'createdAt',\n              render: row => <CreatedAtColumn createdAt={row.createdAt} />,\n            },\n            {\n              title: t('listTaskPage.content.tableCell.owner'),\n              field: 'createdBy',\n              render: row => (\n                <OwnerEntityColumn entityRef={row.spec?.user?.ref} />\n              ),\n            },\n            {\n              title: t('listTaskPage.content.tableCell.status'),\n              field: 'status',\n              render: row => <TaskStatusColumn status={row.status} />,\n            },\n          ]}\n        />\n      </CatalogFilterLayout.Content>\n    </CatalogFilterLayout>\n  );\n};\n\nexport const ListTasksPage = (props: MyTaskPageProps) => {\n  const navigate = useNavigate();\n  const editorLink = useRouteRef(editRouteRef);\n  const actionsLink = useRouteRef(actionsRouteRef);\n  const createLink = useRouteRef(rootRouteRef);\n  const { t } = useTranslationRef(scaffolderTranslationRef);\n  const templatingExtensionsLink = useRouteRef(templatingExtensionsRouteRef);\n\n  const scaffolderPageContextMenuProps = {\n    onEditorClicked:\n      props?.contextMenu?.editor !== false\n        ? () => navigate(editorLink())\n        : undefined,\n    onActionsClicked:\n      props?.contextMenu?.actions !== false\n        ? () => navigate(actionsLink())\n        : undefined,\n    onTasksClicked: undefined,\n    onCreateClicked:\n      props?.contextMenu?.create !== false\n        ? () => navigate(createLink())\n        : undefined,\n    onTemplatingExtensionsClicked: () => navigate(templatingExtensionsLink()),\n  };\n  return (\n    <Page themeId=\"home\">\n      <Header\n        pageTitleOverride={t('listTaskPage.pageTitle')}\n        title={t('listTaskPage.title')}\n        subtitle={t('listTaskPage.subtitle')}\n      >\n        <ScaffolderPageContextMenu {...scaffolderPageContextMenuProps} />\n      </Header>\n      <Content>\n        <ListTaskPageContent {...props} />\n      </Content>\n    </Page>\n  );\n};\n"],"names":[],"mappings":"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"}