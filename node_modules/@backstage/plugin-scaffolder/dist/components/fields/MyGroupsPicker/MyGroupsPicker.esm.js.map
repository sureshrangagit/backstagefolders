{"version":3,"file":"MyGroupsPicker.esm.js","sources":["../../../../src/components/fields/MyGroupsPicker/MyGroupsPicker.tsx"],"sourcesContent":["/*\n * Copyright 2023 The Backstage Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { ChangeEvent, useEffect } from 'react';\nimport {\n  errorApiRef,\n  identityApiRef,\n  useApi,\n} from '@backstage/core-plugin-api';\nimport TextField from '@material-ui/core/TextField';\nimport { MyGroupsPickerProps, MyGroupsPickerSchema } from './schema';\nimport Autocomplete, {\n  createFilterOptions,\n} from '@material-ui/lab/Autocomplete';\nimport {\n  catalogApiRef,\n  EntityDisplayName,\n  entityPresentationApiRef,\n  EntityRefPresentationSnapshot,\n} from '@backstage/plugin-catalog-react';\nimport { NotFoundError } from '@backstage/errors';\nimport useAsync from 'react-use/esm/useAsync';\nimport { Entity, stringifyEntityRef } from '@backstage/catalog-model';\nimport { VirtualizedListbox } from '../VirtualizedListbox';\nimport { useTranslationRef } from '@backstage/core-plugin-api/alpha';\nimport { scaffolderTranslationRef } from '../../../translation';\nimport { ScaffolderField } from '@backstage/plugin-scaffolder-react/alpha';\n\nexport { MyGroupsPickerSchema };\n\nexport const MyGroupsPicker = (props: MyGroupsPickerProps) => {\n  const { t } = useTranslationRef(scaffolderTranslationRef);\n  const {\n    schema: {\n      title = t('fields.myGroupsPicker.title'),\n      description = t('fields.myGroupsPicker.description'),\n    },\n    required,\n    rawErrors,\n    onChange,\n    formData,\n    uiSchema,\n    errors,\n  } = props;\n\n  const identityApi = useApi(identityApiRef);\n  const catalogApi = useApi(catalogApiRef);\n  const errorApi = useApi(errorApiRef);\n  const entityPresentationApi = useApi(entityPresentationApiRef);\n  const isDisabled = uiSchema?.['ui:disabled'] ?? false;\n\n  const { value: groups, loading } = useAsync(async () => {\n    const { userEntityRef } = await identityApi.getBackstageIdentity();\n\n    if (!userEntityRef) {\n      errorApi.post(new NotFoundError('No user entity ref found'));\n      return { catalogEntities: [], entityRefToPresentation: new Map() };\n    }\n\n    const { items } = await catalogApi.getEntities({\n      filter: {\n        kind: 'Group',\n        ['relations.hasMember']: [userEntityRef],\n      },\n    });\n\n    const entityRefToPresentation = new Map<\n      string,\n      EntityRefPresentationSnapshot\n    >(\n      await Promise.all(\n        items.map(async item => {\n          const presentation = await entityPresentationApi.forEntity(item)\n            .promise;\n          return [stringifyEntityRef(item), presentation] as [\n            string,\n            EntityRefPresentationSnapshot,\n          ];\n        }),\n      ),\n    );\n\n    return { catalogEntities: items, entityRefToPresentation };\n  });\n\n  const updateChange = (_: ChangeEvent<{}>, value: Entity | null) => {\n    onChange(value ? stringifyEntityRef(value) : '');\n  };\n\n  const selectedEntity =\n    groups?.catalogEntities.find(e => stringifyEntityRef(e) === formData) ||\n    null;\n\n  useEffect(() => {\n    if (required && groups?.catalogEntities.length === 1 && !selectedEntity) {\n      onChange(stringifyEntityRef(groups.catalogEntities[0]));\n    }\n  }, [groups, onChange, selectedEntity, required]);\n\n  return (\n    <ScaffolderField\n      rawErrors={rawErrors}\n      rawDescription={uiSchema['ui:description'] ?? description}\n      required={required}\n      disabled={isDisabled}\n      errors={errors}\n    >\n      <Autocomplete\n        disabled={required && groups?.catalogEntities.length === 1}\n        id=\"OwnershipEntityRefPicker-dropdown\"\n        options={groups?.catalogEntities || []}\n        value={selectedEntity}\n        loading={loading}\n        onChange={updateChange}\n        getOptionLabel={option =>\n          groups?.entityRefToPresentation.get(stringifyEntityRef(option))\n            ?.primaryTitle!\n        }\n        autoSelect\n        renderInput={params => (\n          <TextField\n            {...params}\n            label={title}\n            margin=\"dense\"\n            FormHelperTextProps={{ margin: 'dense', style: { marginLeft: 0 } }}\n            variant=\"outlined\"\n            required={required}\n            InputProps={params.InputProps}\n          />\n        )}\n        renderOption={option => <EntityDisplayName entityRef={option} />}\n        filterOptions={createFilterOptions<Entity>({\n          stringify: option =>\n            groups?.entityRefToPresentation.get(stringifyEntityRef(option))\n              ?.primaryTitle!,\n        })}\n        ListboxComponent={VirtualizedListbox}\n      />\n    </ScaffolderField>\n  );\n};\n"],"names":[],"mappings":"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"}