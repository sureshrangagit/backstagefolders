{"version":3,"file":"GithubRepoPicker.esm.js","sources":["../../../../src/components/fields/RepoUrlPicker/GithubRepoPicker.tsx"],"sourcesContent":["/*\n * Copyright 2021 The Backstage Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { useCallback, useMemo, useState } from 'react';\nimport FormControl from '@material-ui/core/FormControl';\nimport FormHelperText from '@material-ui/core/FormHelperText';\nimport TextField from '@material-ui/core/TextField';\nimport { Select, SelectItem } from '@backstage/core-components';\nimport { BaseRepoUrlPickerProps } from './types';\nimport { useTranslationRef } from '@backstage/core-plugin-api/alpha';\nimport { scaffolderTranslationRef } from '../../../translation';\nimport { useApi } from '@backstage/core-plugin-api';\nimport { scaffolderApiRef } from '@backstage/plugin-scaffolder-react';\nimport useDebounce from 'react-use/esm/useDebounce';\nimport Autocomplete from '@material-ui/lab/Autocomplete';\nimport uniq from 'lodash/uniq';\nimport map from 'lodash/map';\n\nexport const GithubRepoPicker = (\n  props: BaseRepoUrlPickerProps<{\n    allowedOwners?: string[];\n    accessToken?: string;\n  }>,\n) => {\n  const {\n    allowedOwners = [],\n    rawErrors,\n    state,\n    onChange,\n    accessToken,\n    isDisabled,\n  } = props;\n  const { t } = useTranslationRef(scaffolderTranslationRef);\n  const ownerItems: SelectItem[] = allowedOwners\n    ? allowedOwners.map(i => ({ label: i, value: i }))\n    : [{ label: 'Loading...', value: 'loading' }];\n\n  const { host, owner } = state;\n\n  const scaffolderApi = useApi(scaffolderApiRef);\n\n  const [availableRepositoriesWithOwner, setAvailableRepositoriesWithOwner] =\n    useState<{ owner: string; name: string }[]>([]);\n\n  // Update available repositories with owner when client is available\n  const updateAvailableRepositoriesWithOwner = useCallback(() => {\n    if (!scaffolderApi.autocomplete || !accessToken || !host) {\n      setAvailableRepositoriesWithOwner([]);\n      return;\n    }\n\n    scaffolderApi\n      .autocomplete({\n        token: accessToken,\n        resource: 'repositoriesWithOwner',\n        provider: 'github',\n        context: { host },\n      })\n      .then(({ results }) => {\n        setAvailableRepositoriesWithOwner(\n          results.map(r => {\n            const [rOwner, rName] = r.id.split('/');\n            return { owner: rOwner, name: rName };\n          }),\n        );\n      })\n      .catch(() => {\n        setAvailableRepositoriesWithOwner([]);\n      });\n  }, [scaffolderApi, accessToken, host]);\n\n  useDebounce(updateAvailableRepositoriesWithOwner, 500, [\n    updateAvailableRepositoriesWithOwner,\n  ]);\n\n  // Update available owners when available repositories with owner change\n  const availableOwners = useMemo<string[]>(\n    () => uniq(map(availableRepositoriesWithOwner, 'owner')),\n    [availableRepositoriesWithOwner],\n  );\n\n  // Update available repositories when available repositories with owner change or when owner changes\n  const updateAvailableRepositories = useCallback(() => {\n    const availableRepos = availableRepositoriesWithOwner.flatMap(r =>\n      r.owner === owner ? [{ name: r.name }] : [],\n    );\n\n    onChange({ availableRepos });\n  }, [availableRepositoriesWithOwner, owner, onChange]);\n\n  useDebounce(updateAvailableRepositories, 500, [updateAvailableRepositories]);\n\n  return (\n    <>\n      <FormControl\n        margin=\"normal\"\n        required\n        error={rawErrors?.length > 0 && !owner}\n      >\n        {allowedOwners?.length ? (\n          <>\n            <Select\n              native\n              label={t('fields.githubRepoPicker.owner.title')}\n              onChange={s =>\n                onChange({ owner: String(Array.isArray(s) ? s[0] : s) })\n              }\n              disabled={isDisabled || allowedOwners.length === 1}\n              selected={owner}\n              items={ownerItems}\n            />\n          </>\n        ) : (\n          <Autocomplete\n            value={owner}\n            onChange={(_, newValue) => {\n              onChange({ owner: newValue || '' });\n            }}\n            options={availableOwners}\n            renderInput={params => (\n              <TextField\n                {...params}\n                label={t('fields.githubRepoPicker.owner.inputTitle')}\n                disabled={isDisabled}\n                required\n              />\n            )}\n            freeSolo\n            disabled={isDisabled}\n            autoSelect\n          />\n        )}\n        <FormHelperText>\n          {t('fields.githubRepoPicker.owner.description')}\n        </FormHelperText>\n      </FormControl>\n    </>\n  );\n};\n"],"names":[],"mappings":"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"}