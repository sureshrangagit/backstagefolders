{"version":3,"file":"TemplatingExtensionsPage.esm.js","sources":["../../../src/components/TemplatingExtensionsPage/TemplatingExtensionsPage.tsx"],"sourcesContent":["/*\n * Copyright 2025 The Backstage Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { useApi, useRouteRef } from '@backstage/core-plugin-api';\n\nimport {\n  actionsRouteRef,\n  editRouteRef,\n  rootRouteRef,\n  scaffolderListTaskRouteRef,\n  templatingExtensionsRouteRef,\n} from '../../routes';\n\nimport { makeStyles } from '@material-ui/core/styles';\n\nimport { useTranslationRef } from '@backstage/core-plugin-api/alpha';\nimport { scaffolderTranslationRef } from '../../translation';\n\nimport {\n  Content,\n  EmptyState,\n  ErrorPanel,\n  Header,\n  Link,\n  Page,\n  Progress,\n} from '@backstage/core-components';\nimport { scaffolderApiRef } from '@backstage/plugin-scaffolder-react';\nimport {\n  ScaffolderPageContextMenu,\n  ScaffolderPageContextMenuProps,\n} from '@backstage/plugin-scaffolder-react/alpha';\nimport Box from '@material-ui/core/Box';\nimport InputAdornment from '@material-ui/core/InputAdornment';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Tab from '@material-ui/core/Tab';\nimport Tabs from '@material-ui/core/Tabs';\nimport TextField from '@material-ui/core/TextField';\nimport AllInclusiveIcon from '@material-ui/icons/AllInclusive';\nimport FilterListIcon from '@material-ui/icons/FilterList';\nimport FunctionsIcon from '@material-ui/icons/Functions';\nimport LinkIcon from '@material-ui/icons/Link';\nimport SearchIcon from '@material-ui/icons/Search';\nimport Autocomplete from '@material-ui/lab/Autocomplete';\nimport { useEffect, useMemo, useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport useAsync from 'react-use/esm/useAsync';\nimport {\n  Extension,\n  ExtensionKind,\n  listTemplatingExtensions,\n  parseFragment,\n} from './navigation';\nimport { TemplateFilters } from './TemplateFilters';\nimport {\n  TemplateGlobalFunctions,\n  TemplateGlobalValues,\n} from './TemplateGlobals';\n\nconst useStyles = makeStyles(theme => ({\n  code: {\n    fontFamily: 'Menlo, monospace',\n    padding: theme.spacing(1),\n    backgroundColor:\n      theme.palette.type === 'dark'\n        ? theme.palette.grey[700]\n        : theme.palette.grey[300],\n    display: 'inline-block',\n    borderRadius: 5,\n    border: `1px solid ${theme.palette.grey[500]}`,\n    position: 'relative',\n  },\n\n  codeRequired: {\n    '&::after': {\n      position: 'absolute',\n      content: '\"*\"',\n      top: 0,\n      right: theme.spacing(0.5),\n      fontWeight: 'bolder',\n      color: theme.palette.error.light,\n    },\n  },\n\n  argRequired: {\n    position: 'relative',\n    '& > *': {\n      display: 'inline',\n      position: 'relative',\n      '&::after': {\n        position: 'absolute',\n        content: '\"*\"',\n        top: 0,\n        right: theme.spacing(-1),\n        fontWeight: 'bolder',\n        color: theme.palette.error.light,\n      },\n    },\n  },\n\n  link: {\n    paddingLeft: theme.spacing(1),\n    cursor: 'pointer',\n  },\n\n  tabs: {\n    display: 'block',\n    minHeight: 'initial',\n    overflow: 'initial',\n  },\n}));\n\nexport const TemplatingExtensionsPageContent = ({\n  linkLocal,\n}: {\n  linkLocal?: boolean;\n}) => {\n  const api = useApi(scaffolderApiRef);\n  const classes = useStyles();\n  const { t } = useTranslationRef(scaffolderTranslationRef);\n\n  const { loading, value, error } = useAsync(async () => {\n    if (api.listTemplatingExtensions) {\n      return api.listTemplatingExtensions();\n    }\n    // eslint-disable-next-line no-console\n    console.warn(\n      'listTemplatingExtensions is not implemented in the scaffolderApi; please make sure to implement this method.',\n    );\n    return Promise.resolve({\n      filters: {},\n      globals: { functions: {}, values: {} },\n    });\n  }, [api]);\n\n  const [tab, selectTab] = useState<ExtensionKind>('filter');\n  const [selectedItem, setSelectedItem] = useState<Extension | null>(null);\n  const [input, setInput] = useState<string>('');\n\n  const handleTab = (_event: any, kind: ExtensionKind) => {\n    if (selectedItem?.kind !== kind) {\n      setSelectedItem(null);\n      setInput('');\n    }\n    selectTab(kind);\n  };\n\n  const selectItem = (item: Extension | null) => {\n    setSelectedItem(item);\n    if (item) {\n      selectTab(item.kind);\n    }\n  };\n\n  useEffect(() => {\n    if (value && window.location.hash) {\n      try {\n        selectTab(parseFragment(window.location.hash.substring(1)).kind);\n        document.querySelector(window.location.hash)?.scrollIntoView();\n      } catch (e) {\n        // ignore bad link\n      }\n    }\n  }, [value]);\n\n  const extensionKinds = useMemo(\n    () => ({\n      filter: {\n        icon: <FilterListIcon />,\n        label: t('templatingExtensions.content.filters.title'),\n      },\n      function: {\n        icon: <FunctionsIcon />,\n        label: t('templatingExtensions.content.functions.title'),\n      },\n      value: {\n        icon: <AllInclusiveIcon />,\n        label: t('templatingExtensions.content.values.title'),\n      },\n    }),\n    [t],\n  );\n\n  const templatingExtensionsLink = useRouteRef(templatingExtensionsRouteRef);\n\n  if (loading) {\n    return <Progress />;\n  }\n  if (error || !value) {\n    return (\n      <div data-testid=\"empty\">\n        {error && <ErrorPanel error={error} />}\n        <EmptyState\n          missing=\"info\"\n          title={t('templatingExtensions.content.emptyState.title')}\n          description={t('templatingExtensions.content.emptyState.description')}\n        />\n      </div>\n    );\n  }\n  const { filters, globals } = value;\n\n  const baseLink = (\n    <Link\n      className={classes.link}\n      to={templatingExtensionsLink()}\n      {...(linkLocal ? {} : { target: '_blank', rel: 'noopener noreferrer' })}\n    >\n      <LinkIcon />\n    </Link>\n  );\n\n  return (\n    <>\n      <Autocomplete\n        renderInput={params => (\n          <TextField\n            {...params}\n            aria-label={t(\n              'templatingExtensions.content.searchFieldPlaceholder',\n            )}\n            placeholder={t(\n              'templatingExtensions.content.searchFieldPlaceholder',\n            )}\n            variant=\"outlined\"\n            InputProps={{\n              ...params.InputProps,\n              startAdornment: (\n                <InputAdornment position=\"start\">\n                  <SearchIcon />\n                </InputAdornment>\n              ),\n            }}\n          />\n        )}\n        getOptionLabel={option => option.name}\n        getOptionSelected={(lhs, rhs) => lhs === rhs}\n        options={listTemplatingExtensions(value)}\n        groupBy={option => option.kind}\n        renderGroup={params => (\n          <>\n            <Box display=\"flex\" alignItems=\"center\">\n              {extensionKinds[params.group as ExtensionKind].icon}\n              <Box sx={{ ml: 1 }}>\n                {extensionKinds[params.group as ExtensionKind].label}\n              </Box>\n            </Box>\n            <ul>{params.children}</ul>\n          </>\n        )}\n        renderOption={(option: Extension) => (\n          <ListItemText primary={option.name} />\n        )}\n        onChange={(_event: any, option: Extension | null) => {\n          selectItem(option);\n        }}\n        inputValue={input}\n        onInputChange={(_event: any, s: string) => setInput(s)}\n        loading={loading}\n        fullWidth\n        clearOnEscape\n      />\n      <Tabs value={tab} onChange={handleTab} centered className={classes.tabs}>\n        {Object.entries(extensionKinds).map(([k, v]) => (\n          <Tab key={k} value={k} {...v} />\n        ))}\n      </Tabs>\n      {tab === 'filter' && (\n        <TemplateFilters {...{ baseLink, t, classes, filters, selectedItem }} />\n      )}\n      {tab === 'function' && (\n        <TemplateGlobalFunctions\n          functions={globals.functions}\n          {...{ baseLink, t, classes, selectedItem }}\n        />\n      )}\n      {tab === 'value' && (\n        <TemplateGlobalValues\n          values={globals.values}\n          {...{ baseLink, t, classes, selectedItem }}\n        />\n      )}\n    </>\n  );\n};\n\nexport const TemplatingExtensionsPage = () => {\n  const navigate = useNavigate();\n  const editorLink = useRouteRef(editRouteRef);\n  const tasksLink = useRouteRef(scaffolderListTaskRouteRef);\n  const createLink = useRouteRef(rootRouteRef);\n  const actionsLink = useRouteRef(actionsRouteRef);\n\n  const scaffolderPageContextMenuProps: ScaffolderPageContextMenuProps = {\n    onEditorClicked: () => navigate(editorLink()),\n    onActionsClicked: () => navigate(actionsLink()),\n    onTasksClicked: () => navigate(tasksLink()),\n    onCreateClicked: () => navigate(createLink()),\n  };\n\n  const { t } = useTranslationRef(scaffolderTranslationRef);\n\n  return (\n    <Page themeId=\"home\">\n      <Header\n        pageTitleOverride={t('templatingExtensions.pageTitle')}\n        title={t('templatingExtensions.title')}\n        subtitle={t('templatingExtensions.subtitle')}\n      >\n        <ScaffolderPageContextMenu {...scaffolderPageContextMenuProps} />\n      </Header>\n      <Content>\n        <TemplatingExtensionsPageContent linkLocal />\n      </Content>\n    </Page>\n  );\n};\n"],"names":[],"mappings":"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"}