{"version":3,"file":"router.cjs.js","sources":["../../src/service/router.ts"],"sourcesContent":["/*\n * Copyright 2021 The Backstage Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { z } from 'zod';\nimport express, { Request, Response } from 'express';\nimport Router from 'express-promise-router';\nimport { InputError } from '@backstage/errors';\nimport { IdentityApi } from '@backstage/plugin-auth-node';\nimport {\n  AuthorizeResult,\n  EvaluatePermissionResponse,\n  IdentifiedPermissionMessage,\n  isResourcePermission,\n  PermissionAttributes,\n  PermissionMessageBatch,\n} from '@backstage/plugin-permission-common';\nimport {\n  ApplyConditionsRequestEntry,\n  ApplyConditionsResponseEntry,\n  PermissionPolicy,\n  PolicyQueryUser,\n} from '@backstage/plugin-permission-node';\nimport { PermissionIntegrationClient } from './PermissionIntegrationClient';\nimport { memoize } from 'lodash';\nimport DataLoader from 'dataloader';\nimport {\n  AuthService,\n  BackstageCredentials,\n  BackstageNonePrincipal,\n  BackstageUserPrincipal,\n  DiscoveryService,\n  HttpAuthService,\n  LoggerService,\n  RootConfigService,\n  UserInfoService,\n} from '@backstage/backend-plugin-api';\n\nconst attributesSchema: z.ZodSchema<PermissionAttributes> = z.object({\n  action: z\n    .union([\n      z.literal('create'),\n      z.literal('read'),\n      z.literal('update'),\n      z.literal('delete'),\n    ])\n    .optional(),\n});\n\nconst basicPermissionSchema = z.object({\n  type: z.literal('basic'),\n  name: z.string(),\n  attributes: attributesSchema,\n});\n\nconst resourcePermissionSchema = z.object({\n  type: z.literal('resource'),\n  name: z.string(),\n  attributes: attributesSchema,\n  resourceType: z.string(),\n});\n\nconst evaluatePermissionRequestSchema = z.union([\n  z.object({\n    id: z.string(),\n    resourceRef: z.undefined().optional(),\n    permission: basicPermissionSchema,\n  }),\n  z.object({\n    id: z.string(),\n    resourceRef: z\n      .union([z.string(), z.array(z.string()).nonempty()])\n      .optional(),\n    permission: resourcePermissionSchema,\n  }),\n]);\n\nconst evaluatePermissionRequestBatchSchema = z.object({\n  items: z.array(evaluatePermissionRequestSchema),\n});\n\n/**\n * Options required when constructing a new {@link express#Router} using\n * {@link createRouter}.\n *\n * @internal\n */\nexport interface RouterOptions {\n  logger: LoggerService;\n  discovery: DiscoveryService;\n  policy: PermissionPolicy;\n  identity?: IdentityApi;\n  config: RootConfigService;\n  auth: AuthService;\n  httpAuth: HttpAuthService;\n  userInfo: UserInfoService;\n}\n\nconst handleRequest = async (\n  requests: z.infer<typeof evaluatePermissionRequestBatchSchema>['items'],\n  policy: PermissionPolicy,\n  permissionIntegrationClient: PermissionIntegrationClient,\n  credentials: BackstageCredentials<\n    BackstageNonePrincipal | BackstageUserPrincipal\n  >,\n  auth: AuthService,\n  userInfo: UserInfoService,\n): Promise<\n  IdentifiedPermissionMessage<InternalEvaluatePermissionResponse>[]\n> => {\n  const applyConditionsLoaderFor = memoize((pluginId: string) => {\n    return new DataLoader<\n      ApplyConditionsRequestEntry,\n      ApplyConditionsResponseEntry\n    >(batch =>\n      permissionIntegrationClient.applyConditions(pluginId, credentials, batch),\n    );\n  });\n\n  let user: PolicyQueryUser | undefined;\n  if (auth.isPrincipal(credentials, 'user')) {\n    const info = await userInfo.getUserInfo(credentials);\n    const { token } = await auth.getPluginRequestToken({\n      onBehalfOf: credentials,\n      targetPluginId: 'catalog', // TODO: unknown at this point\n    });\n    user = {\n      identity: {\n        type: 'user',\n        userEntityRef: credentials.principal.userEntityRef,\n        ownershipEntityRefs: info.ownershipEntityRefs,\n      },\n      token,\n      credentials,\n      info,\n    };\n  }\n\n  return Promise.all(\n    requests.map(request =>\n      policy\n        .handle({ permission: request.permission }, user)\n        .then(async decision => {\n          if (decision.result !== AuthorizeResult.CONDITIONAL) {\n            return {\n              id: request.id,\n              ...decision,\n            };\n          }\n\n          if (!isResourcePermission(request.permission)) {\n            throw new Error(\n              `Conditional decision returned from permission policy for non-resource permission ${request.permission.name}`,\n            );\n          }\n\n          if (decision.resourceType !== request.permission.resourceType) {\n            throw new Error(\n              `Invalid resource conditions returned from permission policy for permission ${request.permission.name}`,\n            );\n          }\n\n          if (!request.resourceRef) {\n            return {\n              id: request.id,\n              ...decision,\n            };\n          }\n\n          return applyConditionsLoaderFor(decision.pluginId).load({\n            id: request.id,\n            resourceRef: request.resourceRef,\n            ...decision,\n          });\n        }),\n    ),\n  );\n};\n\n/**\n * Creates a new {@link express#Router} which provides the backend API\n * for the permission system.\n *\n * @internal\n */\nexport async function createRouter(\n  options: RouterOptions,\n): Promise<express.Router> {\n  const { policy, discovery, config, logger, auth, httpAuth, userInfo } =\n    options;\n\n  if (!config.getOptionalBoolean('permission.enabled')) {\n    logger.warn(\n      'Permission backend started with permissions disabled. Enable permissions by setting permission.enabled=true.',\n    );\n  }\n\n  const disabledDefaultAuthPolicy =\n    config.getOptionalBoolean(\n      'backend.auth.dangerouslyDisableDefaultAuthPolicy',\n    ) ?? false;\n\n  const permissionIntegrationClient = new PermissionIntegrationClient({\n    discovery,\n    auth,\n  });\n\n  const router = Router();\n  router.use(express.json());\n\n  router.get('/health', (_, response) => {\n    response.json({ status: 'ok' });\n  });\n\n  router.post(\n    '/authorize',\n    async (\n      req: Request,\n      res: Response<PermissionMessageBatch<InternalEvaluatePermissionResponse>>,\n    ) => {\n      const credentials = await httpAuth.credentials(req, {\n        allow: ['user', 'none'],\n      });\n\n      const parseResult = evaluatePermissionRequestBatchSchema.safeParse(\n        req.body,\n      );\n\n      if (!parseResult.success) {\n        throw new InputError(parseResult.error.toString());\n      }\n\n      const body = parseResult.data;\n\n      if (\n        (auth.isPrincipal(credentials, 'none') && !disabledDefaultAuthPolicy) ||\n        (auth.isPrincipal(credentials, 'user') && !credentials.principal.actor)\n      ) {\n        if (\n          body.items.some(\n            r =>\n              isResourcePermission(r.permission) && r.resourceRef === undefined,\n          )\n        ) {\n          throw new InputError(\n            'Resource permissions require a resourceRef to be set. Direct user requests without a resourceRef are not allowed.',\n          );\n        }\n      }\n\n      res.json({\n        items: await handleRequest(\n          body.items,\n          policy,\n          permissionIntegrationClient,\n          credentials,\n          auth,\n          userInfo,\n        ),\n      });\n    },\n  );\n\n  return router;\n}\n\n/**\n * @internal\n */\ntype InternalEvaluatePermissionResponse =\n  | EvaluatePermissionResponse\n  | {\n      result: Array<AuthorizeResult.ALLOW | AuthorizeResult.DENY>;\n    };\n"],"names":["z","memoize","DataLoader","AuthorizeResult","isResourcePermission","PermissionIntegrationClient","Router","express","InputError"],"mappings":"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"}