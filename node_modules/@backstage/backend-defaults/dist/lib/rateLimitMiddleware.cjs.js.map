{"version":3,"file":"rateLimitMiddleware.cjs.js","sources":["../../src/lib/rateLimitMiddleware.ts"],"sourcesContent":["/*\n * Copyright 2025 The Backstage Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { RequestHandler } from 'express';\nimport { rateLimit, Store } from 'express-rate-limit';\nimport { Config, readDurationFromConfig } from '@backstage/config';\nimport { durationToMilliseconds } from '@backstage/types';\n\nexport const rateLimitMiddleware = (options: {\n  store?: Store;\n  config?: Config;\n}): RequestHandler => {\n  const { store, config } = options;\n  let windowMs: number = 60000;\n  if (config && config.has('window')) {\n    const windowDuration = readDurationFromConfig(config, {\n      key: 'window',\n    });\n    windowMs = durationToMilliseconds(windowDuration);\n  }\n  const limit = config?.getOptionalNumber('incomingRequestLimit');\n  const ipAllowList = config?.getOptionalStringArray('ipAllowList') ?? [\n    '127.0.0.1',\n    '0:0:0:0:0:0:0:1',\n    '::1',\n  ];\n  const skipSuccessfulRequests = config?.getOptionalBoolean(\n    'skipSuccessfulRequests',\n  );\n  const skipFailedRequests = config?.getOptionalBoolean('skipFailedRequests');\n  const passOnStoreError = config?.getOptionalBoolean('passOnStoreError');\n\n  return rateLimit({\n    windowMs,\n    limit,\n    skipSuccessfulRequests,\n    message: {\n      error: {\n        name: 'Error',\n        message: `Too many requests, please try again later`,\n      },\n      response: {\n        statusCode: 429,\n      },\n    },\n    statusCode: 429,\n    skipFailedRequests,\n    passOnStoreError: passOnStoreError,\n    keyGenerator(req, _res): string {\n      if (!req.ip) {\n        return req.socket.remoteAddress!;\n      }\n      return req.ip;\n    },\n    skip: (req, _res) => {\n      return (\n        Boolean(req.ip && ipAllowList.includes(req.ip)) ||\n        Boolean(\n          req.socket.remoteAddress &&\n            ipAllowList.includes(req.socket.remoteAddress),\n        )\n      );\n    },\n    validate: {\n      trustProxy: false,\n    },\n    store,\n  });\n};\n"],"names":["config","readDurationFromConfig","durationToMilliseconds","rateLimit"],"mappings":";;;;;;AAoBa,MAAA,mBAAA,GAAsB,CAAC,OAGd,KAAA;AACpB,EAAM,MAAA,EAAE,KAAO,UAAAA,QAAA,EAAW,GAAA,OAAA;AAC1B,EAAA,IAAI,QAAmB,GAAA,GAAA;AACvB,EAAA,IAAIA,QAAU,IAAAA,QAAA,CAAO,GAAI,CAAA,QAAQ,CAAG,EAAA;AAClC,IAAM,MAAA,cAAA,GAAiBC,8BAAuBD,QAAQ,EAAA;AAAA,MACpD,GAAK,EAAA;AAAA,KACN,CAAA;AACD,IAAA,QAAA,GAAWE,6BAAuB,cAAc,CAAA;AAAA;AAElD,EAAM,MAAA,KAAA,GAAQF,QAAQ,EAAA,iBAAA,CAAkB,sBAAsB,CAAA;AAC9D,EAAA,MAAM,WAAc,GAAAA,QAAA,EAAQ,sBAAuB,CAAA,aAAa,CAAK,IAAA;AAAA,IACnE,WAAA;AAAA,IACA,iBAAA;AAAA,IACA;AAAA,GACF;AACA,EAAA,MAAM,yBAAyBA,QAAQ,EAAA,kBAAA;AAAA,IACrC;AAAA,GACF;AACA,EAAM,MAAA,kBAAA,GAAqBA,QAAQ,EAAA,kBAAA,CAAmB,oBAAoB,CAAA;AAC1E,EAAM,MAAA,gBAAA,GAAmBA,QAAQ,EAAA,kBAAA,CAAmB,kBAAkB,CAAA;AAEtE,EAAA,OAAOG,0BAAU,CAAA;AAAA,IACf,QAAA;AAAA,IACA,KAAA;AAAA,IACA,sBAAA;AAAA,IACA,OAAS,EAAA;AAAA,MACP,KAAO,EAAA;AAAA,QACL,IAAM,EAAA,OAAA;AAAA,QACN,OAAS,EAAA,CAAA,yCAAA;AAAA,OACX;AAAA,MACA,QAAU,EAAA;AAAA,QACR,UAAY,EAAA;AAAA;AACd,KACF;AAAA,IACA,UAAY,EAAA,GAAA;AAAA,IACZ,kBAAA;AAAA,IACA,gBAAA;AAAA,IACA,YAAA,CAAa,KAAK,IAAc,EAAA;AAC9B,MAAI,IAAA,CAAC,IAAI,EAAI,EAAA;AACX,QAAA,OAAO,IAAI,MAAO,CAAA,aAAA;AAAA;AAEpB,MAAA,OAAO,GAAI,CAAA,EAAA;AAAA,KACb;AAAA,IACA,IAAA,EAAM,CAAC,GAAA,EAAK,IAAS,KAAA;AACnB,MACE,OAAA,OAAA,CAAQ,IAAI,EAAM,IAAA,WAAA,CAAY,SAAS,GAAI,CAAA,EAAE,CAAC,CAC9C,IAAA,OAAA;AAAA,QACE,IAAI,MAAO,CAAA,aAAA,IACT,YAAY,QAAS,CAAA,GAAA,CAAI,OAAO,aAAa;AAAA,OACjD;AAAA,KAEJ;AAAA,IACA,QAAU,EAAA;AAAA,MACR,UAAY,EAAA;AAAA,KACd;AAAA,IACA;AAAA,GACD,CAAA;AACH;;;;"}