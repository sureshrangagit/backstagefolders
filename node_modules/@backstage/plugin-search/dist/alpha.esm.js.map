{"version":3,"file":"alpha.esm.js","sources":["../src/alpha.tsx"],"sourcesContent":["/*\n * Copyright 2023 The Backstage Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport Grid from '@material-ui/core/Grid';\nimport Paper from '@material-ui/core/Paper';\nimport { makeStyles, Theme } from '@material-ui/core/styles';\nimport SearchIcon from '@material-ui/icons/Search';\n\nimport {\n  CatalogIcon,\n  Content,\n  DocsIcon,\n  Header,\n  Page,\n  useSidebarPinState,\n} from '@backstage/core-components';\nimport {\n  useApi,\n  discoveryApiRef,\n  fetchApiRef,\n  createApiFactory,\n} from '@backstage/core-plugin-api';\n\nimport {\n  createFrontendPlugin,\n  ApiBlueprint,\n  createExtensionInput,\n  PageBlueprint,\n  NavItemBlueprint,\n} from '@backstage/frontend-plugin-api';\n\nimport {\n  catalogApiRef,\n  CATALOG_FILTER_EXISTS,\n} from '@backstage/plugin-catalog-react';\n\nimport {\n  DefaultResultListItem,\n  SearchBar,\n  SearchFilter,\n  SearchPagination,\n  SearchResult as SearchResults,\n  SearchResultPager,\n  useSearch,\n  SearchContextProvider,\n} from '@backstage/plugin-search-react';\nimport { SearchResult } from '@backstage/plugin-search-common';\nimport { searchApiRef } from '@backstage/plugin-search-react';\nimport {\n  SearchResultListItemBlueprint,\n  SearchFilterResultTypeBlueprint,\n  SearchFilterBlueprint,\n} from '@backstage/plugin-search-react/alpha';\n\nimport { rootRouteRef } from './plugin';\nimport { SearchClient } from './apis';\nimport { SearchType } from './components/SearchType';\nimport { UrlUpdater } from './components/SearchPage/SearchPage';\nimport {\n  compatWrapper,\n  convertLegacyRouteRef,\n  convertLegacyRouteRefs,\n} from '@backstage/core-compat-api';\n\n/** @alpha */\nexport const searchApi = ApiBlueprint.make({\n  params: {\n    factory: createApiFactory({\n      api: searchApiRef,\n      deps: { discoveryApi: discoveryApiRef, fetchApi: fetchApiRef },\n      factory: ({ discoveryApi, fetchApi }) =>\n        new SearchClient({ discoveryApi, fetchApi }),\n    }),\n  },\n});\n\nconst useSearchPageStyles = makeStyles((theme: Theme) => ({\n  filter: {\n    '& + &': {\n      marginTop: theme.spacing(2.5),\n    },\n  },\n  filters: {\n    padding: theme.spacing(2),\n    marginTop: theme.spacing(2),\n  },\n}));\n\n/** @alpha */\nexport const searchPage = PageBlueprint.makeWithOverrides({\n  config: {\n    schema: {\n      noTrack: z => z.boolean().default(false),\n    },\n  },\n  inputs: {\n    items: createExtensionInput([SearchResultListItemBlueprint.dataRefs.item]),\n    resultTypes: createExtensionInput([\n      SearchFilterResultTypeBlueprint.dataRefs.resultType,\n    ]),\n    searchFilters: createExtensionInput([\n      SearchFilterBlueprint.dataRefs.searchFilters,\n    ]),\n  },\n  factory(originalFactory, { config, inputs }) {\n    return originalFactory({\n      defaultPath: '/search',\n      routeRef: convertLegacyRouteRef(rootRouteRef),\n      loader: async () => {\n        const getResultItemComponent = (result: SearchResult) => {\n          const value = inputs.items.find(item =>\n            item\n              ?.get(SearchResultListItemBlueprint.dataRefs.item)\n              .predicate?.(result),\n          );\n          return (\n            value?.get(SearchResultListItemBlueprint.dataRefs.item).component ??\n            DefaultResultListItem\n          );\n        };\n\n        const resultTypes = inputs.resultTypes.map(item =>\n          item.get(SearchFilterResultTypeBlueprint.dataRefs.resultType),\n        );\n\n        const additionalSearchFilters = inputs.searchFilters.map(\n          item =>\n            item.get(SearchFilterBlueprint.dataRefs.searchFilters).component,\n        );\n\n        const Component = () => {\n          const classes = useSearchPageStyles();\n          const { isMobile } = useSidebarPinState();\n          const { types } = useSearch();\n          const catalogApi = useApi(catalogApiRef);\n\n          return (\n            <Page themeId=\"home\">\n              {!isMobile && <Header title=\"Search\" />}\n              <Content>\n                <Grid container direction=\"row\">\n                  <Grid item xs={12}>\n                    <SearchBar debounceTime={100} />\n                  </Grid>\n                  {!isMobile && (\n                    <Grid item xs={3}>\n                      <SearchType.Accordion\n                        name=\"Result Type\"\n                        defaultValue=\"software-catalog\"\n                        showCounts\n                        types={[\n                          {\n                            value: 'software-catalog',\n                            name: 'Software Catalog',\n                            icon: <CatalogIcon />,\n                          },\n                          {\n                            value: 'techdocs',\n                            name: 'Documentation',\n                            icon: <DocsIcon />,\n                          },\n                        ].concat(resultTypes)}\n                      />\n                      <Paper className={classes.filters}>\n                        {types.includes('techdocs') && (\n                          <SearchFilter.Select\n                            className={classes.filter}\n                            label=\"Entity\"\n                            name=\"name\"\n                            values={async () => {\n                              // Return a list of entities which are documented.\n                              const { items } = await catalogApi.getEntities({\n                                fields: ['metadata.name'],\n                                filter: {\n                                  'metadata.annotations.backstage.io/techdocs-ref':\n                                    CATALOG_FILTER_EXISTS,\n                                },\n                              });\n\n                              const names = items.map(\n                                entity => entity.metadata.name,\n                              );\n                              names.sort();\n                              return names;\n                            }}\n                          />\n                        )}\n                        <SearchFilter.Select\n                          className={classes.filter}\n                          label=\"Kind\"\n                          name=\"kind\"\n                          values={[\n                            'API',\n                            'Component',\n                            'Domain',\n                            'Group',\n                            'Location',\n                            'Resource',\n                            'System',\n                            'Template',\n                            'User',\n                          ]}\n                        />\n                        <SearchFilter.Checkbox\n                          className={classes.filter}\n                          label=\"Lifecycle\"\n                          name=\"lifecycle\"\n                          values={['experimental', 'production']}\n                        />\n                        {additionalSearchFilters.map(SearchFilterComponent => (\n                          <SearchFilterComponent className={classes.filter} />\n                        ))}\n                      </Paper>\n                    </Grid>\n                  )}\n                  <Grid item xs>\n                    <SearchPagination />\n                    <SearchResults>\n                      {({ results }) => (\n                        <>\n                          {results.map((result, index) => {\n                            const { noTrack } = config;\n                            const { document, ...rest } = result;\n                            const SearchResultListItem =\n                              getResultItemComponent(result);\n                            return (\n                              <SearchResultListItem\n                                {...rest}\n                                key={index}\n                                result={document}\n                                noTrack={noTrack}\n                              />\n                            );\n                          })}\n                        </>\n                      )}\n                    </SearchResults>\n                    <SearchResultPager />\n                  </Grid>\n                </Grid>\n              </Content>\n            </Page>\n          );\n        };\n\n        return compatWrapper(\n          <SearchContextProvider>\n            <UrlUpdater />\n            <Component />\n          </SearchContextProvider>,\n        );\n      },\n    });\n  },\n});\n\n/** @alpha */\nexport const searchNavItem = NavItemBlueprint.make({\n  params: {\n    routeRef: convertLegacyRouteRef(rootRouteRef),\n    title: 'Search',\n    icon: SearchIcon,\n  },\n});\n\n/** @alpha */\nexport default createFrontendPlugin({\n  pluginId: 'search',\n  info: { packageJson: () => import('../package.json') },\n  extensions: [searchApi, searchPage, searchNavItem],\n  routes: convertLegacyRouteRefs({\n    root: rootRouteRef,\n  }),\n});\n\n/** @alpha */\nexport { searchTranslationRef } from './translation';\n"],"names":["SearchResults"],"mappings":"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"}