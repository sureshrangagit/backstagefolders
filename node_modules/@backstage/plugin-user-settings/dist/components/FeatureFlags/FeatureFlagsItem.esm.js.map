{"version":3,"file":"FeatureFlagsItem.esm.js","sources":["../../../src/components/FeatureFlags/FeatureFlagsItem.tsx"],"sourcesContent":["/*\n * Copyright 2020 The Backstage Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport Switch from '@material-ui/core/Switch';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport { FeatureFlag } from '@backstage/core-plugin-api';\nimport { useTranslationRef } from '@backstage/frontend-plugin-api';\nimport { userSettingsTranslationRef } from '../../translation';\nimport { TranslationFunction } from '@backstage/core-plugin-api/alpha';\n\ntype Props = {\n  flag: FeatureFlag;\n  enabled: boolean;\n  toggleHandler: Function;\n};\n\nconst getSecondaryText = (\n  flag: FeatureFlag,\n  t: TranslationFunction<typeof userSettingsTranslationRef.T>,\n) => {\n  if (flag.description) {\n    return flag.description;\n  }\n  return flag.pluginId\n    ? t('featureFlags.flagItem.subtitle.registeredInPlugin', {\n        pluginId: flag.pluginId,\n      })\n    : t('featureFlags.flagItem.subtitle.registeredInApplication');\n};\n\nexport const FlagItem = ({ flag, enabled, toggleHandler }: Props) => {\n  const { t } = useTranslationRef(userSettingsTranslationRef);\n\n  return (\n    <ListItem divider button onClick={() => toggleHandler(flag.name)}>\n      <ListItemIcon>\n        <Tooltip\n          placement=\"top\"\n          arrow\n          title={\n            enabled\n              ? t('featureFlags.flagItem.title.disable')\n              : t('featureFlags.flagItem.title.enable')\n          }\n        >\n          <Switch color=\"primary\" checked={enabled} name={flag.name} />\n        </Tooltip>\n      </ListItemIcon>\n      <ListItemText primary={flag.name} secondary={getSecondaryText(flag, t)} />\n    </ListItem>\n  );\n};\n"],"names":[],"mappings":";;;;;;;;;AAgCA,MAAM,gBAAA,GAAmB,CACvB,IAAA,EACA,CACG,KAAA;AACH,EAAA,IAAI,KAAK,WAAa,EAAA;AACpB,IAAA,OAAO,IAAK,CAAA,WAAA;AAAA;AAEd,EAAO,OAAA,IAAA,CAAK,QACR,GAAA,CAAA,CAAE,mDAAqD,EAAA;AAAA,IACrD,UAAU,IAAK,CAAA;AAAA,GAChB,CACD,GAAA,CAAA,CAAE,wDAAwD,CAAA;AAChE,CAAA;AAEO,MAAM,WAAW,CAAC,EAAE,IAAM,EAAA,OAAA,EAAS,eAA2B,KAAA;AACnE,EAAA,MAAM,EAAE,CAAA,EAAM,GAAA,iBAAA,CAAkB,0BAA0B,CAAA;AAE1D,EACE,uBAAA,IAAA,CAAC,QAAS,EAAA,EAAA,OAAA,EAAO,IAAC,EAAA,MAAA,EAAM,IAAC,EAAA,OAAA,EAAS,MAAM,aAAA,CAAc,IAAK,CAAA,IAAI,CAC7D,EAAA,QAAA,EAAA;AAAA,oBAAA,GAAA,CAAC,YACC,EAAA,EAAA,QAAA,kBAAA,GAAA;AAAA,MAAC,OAAA;AAAA,MAAA;AAAA,QACC,SAAU,EAAA,KAAA;AAAA,QACV,KAAK,EAAA,IAAA;AAAA,QACL,OACE,OACI,GAAA,CAAA,CAAE,qCAAqC,CAAA,GACvC,EAAE,oCAAoC,CAAA;AAAA,QAG5C,QAAA,kBAAA,GAAA,CAAC,UAAO,KAAM,EAAA,SAAA,EAAU,SAAS,OAAS,EAAA,IAAA,EAAM,KAAK,IAAM,EAAA;AAAA;AAAA,KAE/D,EAAA,CAAA;AAAA,oBACA,GAAA,CAAC,gBAAa,OAAS,EAAA,IAAA,CAAK,MAAM,SAAW,EAAA,gBAAA,CAAiB,IAAM,EAAA,CAAC,CAAG,EAAA;AAAA,GAC1E,EAAA,CAAA;AAEJ;;;;"}