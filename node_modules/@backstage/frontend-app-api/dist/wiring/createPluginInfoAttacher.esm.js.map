{"version":3,"file":"createPluginInfoAttacher.esm.js","sources":["../../src/wiring/createPluginInfoAttacher.ts"],"sourcesContent":["/*\n * Copyright 2025 The Backstage Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { ConfigApi } from '@backstage/core-plugin-api';\nimport {\n  FrontendFeature,\n  FrontendPluginInfo,\n} from '@backstage/frontend-plugin-api';\nimport { OpaqueFrontendPlugin } from '@internal/frontend';\nimport { JsonObject, JsonValue } from '@backstage/types';\nimport once from 'lodash/once';\n// Avoid full dependency on catalog-model\n// eslint-disable-next-line @backstage/no-relative-monorepo-imports\nimport {\n  parseEntityRef,\n  stringifyEntityRef,\n} from '../../../catalog-model/src/entity/ref';\n\n/**\n * A function that resolves plugin info from a plugin manifest and package.json.\n *\n * @public\n */\nexport type FrontendPluginInfoResolver = (ctx: {\n  packageJson(): Promise<JsonObject | undefined>;\n  manifest(): Promise<JsonObject | undefined>;\n  defaultResolver(sources: {\n    packageJson: JsonObject | undefined;\n    manifest: JsonObject | undefined;\n  }): Promise<{ info: FrontendPluginInfo }>;\n}) => Promise<{ info: FrontendPluginInfo }>;\n\nexport function createPluginInfoAttacher(\n  config: ConfigApi,\n  infoResolver: FrontendPluginInfoResolver = async ctx =>\n    ctx.defaultResolver({\n      packageJson: await ctx.packageJson(),\n      manifest: await ctx.manifest(),\n    }),\n): (feature: FrontendFeature) => FrontendFeature {\n  const applyInfoOverrides = createPluginInfoOverrider(config);\n\n  return (feature: FrontendFeature) => {\n    if (!OpaqueFrontendPlugin.isType(feature)) {\n      return feature;\n    }\n\n    const plugin = OpaqueFrontendPlugin.toInternal(feature);\n\n    return {\n      ...plugin,\n      info: once(async () => {\n        const manifestLoader = plugin.infoOptions?.manifest;\n        const packageJsonLoader = plugin.infoOptions?.packageJson;\n\n        const { info: resolvedInfo } = await infoResolver({\n          manifest: async () => manifestLoader?.(),\n          packageJson: async () => packageJsonLoader?.(),\n          defaultResolver: async sources => ({\n            info: {\n              ...resolvePackageInfo(sources.packageJson),\n              ...resolveManifestInfo(sources.manifest),\n            },\n          }),\n        });\n\n        const infoWithOverrides = applyInfoOverrides(plugin.id, resolvedInfo);\n        return normalizePluginInfo(infoWithOverrides);\n      }),\n    };\n  };\n}\n\nfunction normalizePluginInfo(info: FrontendPluginInfo) {\n  return {\n    ...info,\n    ownerEntityRefs: info.ownerEntityRefs?.map(ref =>\n      stringifyEntityRef(\n        parseEntityRef(ref, {\n          defaultKind: 'Group',\n        }),\n      ),\n    ),\n  };\n}\n\nfunction createPluginInfoOverrider(config: ConfigApi) {\n  const overrideConfigs =\n    config.getOptionalConfigArray('app.pluginOverrides') ?? [];\n\n  const overrideMatchers = overrideConfigs.map(overrideConfig => {\n    const pluginIdMatcher = makeStringMatcher(\n      overrideConfig.getOptionalString('match.pluginId'),\n    );\n    const packageNameMatcher = makeStringMatcher(\n      overrideConfig.getOptionalString('match.packageName'),\n    );\n    const description = overrideConfig.getOptionalString('info.description');\n    const ownerEntityRefs = overrideConfig.getOptionalStringArray(\n      'info.ownerEntityRefs',\n    );\n    const links = overrideConfig\n      .getOptionalConfigArray('info.links')\n      ?.map(linkConfig => ({\n        title: linkConfig.getString('title'),\n        url: linkConfig.getString('url'),\n      }));\n\n    return {\n      test(pluginId: string, packageName?: string) {\n        return packageNameMatcher(packageName) && pluginIdMatcher(pluginId);\n      },\n      info: {\n        description,\n        ownerEntityRefs,\n        links,\n      },\n    };\n  });\n\n  return (pluginId: string, info: FrontendPluginInfo) => {\n    const { packageName } = info;\n    for (const matcher of overrideMatchers) {\n      if (matcher.test(pluginId, packageName)) {\n        if (matcher.info.description) {\n          info.description = matcher.info.description;\n        }\n        if (matcher.info.ownerEntityRefs) {\n          info.ownerEntityRefs = matcher.info.ownerEntityRefs;\n        }\n        if (matcher.info.links) {\n          info.links = matcher.info.links;\n        }\n      }\n    }\n    return info;\n  };\n}\n\nfunction resolveManifestInfo(manifest?: JsonValue) {\n  if (!isJsonObject(manifest) || !isJsonObject(manifest.metadata)) {\n    return undefined;\n  }\n\n  const info: FrontendPluginInfo = {};\n\n  if (isJsonObject(manifest.spec) && typeof manifest.spec.owner === 'string') {\n    info.ownerEntityRefs = [\n      stringifyEntityRef(\n        parseEntityRef(manifest.spec.owner, {\n          defaultKind: 'Group',\n          defaultNamespace: manifest.metadata.namespace?.toString(),\n        }),\n      ),\n    ];\n  }\n\n  if (Array.isArray(manifest.metadata.links)) {\n    info.links = manifest.metadata.links.filter(isJsonObject).map(link => ({\n      title: String(link.title),\n      url: String(link.url),\n    }));\n  }\n\n  return info;\n}\n\nfunction resolvePackageInfo(packageJson?: JsonObject) {\n  if (!packageJson) {\n    return undefined;\n  }\n\n  const info: FrontendPluginInfo = {\n    packageName: packageJson?.name?.toString(),\n    version: packageJson?.version?.toString(),\n    description: packageJson?.description?.toString(),\n  };\n\n  const links: { title: string; url: string }[] = [];\n\n  if (typeof packageJson.homepage === 'string') {\n    links.push({\n      title: 'Homepage',\n      url: packageJson.homepage,\n    });\n  }\n\n  if (\n    isJsonObject(packageJson.repository) &&\n    typeof packageJson.repository?.url === 'string'\n  ) {\n    try {\n      const url = new URL(packageJson.repository?.url);\n      if (url.protocol === 'http:' || url.protocol === 'https:') {\n        // TODO(Rugvip): Support more variants\n        if (\n          url.hostname === 'github.com' &&\n          typeof packageJson.repository.directory === 'string'\n        ) {\n          const path = `${url.pathname}/tree/-/${packageJson.repository.directory}`;\n          url.pathname = path.replaceAll('//', '/');\n        }\n\n        links.push({\n          title: 'Repository',\n          url: url.toString(),\n        });\n      }\n    } catch {\n      /* ignored */\n    }\n  }\n\n  if (links.length > 0) {\n    info.links = links;\n  }\n  return info;\n}\n\nfunction makeStringMatcher(pattern: string | undefined) {\n  if (!pattern) {\n    return () => true;\n  }\n  if (pattern.startsWith('/') && pattern.endsWith('/') && pattern.length > 2) {\n    const regex = new RegExp(pattern.slice(1, -1));\n    return (str?: string) => (str ? regex.test(str) : false);\n  }\n\n  return (str?: string) => str === pattern;\n}\n\nfunction isJsonObject(value?: JsonValue): value is JsonObject {\n  return typeof value === 'object' && value !== null && !Array.isArray(value);\n}\n"],"names":[],"mappings":"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"}