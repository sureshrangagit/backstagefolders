{"version":3,"file":"Router.esm.js","sources":["../src/Router.tsx"],"sourcesContent":["/*\n * Copyright 2020 The Backstage Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { ReactElement, PropsWithChildren } from 'react';\nimport { Route, Routes, useRoutes } from 'react-router-dom';\n\nimport { Entity } from '@backstage/catalog-model';\nimport { EntityPageDocs } from './EntityPageDocs';\nimport { TechDocsIndexPage } from './home/components/TechDocsIndexPage';\nimport { TechDocsReaderPage } from './reader/components/TechDocsReaderPage';\nimport {\n  useEntity,\n  MissingAnnotationEmptyState,\n} from '@backstage/plugin-catalog-react';\nimport {\n  TECHDOCS_ANNOTATION,\n  TECHDOCS_EXTERNAL_ANNOTATION,\n} from '@backstage/plugin-techdocs-common';\n\n/**\n * Helper that takes in entity and returns true/false if TechDocs is available for the entity\n *\n * @public\n */\nexport const isTechDocsAvailable = (entity: Entity) =>\n  Boolean(entity?.metadata?.annotations?.[TECHDOCS_ANNOTATION]) ||\n  Boolean(entity?.metadata?.annotations?.[TECHDOCS_EXTERNAL_ANNOTATION]);\n\n/**\n * Responsible for registering routes for TechDocs, TechDocs Homepage and separate TechDocs page\n *\n * @public\n */\nexport const Router = () => {\n  return (\n    <Routes>\n      <Route path=\"/\" element={<TechDocsIndexPage />} />\n      <Route\n        path=\"/:namespace/:kind/:name/*\"\n        element={<TechDocsReaderPage />}\n      />\n    </Routes>\n  );\n};\n\nexport const TechDocsReaderRouter = (props: PropsWithChildren) => {\n  const { children } = props;\n\n  // Using objects instead of <Route> elements, otherwise \"outlet\" will be null on sub-pages and add-ons won't render\n  const element = useRoutes([\n    {\n      path: '*',\n      element: <TechDocsReaderPage />,\n      children: [\n        {\n          path: '*',\n          element: children,\n        },\n      ],\n    },\n  ]);\n\n  return element;\n};\n\nexport const EmbeddedDocsRouter = (\n  props: PropsWithChildren<{\n    emptyState?: ReactElement;\n    withSearch?: boolean;\n  }>,\n) => {\n  const { children, emptyState, withSearch = true } = props;\n  const { entity } = useEntity();\n\n  // Using objects instead of <Route> elements, otherwise \"outlet\" will be null on sub-pages and add-ons won't render\n  const element = useRoutes([\n    {\n      path: '/*',\n      element: <EntityPageDocs entity={entity} withSearch={withSearch} />,\n      children: [\n        {\n          path: '*',\n          element: children,\n        },\n      ],\n    },\n  ]);\n\n  const projectId =\n    entity.metadata.annotations?.[TECHDOCS_ANNOTATION] ||\n    entity.metadata.annotations?.[TECHDOCS_EXTERNAL_ANNOTATION];\n\n  if (!projectId) {\n    return (\n      emptyState ?? (\n        <MissingAnnotationEmptyState annotation={[TECHDOCS_ANNOTATION]} />\n      )\n    );\n  }\n  return element;\n};\n\n/**\n * Responsible for registering route to view docs on Entity page\n *\n * @public\n */\nexport const LegacyEmbeddedDocsRouter = ({\n  children,\n  withSearch = true,\n}: PropsWithChildren<{ withSearch?: boolean }>) => {\n  // Wrap the Router to avoid exposing the emptyState prop in the non-alpha\n  // public API and make it easier for us to change later.\n  return <EmbeddedDocsRouter children={children} withSearch={withSearch} />;\n};\n"],"names":[],"mappings":";;;;;;;;AAqCO,MAAM,mBAAsB,GAAA,CAAC,MAClC,KAAA,OAAA,CAAQ,QAAQ,QAAU,EAAA,WAAA,GAAc,mBAAmB,CAAC,KAC5D,OAAQ,CAAA,MAAA,EAAQ,QAAU,EAAA,WAAA,GAAc,4BAA4B,CAAC;AAOhE,MAAM,SAAS,MAAM;AAC1B,EAAA,4BACG,MACC,EAAA,EAAA,QAAA,EAAA;AAAA,oBAAA,GAAA,CAAC,SAAM,IAAK,EAAA,GAAA,EAAI,OAAS,kBAAA,GAAA,CAAC,qBAAkB,CAAI,EAAA,CAAA;AAAA,oBAChD,GAAA;AAAA,MAAC,KAAA;AAAA,MAAA;AAAA,QACC,IAAK,EAAA,2BAAA;AAAA,QACL,OAAA,sBAAU,kBAAmB,EAAA,EAAA;AAAA;AAAA;AAC/B,GACF,EAAA,CAAA;AAEJ;AAEa,MAAA,oBAAA,GAAuB,CAAC,KAA6B,KAAA;AAChE,EAAM,MAAA,EAAE,UAAa,GAAA,KAAA;AAGrB,EAAA,MAAM,UAAU,SAAU,CAAA;AAAA,IACxB;AAAA,MACE,IAAM,EAAA,GAAA;AAAA,MACN,OAAA,sBAAU,kBAAmB,EAAA,EAAA,CAAA;AAAA,MAC7B,QAAU,EAAA;AAAA,QACR;AAAA,UACE,IAAM,EAAA,GAAA;AAAA,UACN,OAAS,EAAA;AAAA;AACX;AACF;AACF,GACD,CAAA;AAED,EAAO,OAAA,OAAA;AACT;AAEa,MAAA,kBAAA,GAAqB,CAChC,KAIG,KAAA;AACH,EAAA,MAAM,EAAE,QAAA,EAAU,UAAY,EAAA,UAAA,GAAa,MAAS,GAAA,KAAA;AACpD,EAAM,MAAA,EAAE,MAAO,EAAA,GAAI,SAAU,EAAA;AAG7B,EAAA,MAAM,UAAU,SAAU,CAAA;AAAA,IACxB;AAAA,MACE,IAAM,EAAA,IAAA;AAAA,MACN,OAAS,kBAAA,GAAA,CAAC,cAAe,EAAA,EAAA,MAAA,EAAgB,UAAwB,EAAA,CAAA;AAAA,MACjE,QAAU,EAAA;AAAA,QACR;AAAA,UACE,IAAM,EAAA,GAAA;AAAA,UACN,OAAS,EAAA;AAAA;AACX;AACF;AACF,GACD,CAAA;AAED,EAAM,MAAA,SAAA,GACJ,OAAO,QAAS,CAAA,WAAA,GAAc,mBAAmB,CACjD,IAAA,MAAA,CAAO,QAAS,CAAA,WAAA,GAAc,4BAA4B,CAAA;AAE5D,EAAA,IAAI,CAAC,SAAW,EAAA;AACd,IAAA,OACE,8BACG,GAAA,CAAA,2BAAA,EAAA,EAA4B,UAAY,EAAA,CAAC,mBAAmB,CAAG,EAAA,CAAA;AAAA;AAItE,EAAO,OAAA,OAAA;AACT;AAOO,MAAM,2BAA2B,CAAC;AAAA,EACvC,QAAA;AAAA,EACA,UAAa,GAAA;AACf,CAAmD,KAAA;AAGjD,EAAO,uBAAA,GAAA,CAAC,kBAAmB,EAAA,EAAA,QAAA,EAAoB,UAAwB,EAAA,CAAA;AACzE;;;;"}