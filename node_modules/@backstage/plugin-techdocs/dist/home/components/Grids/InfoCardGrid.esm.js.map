{"version":3,"file":"InfoCardGrid.esm.js","sources":["../../../../src/home/components/Grids/InfoCardGrid.tsx"],"sourcesContent":["/*\n * Copyright 2021 The Backstage Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport useAsync from 'react-use/esm/useAsync';\nimport { Entity, stringifyEntityRef } from '@backstage/catalog-model';\nimport { useApi, useRouteRef, configApiRef } from '@backstage/core-plugin-api';\nimport {\n  ItemCardGrid,\n  InfoCard,\n  Link,\n  Progress,\n} from '@backstage/core-components';\nimport {\n  EntityRefPresentationSnapshot,\n  entityPresentationApiRef,\n} from '@backstage/plugin-catalog-react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { rootDocsRouteRef } from '../../../routes';\nimport { toLowerMaybe } from '../../../helpers';\n\n/** @public */\nexport type InfoCardGridClassKey = 'linkSpacer' | 'readMoreLink';\n\nconst useStyles = makeStyles(\n  theme => ({\n    linkSpacer: {\n      paddingTop: theme.spacing(0.2),\n    },\n    readMoreLink: {\n      paddingTop: theme.spacing(0.2),\n    },\n  }),\n  { name: 'BackstageInfoCardGrid' },\n);\n\n/**\n * Props for {@link InfoCardGrid}\n *\n * @public\n */\nexport type InfoCardGridProps = {\n  entities: Entity[] | undefined;\n  linkContent?: string | JSX.Element;\n  linkDestination?: (entity: Entity) => string | undefined;\n};\n\n/**\n * Component which accepts a list of entities and renders a info card for each entity\n *\n * @public\n */\nexport const InfoCardGrid = (props: InfoCardGridProps) => {\n  const { entities, linkContent, linkDestination } = props;\n  const classes = useStyles();\n  const getRouteToReaderPageFor = useRouteRef(rootDocsRouteRef);\n  const config = useApi(configApiRef);\n  const linkRoute = (entity: Entity) => {\n    if (linkDestination) {\n      const destination = linkDestination(entity);\n      if (destination) {\n        return destination;\n      }\n    }\n    return getRouteToReaderPageFor({\n      namespace: toLowerMaybe(entity.metadata.namespace ?? 'default', config),\n      kind: toLowerMaybe(entity.kind, config),\n      name: toLowerMaybe(entity.metadata.name, config),\n    });\n  };\n  const entityPresentationApi = useApi(entityPresentationApiRef);\n  const { value: entityRefToPresentation, loading } = useAsync(async () => {\n    return new Map<string, EntityRefPresentationSnapshot>(\n      await Promise.all(\n        entities?.map(async entity => {\n          const presentation = await entityPresentationApi.forEntity(entity)\n            .promise;\n          return [stringifyEntityRef(entity), presentation] as [\n            string,\n            EntityRefPresentationSnapshot,\n          ];\n        }) || [],\n      ),\n    );\n  });\n  if (loading) return <Progress />;\n  if (!entities || !entities?.length) return null;\n  return (\n    <ItemCardGrid data-testid=\"info-card-container\">\n      {entities.map(entity => (\n        <InfoCard\n          key={entity.metadata.name}\n          data-testid={entity?.metadata?.title}\n          title={\n            entityRefToPresentation?.get(stringifyEntityRef(entity))\n              ?.primaryTitle\n          }\n        >\n          <div>{entity?.metadata?.description}</div>\n          <div className={classes.linkSpacer} />\n          <Link\n            to={linkRoute(entity)}\n            className={classes.readMoreLink}\n            data-testid=\"read-docs-link\"\n          >\n            {linkContent || 'Read Docs'}\n          </Link>\n        </InfoCard>\n      ))}\n    </ItemCardGrid>\n  );\n};\n"],"names":[],"mappings":";;;;;;;;;;AAoCA,MAAM,SAAY,GAAA,UAAA;AAAA,EAChB,CAAU,KAAA,MAAA;AAAA,IACR,UAAY,EAAA;AAAA,MACV,UAAA,EAAY,KAAM,CAAA,OAAA,CAAQ,GAAG;AAAA,KAC/B;AAAA,IACA,YAAc,EAAA;AAAA,MACZ,UAAA,EAAY,KAAM,CAAA,OAAA,CAAQ,GAAG;AAAA;AAC/B,GACF,CAAA;AAAA,EACA,EAAE,MAAM,uBAAwB;AAClC,CAAA;AAkBa,MAAA,YAAA,GAAe,CAAC,KAA6B,KAAA;AACxD,EAAA,MAAM,EAAE,QAAA,EAAU,WAAa,EAAA,eAAA,EAAoB,GAAA,KAAA;AACnD,EAAA,MAAM,UAAU,SAAU,EAAA;AAC1B,EAAM,MAAA,uBAAA,GAA0B,YAAY,gBAAgB,CAAA;AAC5D,EAAM,MAAA,MAAA,GAAS,OAAO,YAAY,CAAA;AAClC,EAAM,MAAA,SAAA,GAAY,CAAC,MAAmB,KAAA;AACpC,IAAA,IAAI,eAAiB,EAAA;AACnB,MAAM,MAAA,WAAA,GAAc,gBAAgB,MAAM,CAAA;AAC1C,MAAA,IAAI,WAAa,EAAA;AACf,QAAO,OAAA,WAAA;AAAA;AACT;AAEF,IAAA,OAAO,uBAAwB,CAAA;AAAA,MAC7B,WAAW,YAAa,CAAA,MAAA,CAAO,QAAS,CAAA,SAAA,IAAa,WAAW,MAAM,CAAA;AAAA,MACtE,IAAM,EAAA,YAAA,CAAa,MAAO,CAAA,IAAA,EAAM,MAAM,CAAA;AAAA,MACtC,IAAM,EAAA,YAAA,CAAa,MAAO,CAAA,QAAA,CAAS,MAAM,MAAM;AAAA,KAChD,CAAA;AAAA,GACH;AACA,EAAM,MAAA,qBAAA,GAAwB,OAAO,wBAAwB,CAAA;AAC7D,EAAA,MAAM,EAAE,KAAO,EAAA,uBAAA,EAAyB,OAAQ,EAAA,GAAI,SAAS,YAAY;AACvE,IAAA,OAAO,IAAI,GAAA;AAAA,MACT,MAAM,OAAQ,CAAA,GAAA;AAAA,QACZ,QAAA,EAAU,GAAI,CAAA,OAAM,MAAU,KAAA;AAC5B,UAAA,MAAM,YAAe,GAAA,MAAM,qBAAsB,CAAA,SAAA,CAAU,MAAM,CAC9D,CAAA,OAAA;AACH,UAAA,OAAO,CAAC,kBAAA,CAAmB,MAAM,CAAA,EAAG,YAAY,CAAA;AAAA,SAIjD,KAAK;AAAC;AACT,KACF;AAAA,GACD,CAAA;AACD,EAAI,IAAA,OAAA,EAAgB,uBAAA,GAAA,CAAC,QAAS,EAAA,EAAA,CAAA;AAC9B,EAAA,IAAI,CAAC,QAAA,IAAY,CAAC,QAAA,EAAU,QAAe,OAAA,IAAA;AAC3C,EAAA,2BACG,YAAa,EAAA,EAAA,aAAA,EAAY,qBACvB,EAAA,QAAA,EAAA,QAAA,CAAS,IAAI,CACZ,MAAA,qBAAA,IAAA;AAAA,IAAC,QAAA;AAAA,IAAA;AAAA,MAEC,aAAA,EAAa,QAAQ,QAAU,EAAA,KAAA;AAAA,MAC/B,OACE,uBAAyB,EAAA,GAAA,CAAI,kBAAmB,CAAA,MAAM,CAAC,CACnD,EAAA,YAAA;AAAA,MAGN,QAAA,EAAA;AAAA,wBAAC,GAAA,CAAA,KAAA,EAAA,EAAK,QAAQ,EAAA,MAAA,EAAA,QAAA,EAAU,WAAY,EAAA,CAAA;AAAA,wBACnC,GAAA,CAAA,KAAA,EAAA,EAAI,SAAW,EAAA,OAAA,CAAQ,UAAY,EAAA,CAAA;AAAA,wBACpC,GAAA;AAAA,UAAC,IAAA;AAAA,UAAA;AAAA,YACC,EAAA,EAAI,UAAU,MAAM,CAAA;AAAA,YACpB,WAAW,OAAQ,CAAA,YAAA;AAAA,YACnB,aAAY,EAAA,gBAAA;AAAA,YAEX,QAAe,EAAA,WAAA,IAAA;AAAA;AAAA;AAClB;AAAA,KAAA;AAAA,IAfK,OAAO,QAAS,CAAA;AAAA,GAiBxB,CACH,EAAA,CAAA;AAEJ;;;;"}