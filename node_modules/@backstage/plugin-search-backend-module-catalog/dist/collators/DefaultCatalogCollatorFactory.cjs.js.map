{"version":3,"file":"DefaultCatalogCollatorFactory.cjs.js","sources":["../../src/collators/DefaultCatalogCollatorFactory.ts"],"sourcesContent":["/*\n * Copyright 2022 The Backstage Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { AuthService } from '@backstage/backend-plugin-api';\nimport { QueryEntitiesInitialRequest } from '@backstage/catalog-client';\nimport { stringifyEntityRef } from '@backstage/catalog-model';\nimport { Config } from '@backstage/config';\nimport { CatalogEntityDocument } from '@backstage/plugin-catalog-common';\nimport { catalogEntityReadPermission } from '@backstage/plugin-catalog-common/alpha';\nimport { CatalogService } from '@backstage/plugin-catalog-node';\nimport { Permission } from '@backstage/plugin-permission-common';\nimport { DocumentCollatorFactory } from '@backstage/plugin-search-common';\nimport { Readable } from 'stream';\nimport { CatalogCollatorEntityTransformer } from './CatalogCollatorEntityTransformer';\nimport { readCollatorConfigOptions } from './config';\nimport { defaultCatalogCollatorEntityTransformer } from './defaultCatalogCollatorEntityTransformer';\n\nexport type DefaultCatalogCollatorFactoryOptions = {\n  auth: AuthService;\n  catalog: CatalogService;\n  /*\n   * Allows you to customize how entities are shaped into documents.\n   */\n  entityTransformer?: CatalogCollatorEntityTransformer;\n};\n\n/**\n * Collates entities from the Catalog into documents for the search backend.\n */\nexport class DefaultCatalogCollatorFactory implements DocumentCollatorFactory {\n  public readonly type = 'software-catalog';\n  public readonly visibilityPermission: Permission =\n    catalogEntityReadPermission;\n\n  private locationTemplate: string;\n  private filter?: QueryEntitiesInitialRequest['filter'];\n  private batchSize: number;\n  private readonly catalog: CatalogService;\n  private entityTransformer: CatalogCollatorEntityTransformer;\n  private auth: AuthService;\n\n  static fromConfig(\n    configRoot: Config,\n    options: DefaultCatalogCollatorFactoryOptions,\n  ) {\n    const configOptions = readCollatorConfigOptions(configRoot);\n    return new DefaultCatalogCollatorFactory({\n      locationTemplate: configOptions.locationTemplate,\n      filter: configOptions.filter,\n      batchSize: configOptions.batchSize,\n      entityTransformer: options.entityTransformer,\n      auth: options.auth,\n      catalog: options.catalog,\n    });\n  }\n\n  private constructor(options: {\n    locationTemplate: string;\n    filter: QueryEntitiesInitialRequest['filter'];\n    batchSize: number;\n    entityTransformer?: CatalogCollatorEntityTransformer;\n    auth: AuthService;\n    catalog: CatalogService;\n  }) {\n    const {\n      auth,\n      batchSize,\n      locationTemplate,\n      filter,\n      catalog,\n      entityTransformer,\n    } = options;\n\n    this.locationTemplate = locationTemplate;\n    this.filter = filter;\n    this.batchSize = batchSize;\n    this.catalog = catalog;\n    this.entityTransformer =\n      entityTransformer ?? defaultCatalogCollatorEntityTransformer;\n    this.auth = auth;\n  }\n\n  async getCollator(): Promise<Readable> {\n    return Readable.from(this.execute());\n  }\n\n  private async *execute(): AsyncGenerator<CatalogEntityDocument> {\n    let entitiesRetrieved = 0;\n    let cursor: string | undefined = undefined;\n\n    do {\n      const response = await this.catalog.queryEntities(\n        {\n          filter: this.filter,\n          limit: this.batchSize,\n          ...(cursor ? { cursor } : {}),\n        },\n        { credentials: await this.auth.getOwnServiceCredentials() },\n      );\n      cursor = response.pageInfo.nextCursor;\n      entitiesRetrieved += response.items.length;\n\n      for (const entity of response.items) {\n        yield {\n          ...this.entityTransformer(entity),\n          authorization: {\n            resourceRef: stringifyEntityRef(entity),\n          },\n          location: this.applyArgsToFormat(this.locationTemplate, {\n            namespace: encodeURIComponent(\n              entity.metadata.namespace || 'default',\n            ),\n            kind: encodeURIComponent(entity.kind),\n            name: encodeURIComponent(entity.metadata.name),\n          }),\n        };\n      }\n    } while (cursor);\n  }\n\n  private applyArgsToFormat(\n    format: string,\n    args: Record<string, string>,\n  ): string {\n    let formatted = format;\n\n    for (const [key, value] of Object.entries(args)) {\n      formatted = formatted.replace(`:${key}`, value);\n    }\n\n    return formatted.toLowerCase();\n  }\n}\n"],"names":["catalogEntityReadPermission","readCollatorConfigOptions","defaultCatalogCollatorEntityTransformer","Readable","stringifyEntityRef"],"mappings":";;;;;;;;AA0CO,MAAM,6BAAiE,CAAA;AAAA,EAC5D,IAAO,GAAA,kBAAA;AAAA,EACP,oBACd,GAAAA,iCAAA;AAAA,EAEM,gBAAA;AAAA,EACA,MAAA;AAAA,EACA,SAAA;AAAA,EACS,OAAA;AAAA,EACT,iBAAA;AAAA,EACA,IAAA;AAAA,EAER,OAAO,UACL,CAAA,UAAA,EACA,OACA,EAAA;AACA,IAAM,MAAA,aAAA,GAAgBC,iCAA0B,UAAU,CAAA;AAC1D,IAAA,OAAO,IAAI,6BAA8B,CAAA;AAAA,MACvC,kBAAkB,aAAc,CAAA,gBAAA;AAAA,MAChC,QAAQ,aAAc,CAAA,MAAA;AAAA,MACtB,WAAW,aAAc,CAAA,SAAA;AAAA,MACzB,mBAAmB,OAAQ,CAAA,iBAAA;AAAA,MAC3B,MAAM,OAAQ,CAAA,IAAA;AAAA,MACd,SAAS,OAAQ,CAAA;AAAA,KAClB,CAAA;AAAA;AACH,EAEQ,YAAY,OAOjB,EAAA;AACD,IAAM,MAAA;AAAA,MACJ,IAAA;AAAA,MACA,SAAA;AAAA,MACA,gBAAA;AAAA,MACA,MAAA;AAAA,MACA,OAAA;AAAA,MACA;AAAA,KACE,GAAA,OAAA;AAEJ,IAAA,IAAA,CAAK,gBAAmB,GAAA,gBAAA;AACxB,IAAA,IAAA,CAAK,MAAS,GAAA,MAAA;AACd,IAAA,IAAA,CAAK,SAAY,GAAA,SAAA;AACjB,IAAA,IAAA,CAAK,OAAU,GAAA,OAAA;AACf,IAAA,IAAA,CAAK,oBACH,iBAAqB,IAAAC,+EAAA;AACvB,IAAA,IAAA,CAAK,IAAO,GAAA,IAAA;AAAA;AACd,EAEA,MAAM,WAAiC,GAAA;AACrC,IAAA,OAAOC,eAAS,CAAA,IAAA,CAAK,IAAK,CAAA,OAAA,EAAS,CAAA;AAAA;AACrC,EAEA,OAAe,OAAiD,GAAA;AAC9D,IAAA,IAAI,iBAAoB,GAAA,CAAA;AACxB,IAAA,IAAI,MAA6B,GAAA,KAAA,CAAA;AAEjC,IAAG,GAAA;AACD,MAAM,MAAA,QAAA,GAAW,MAAM,IAAA,CAAK,OAAQ,CAAA,aAAA;AAAA,QAClC;AAAA,UACE,QAAQ,IAAK,CAAA,MAAA;AAAA,UACb,OAAO,IAAK,CAAA,SAAA;AAAA,UACZ,GAAI,MAAA,GAAS,EAAE,MAAA,KAAW;AAAC,SAC7B;AAAA,QACA,EAAE,WAAa,EAAA,MAAM,IAAK,CAAA,IAAA,CAAK,0BAA2B;AAAA,OAC5D;AACA,MAAA,MAAA,GAAS,SAAS,QAAS,CAAA,UAAA;AAC3B,MAAA,iBAAA,IAAqB,SAAS,KAAM,CAAA,MAAA;AAEpC,MAAW,KAAA,MAAA,MAAA,IAAU,SAAS,KAAO,EAAA;AACnC,QAAM,MAAA;AAAA,UACJ,GAAG,IAAK,CAAA,iBAAA,CAAkB,MAAM,CAAA;AAAA,UAChC,aAAe,EAAA;AAAA,YACb,WAAA,EAAaC,gCAAmB,MAAM;AAAA,WACxC;AAAA,UACA,QAAU,EAAA,IAAA,CAAK,iBAAkB,CAAA,IAAA,CAAK,gBAAkB,EAAA;AAAA,YACtD,SAAW,EAAA,kBAAA;AAAA,cACT,MAAA,CAAO,SAAS,SAAa,IAAA;AAAA,aAC/B;AAAA,YACA,IAAA,EAAM,kBAAmB,CAAA,MAAA,CAAO,IAAI,CAAA;AAAA,YACpC,IAAM,EAAA,kBAAA,CAAmB,MAAO,CAAA,QAAA,CAAS,IAAI;AAAA,WAC9C;AAAA,SACH;AAAA;AACF,KACO,QAAA,MAAA;AAAA;AACX,EAEQ,iBAAA,CACN,QACA,IACQ,EAAA;AACR,IAAA,IAAI,SAAY,GAAA,MAAA;AAEhB,IAAA,KAAA,MAAW,CAAC,GAAK,EAAA,KAAK,KAAK,MAAO,CAAA,OAAA,CAAQ,IAAI,CAAG,EAAA;AAC/C,MAAA,SAAA,GAAY,SAAU,CAAA,OAAA,CAAQ,CAAI,CAAA,EAAA,GAAG,IAAI,KAAK,CAAA;AAAA;AAGhD,IAAA,OAAO,UAAU,WAAY,EAAA;AAAA;AAEjC;;;;"}