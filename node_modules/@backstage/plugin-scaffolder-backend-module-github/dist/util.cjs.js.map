{"version":3,"file":"util.cjs.js","sources":["../src/util.ts"],"sourcesContent":["/*\n * Copyright 2025 The Backstage Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { InputError } from '@backstage/errors';\nimport {\n  DefaultGithubCredentialsProvider,\n  GithubCredentialsProvider,\n  ScmIntegrationRegistry,\n} from '@backstage/integration';\nimport { parseRepoUrl } from '@backstage/plugin-scaffolder-node';\nimport { OctokitOptions } from '@octokit/core/dist-types/types';\n\nconst DEFAULT_TIMEOUT_MS = 60_000;\n\n/**\n * Helper for generating octokit configuration options.\n * If no token is provided, it will attempt to get a token from the credentials provider.\n * @public\n */\nexport async function getOctokitOptions(options: {\n  integrations: ScmIntegrationRegistry;\n  credentialsProvider?: GithubCredentialsProvider;\n  token?: string;\n  host: string;\n  owner?: string;\n  repo?: string;\n}): Promise<OctokitOptions>;\n\n/**\n * Helper for generating octokit configuration options for given repoUrl.\n * If no token is provided, it will attempt to get a token from the credentials provider.\n * @public\n * @deprecated Use options `host`, `owner` and `repo` instead of `repoUrl`.\n */\nexport async function getOctokitOptions(options: {\n  integrations: ScmIntegrationRegistry;\n  credentialsProvider?: GithubCredentialsProvider;\n  token?: string;\n  repoUrl: string;\n}): Promise<OctokitOptions>;\n\nexport async function getOctokitOptions(options: {\n  integrations: ScmIntegrationRegistry;\n  credentialsProvider?: GithubCredentialsProvider;\n  token?: string;\n  host?: string;\n  owner?: string;\n  repo?: string;\n  repoUrl?: string;\n}): Promise<OctokitOptions> {\n  const { integrations, credentialsProvider, token, repoUrl } = options;\n  const { host, owner, repo } = repoUrl\n    ? parseRepoUrl(repoUrl, integrations)\n    : options;\n\n  const requestOptions = {\n    // set timeout to 60 seconds\n    timeout: DEFAULT_TIMEOUT_MS,\n  };\n\n  const integrationConfig = integrations.github.byHost(host!)?.config;\n\n  if (!integrationConfig) {\n    throw new InputError(`No integration for host ${host}`);\n  }\n\n  // short circuit the `githubCredentialsProvider` if there is a token provided by the caller already\n  if (token) {\n    return {\n      auth: token,\n      baseUrl: integrationConfig.apiBaseUrl,\n      previews: ['nebula-preview'],\n      request: requestOptions,\n    };\n  }\n\n  if (!owner || !repo) {\n    throw new InputError(\n      `No owner and/or owner provided, which is required if a token is not provided`,\n    );\n  }\n\n  const githubCredentialsProvider =\n    credentialsProvider ??\n    DefaultGithubCredentialsProvider.fromIntegrations(integrations);\n\n  const { token: credentialProviderToken } =\n    await githubCredentialsProvider.getCredentials({\n      url: `https://${host}/${encodeURIComponent(owner)}/${encodeURIComponent(\n        repo,\n      )}`,\n    });\n\n  if (!credentialProviderToken) {\n    throw new InputError(\n      `No token available for host: ${host}, with owner ${owner}, and repo ${repo}. Make sure GitHub auth is configured correctly. See https://backstage.io/docs/auth/github/provider for more details.`,\n    );\n  }\n\n  return {\n    auth: credentialProviderToken,\n    baseUrl: integrationConfig.apiBaseUrl,\n    previews: ['nebula-preview'],\n  };\n}\n"],"names":["parseRepoUrl","InputError","DefaultGithubCredentialsProvider"],"mappings":";;;;;;AAyBA,MAAM,kBAAqB,GAAA,GAAA;AA6B3B,eAAsB,kBAAkB,OAQZ,EAAA;AAC1B,EAAA,MAAM,EAAE,YAAA,EAAc,mBAAqB,EAAA,KAAA,EAAO,SAAY,GAAA,OAAA;AAC9D,EAAM,MAAA,EAAE,MAAM,KAAO,EAAA,IAAA,KAAS,OAC1B,GAAAA,iCAAA,CAAa,OAAS,EAAA,YAAY,CAClC,GAAA,OAAA;AAEJ,EAAA,MAAM,cAAiB,GAAA;AAAA;AAAA,IAErB,OAAS,EAAA;AAAA,GACX;AAEA,EAAA,MAAM,iBAAoB,GAAA,YAAA,CAAa,MAAO,CAAA,MAAA,CAAO,IAAK,CAAG,EAAA,MAAA;AAE7D,EAAA,IAAI,CAAC,iBAAmB,EAAA;AACtB,IAAA,MAAM,IAAIC,iBAAA,CAAW,CAA2B,wBAAA,EAAA,IAAI,CAAE,CAAA,CAAA;AAAA;AAIxD,EAAA,IAAI,KAAO,EAAA;AACT,IAAO,OAAA;AAAA,MACL,IAAM,EAAA,KAAA;AAAA,MACN,SAAS,iBAAkB,CAAA,UAAA;AAAA,MAC3B,QAAA,EAAU,CAAC,gBAAgB,CAAA;AAAA,MAC3B,OAAS,EAAA;AAAA,KACX;AAAA;AAGF,EAAI,IAAA,CAAC,KAAS,IAAA,CAAC,IAAM,EAAA;AACnB,IAAA,MAAM,IAAIA,iBAAA;AAAA,MACR,CAAA,4EAAA;AAAA,KACF;AAAA;AAGF,EAAA,MAAM,yBACJ,GAAA,mBAAA,IACAC,4CAAiC,CAAA,gBAAA,CAAiB,YAAY,CAAA;AAEhE,EAAA,MAAM,EAAE,KAAO,EAAA,uBAAA,EACb,GAAA,MAAM,0BAA0B,cAAe,CAAA;AAAA,IAC7C,KAAK,CAAW,QAAA,EAAA,IAAI,IAAI,kBAAmB,CAAA,KAAK,CAAC,CAAI,CAAA,EAAA,kBAAA;AAAA,MACnD;AAAA,KACD,CAAA;AAAA,GACF,CAAA;AAEH,EAAA,IAAI,CAAC,uBAAyB,EAAA;AAC5B,IAAA,MAAM,IAAID,iBAAA;AAAA,MACR,CAAgC,6BAAA,EAAA,IAAI,CAAgB,aAAA,EAAA,KAAK,cAAc,IAAI,CAAA,qHAAA;AAAA,KAC7E;AAAA;AAGF,EAAO,OAAA;AAAA,IACL,IAAM,EAAA,uBAAA;AAAA,IACN,SAAS,iBAAkB,CAAA,UAAA;AAAA,IAC3B,QAAA,EAAU,CAAC,gBAAgB;AAAA,GAC7B;AACF;;;;"}