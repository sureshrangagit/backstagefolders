{"version":3,"file":"githubIssuesLabel.cjs.js","sources":["../../src/actions/githubIssuesLabel.ts"],"sourcesContent":["/*\n * Copyright 2021 The Backstage Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n  GithubCredentialsProvider,\n  ScmIntegrationRegistry,\n} from '@backstage/integration';\nimport {\n  createTemplateAction,\n  parseRepoUrl,\n} from '@backstage/plugin-scaffolder-node';\nimport { assertError, InputError } from '@backstage/errors';\nimport { Octokit } from 'octokit';\nimport { getOctokitOptions } from '../util';\nimport { examples } from './githubIssuesLabel.examples';\n\n/**\n * Adds labels to a pull request or issue on GitHub\n * @public\n */\nexport function createGithubIssuesLabelAction(options: {\n  integrations: ScmIntegrationRegistry;\n  githubCredentialsProvider?: GithubCredentialsProvider;\n}) {\n  const { integrations, githubCredentialsProvider } = options;\n\n  return createTemplateAction({\n    id: 'github:issues:label',\n    description: 'Adds labels to a pull request or issue on GitHub.',\n    examples,\n    schema: {\n      input: {\n        repoUrl: z =>\n          z.string({\n            description:\n              'Accepts the format `github.com?repo=reponame&owner=owner` where `reponame` is the repository name and `owner` is an organization or username',\n          }),\n        number: z =>\n          z.number({\n            description: 'The pull request or issue number to add labels to',\n          }),\n        labels: z =>\n          z.array(z.string(), {\n            description: 'The labels to add to the pull request or issue',\n          }),\n        token: z =>\n          z\n            .string({\n              description:\n                'The `GITHUB_TOKEN` to use for authorization to GitHub',\n            })\n            .optional(),\n      },\n    },\n    async handler(ctx) {\n      const { repoUrl, number, labels, token: providedToken } = ctx.input;\n\n      const { host, owner, repo } = parseRepoUrl(repoUrl, integrations);\n      ctx.logger.info(`Adding labels to ${number} issue on repo ${repo}`);\n\n      if (!owner) {\n        throw new InputError('Invalid repository owner provided in repoUrl');\n      }\n\n      const octokitOptions = await getOctokitOptions({\n        integrations,\n        credentialsProvider: githubCredentialsProvider,\n        host,\n        owner,\n        repo,\n        token: providedToken,\n      });\n      const client = new Octokit({\n        ...octokitOptions,\n        log: ctx.logger,\n      });\n\n      try {\n        await ctx.checkpoint({\n          key: `github.issues.add.label.${owner}.${repo}.${number}`,\n          fn: async () => {\n            await client.rest.issues.addLabels({\n              owner,\n              repo,\n              issue_number: number,\n              labels,\n            });\n          },\n        });\n      } catch (e) {\n        assertError(e);\n        ctx.logger.warn(\n          `Failed: adding labels to issue: '${number}' on repo: '${repo}', ${e.message}`,\n        );\n      }\n    },\n  });\n}\n"],"names":["createTemplateAction","examples","parseRepoUrl","InputError","getOctokitOptions","Octokit","assertError"],"mappings":";;;;;;;;AAiCO,SAAS,8BAA8B,OAG3C,EAAA;AACD,EAAM,MAAA,EAAE,YAAc,EAAA,yBAAA,EAA8B,GAAA,OAAA;AAEpD,EAAA,OAAOA,yCAAqB,CAAA;AAAA,IAC1B,EAAI,EAAA,qBAAA;AAAA,IACJ,WAAa,EAAA,mDAAA;AAAA,cACbC,mCAAA;AAAA,IACA,MAAQ,EAAA;AAAA,MACN,KAAO,EAAA;AAAA,QACL,OAAA,EAAS,CACP,CAAA,KAAA,CAAA,CAAE,MAAO,CAAA;AAAA,UACP,WACE,EAAA;AAAA,SACH,CAAA;AAAA,QACH,MAAA,EAAQ,CACN,CAAA,KAAA,CAAA,CAAE,MAAO,CAAA;AAAA,UACP,WAAa,EAAA;AAAA,SACd,CAAA;AAAA,QACH,QAAQ,CACN,CAAA,KAAA,CAAA,CAAE,KAAM,CAAA,CAAA,CAAE,QAAU,EAAA;AAAA,UAClB,WAAa,EAAA;AAAA,SACd,CAAA;AAAA,QACH,KAAA,EAAO,CACL,CAAA,KAAA,CAAA,CACG,MAAO,CAAA;AAAA,UACN,WACE,EAAA;AAAA,SACH,EACA,QAAS;AAAA;AAChB,KACF;AAAA,IACA,MAAM,QAAQ,GAAK,EAAA;AACjB,MAAA,MAAM,EAAE,OAAS,EAAA,MAAA,EAAQ,QAAQ,KAAO,EAAA,aAAA,KAAkB,GAAI,CAAA,KAAA;AAE9D,MAAA,MAAM,EAAE,IAAM,EAAA,KAAA,EAAO,MAAS,GAAAC,iCAAA,CAAa,SAAS,YAAY,CAAA;AAChE,MAAA,GAAA,CAAI,OAAO,IAAK,CAAA,CAAA,iBAAA,EAAoB,MAAM,CAAA,eAAA,EAAkB,IAAI,CAAE,CAAA,CAAA;AAElE,MAAA,IAAI,CAAC,KAAO,EAAA;AACV,QAAM,MAAA,IAAIC,kBAAW,8CAA8C,CAAA;AAAA;AAGrE,MAAM,MAAA,cAAA,GAAiB,MAAMC,sBAAkB,CAAA;AAAA,QAC7C,YAAA;AAAA,QACA,mBAAqB,EAAA,yBAAA;AAAA,QACrB,IAAA;AAAA,QACA,KAAA;AAAA,QACA,IAAA;AAAA,QACA,KAAO,EAAA;AAAA,OACR,CAAA;AACD,MAAM,MAAA,MAAA,GAAS,IAAIC,eAAQ,CAAA;AAAA,QACzB,GAAG,cAAA;AAAA,QACH,KAAK,GAAI,CAAA;AAAA,OACV,CAAA;AAED,MAAI,IAAA;AACF,QAAA,MAAM,IAAI,UAAW,CAAA;AAAA,UACnB,KAAK,CAA2B,wBAAA,EAAA,KAAK,CAAI,CAAA,EAAA,IAAI,IAAI,MAAM,CAAA,CAAA;AAAA,UACvD,IAAI,YAAY;AACd,YAAM,MAAA,MAAA,CAAO,IAAK,CAAA,MAAA,CAAO,SAAU,CAAA;AAAA,cACjC,KAAA;AAAA,cACA,IAAA;AAAA,cACA,YAAc,EAAA,MAAA;AAAA,cACd;AAAA,aACD,CAAA;AAAA;AACH,SACD,CAAA;AAAA,eACM,CAAG,EAAA;AACV,QAAAC,kBAAA,CAAY,CAAC,CAAA;AACb,QAAA,GAAA,CAAI,MAAO,CAAA,IAAA;AAAA,UACT,oCAAoC,MAAM,CAAA,YAAA,EAAe,IAAI,CAAA,GAAA,EAAM,EAAE,OAAO,CAAA;AAAA,SAC9E;AAAA;AACF;AACF,GACD,CAAA;AACH;;;;"}