import { jsxs, jsx } from 'react/jsx-runtime';
import { makeStyles } from '@material-ui/core/styles';
import ListItem from '@material-ui/core/ListItem';
import ListItemAvatar from '@material-ui/core/ListItemAvatar';
import ListItemText from '@material-ui/core/ListItemText';
import Typography from '@material-ui/core/Typography';
import Button from '@material-ui/core/Button';
import { useState } from 'react';
import { isError } from '@backstage/errors';
import { coreComponentsTranslationRef } from '../../translation.esm.js';
import { useTranslationRef } from '@backstage/core-plugin-api/alpha';

const useItemStyles = makeStyles(
  (theme) => ({
    root: {
      paddingLeft: theme.spacing(3)
    }
  }),
  { name: "BackstageLoginRequestListItem" }
);
const LoginRequestListItem = ({ request, busy, setBusy }) => {
  const classes = useItemStyles();
  const [error, setError] = useState();
  const { t } = useTranslationRef(coreComponentsTranslationRef);
  const handleContinue = async () => {
    setBusy(true);
    try {
      await request.trigger();
    } catch (e) {
      setError(isError(e) ? e.message : "An unspecified error occurred");
    } finally {
      setBusy(false);
    }
  };
  const IconComponent = request.provider.icon;
  return /* @__PURE__ */ jsxs(ListItem, { disabled: busy, classes: { root: classes.root }, children: [
    /* @__PURE__ */ jsx(ListItemAvatar, { children: /* @__PURE__ */ jsx(IconComponent, { fontSize: "large" }) }),
    /* @__PURE__ */ jsx(
      ListItemText,
      {
        primary: request.provider.title,
        secondary: error && /* @__PURE__ */ jsx(Typography, { color: "error", children: error })
      }
    ),
    /* @__PURE__ */ jsx(Button, { color: "primary", variant: "contained", onClick: handleContinue, children: t("oauthRequestDialog.login") })
  ] });
};

export { LoginRequestListItem as default };
//# sourceMappingURL=LoginRequestListItem.esm.js.map
