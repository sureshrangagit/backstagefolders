import { convertLegacyRouteRefs } from '@backstage/core-compat-api';
import { createFrontendPlugin } from '@backstage/frontend-plugin-api';
import { kubernetesPage } from './pages.esm.js';
import { entityKubernetesContent } from './entityContents.esm.js';
import { rootCatalogKubernetesRouteRef } from '../plugin.esm.js';
import { kubernetesApiExtension, kubernetesProxyApi, kubernetesAuthProvidersApi, kubernetesClusterLinkFormatterApi } from './apis.esm.js';

var plugin = createFrontendPlugin({
  pluginId: "kubernetes",
  info: { packageJson: () => import('../package.json.esm.js') },
  extensions: [
    kubernetesPage,
    entityKubernetesContent,
    kubernetesApiExtension,
    kubernetesProxyApi,
    kubernetesAuthProvidersApi,
    kubernetesClusterLinkFormatterApi
  ],
  routes: convertLegacyRouteRefs({ kubernetes: rootCatalogKubernetesRouteRef })
});

export { plugin as default };
//# sourceMappingURL=plugin.esm.js.map
