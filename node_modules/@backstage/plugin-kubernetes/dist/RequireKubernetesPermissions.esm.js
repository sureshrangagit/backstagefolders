import { jsx, Fragment } from 'react/jsx-runtime';
import { kubernetesClustersReadPermission, kubernetesResourcesReadPermission } from '@backstage/plugin-kubernetes-common';
import { usePermission } from '@backstage/plugin-permission-react';
import { WarningPanel } from '@backstage/core-components';
import { useTranslationRef } from '@backstage/core-plugin-api/alpha';
import { kubernetesTranslationRef } from './alpha/translation.esm.js';

function RequireKubernetesPermissions(props) {
  const kubernetesClustersPermissionResult = usePermission({
    permission: kubernetesClustersReadPermission
  });
  const kubernetesResourcesPermissionResult = usePermission({
    permission: kubernetesResourcesReadPermission
  });
  const { t } = useTranslationRef(kubernetesTranslationRef);
  if (kubernetesClustersPermissionResult.loading || kubernetesResourcesPermissionResult.loading) {
    return null;
  }
  if (kubernetesClustersPermissionResult.allowed && kubernetesResourcesPermissionResult.allowed) {
    return /* @__PURE__ */ jsx(Fragment, { children: props.children });
  }
  return /* @__PURE__ */ jsx(
    WarningPanel,
    {
      title: t("kubernetesContentPage.permissionAlert.title"),
      message: t("kubernetesContentPage.permissionAlert.message")
    }
  );
}

export { RequireKubernetesPermissions };
//# sourceMappingURL=RequireKubernetesPermissions.esm.js.map
