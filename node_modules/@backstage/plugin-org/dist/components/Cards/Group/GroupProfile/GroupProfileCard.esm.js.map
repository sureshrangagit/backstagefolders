{"version":3,"file":"GroupProfileCard.esm.js","sources":["../../../../../src/components/Cards/Group/GroupProfile/GroupProfileCard.tsx"],"sourcesContent":["/*\n * Copyright 2020 The Backstage Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n  ANNOTATION_EDIT_URL,\n  ANNOTATION_LOCATION,\n  GroupEntity,\n  RELATION_CHILD_OF,\n  RELATION_PARENT_OF,\n  stringifyEntityRef,\n} from '@backstage/catalog-model';\nimport {\n  Avatar,\n  InfoCard,\n  InfoCardVariants,\n  Link,\n} from '@backstage/core-components';\nimport Box from '@material-ui/core/Box';\nimport Grid from '@material-ui/core/Grid';\nimport IconButton from '@material-ui/core/IconButton';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport {\n  EntityRefLinks,\n  catalogApiRef,\n  getEntityRelations,\n  useEntity,\n} from '@backstage/plugin-catalog-react';\nimport { useCallback } from 'react';\nimport { alertApiRef, useApi } from '@backstage/core-plugin-api';\n\nimport AccountTreeIcon from '@material-ui/icons/AccountTree';\nimport Alert from '@material-ui/lab/Alert';\nimport CachedIcon from '@material-ui/icons/Cached';\nimport EditIcon from '@material-ui/icons/Edit';\nimport EmailIcon from '@material-ui/icons/Email';\nimport GroupIcon from '@material-ui/icons/Group';\nimport PermIdentityIcon from '@material-ui/icons/PermIdentity';\nimport { LinksGroup } from '../../Meta';\nimport { useEntityPermission } from '@backstage/plugin-catalog-react/alpha';\nimport { catalogEntityRefreshPermission } from '@backstage/plugin-catalog-common/alpha';\nimport { useTranslationRef } from '@backstage/frontend-plugin-api';\nimport { orgTranslationRef } from '../../../../translation';\n\nconst CardTitle = (props: { title: string }) => (\n  <Box display=\"flex\" alignItems=\"center\">\n    <GroupIcon fontSize=\"inherit\" />\n    <Box ml={1}>{props.title}</Box>\n  </Box>\n);\n\n/** @public */\nexport const GroupProfileCard = (props: {\n  variant?: InfoCardVariants;\n  showLinks?: boolean;\n}) => {\n  const catalogApi = useApi(catalogApiRef);\n  const alertApi = useApi(alertApiRef);\n  const { entity: group } = useEntity<GroupEntity>();\n  const { allowed: canRefresh } = useEntityPermission(\n    catalogEntityRefreshPermission,\n  );\n  const { t } = useTranslationRef(orgTranslationRef);\n\n  const refreshEntity = useCallback(async () => {\n    await catalogApi.refreshEntity(stringifyEntityRef(group));\n    alertApi.post({\n      message: 'Refresh scheduled',\n      severity: 'info',\n      display: 'transient',\n    });\n  }, [catalogApi, alertApi, group]);\n\n  if (!group) {\n    return (\n      <Alert severity=\"error\">{t('groupProfileCard.groupNotFound')}</Alert>\n    );\n  }\n\n  const {\n    metadata: { name, description, title, annotations, links },\n    spec: { profile },\n  } = group;\n\n  const childRelations = getEntityRelations(group, RELATION_PARENT_OF, {\n    kind: 'Group',\n  });\n  const parentRelations = getEntityRelations(group, RELATION_CHILD_OF, {\n    kind: 'group',\n  });\n\n  const entityLocation = annotations?.[ANNOTATION_LOCATION];\n  const allowRefresh =\n    entityLocation?.startsWith('url:') || entityLocation?.startsWith('file:');\n\n  const entityMetadataEditUrl =\n    group.metadata.annotations?.[ANNOTATION_EDIT_URL];\n\n  const displayName = profile?.displayName ?? title ?? name;\n  const emailHref = profile?.email ? `mailto:${profile.email}` : '#';\n  const infoCardAction = entityMetadataEditUrl ? (\n    <IconButton\n      aria-label={t('groupProfileCard.editIconButtonTitle')}\n      title={t('groupProfileCard.editIconButtonTitle')}\n      component={Link}\n      to={entityMetadataEditUrl}\n    >\n      <EditIcon />\n    </IconButton>\n  ) : (\n    <IconButton\n      aria-label={t('groupProfileCard.editIconButtonTitle')}\n      disabled\n      title={t('groupProfileCard.editIconButtonTitle')}\n    >\n      <EditIcon />\n    </IconButton>\n  );\n\n  return (\n    <InfoCard\n      title={<CardTitle title={displayName} />}\n      subheader={description}\n      variant={props.variant}\n      action={\n        <>\n          {allowRefresh && canRefresh && (\n            <IconButton\n              aria-label={t('groupProfileCard.refreshIconButtonAriaLabel')}\n              title={t('groupProfileCard.refreshIconButtonTitle')}\n              onClick={refreshEntity}\n            >\n              <CachedIcon />\n            </IconButton>\n          )}\n          {infoCardAction}\n        </>\n      }\n    >\n      <Grid container spacing={3}>\n        <Grid item xs={12} sm={2} xl={1}>\n          <Avatar displayName={displayName} picture={profile?.picture} />\n        </Grid>\n        <Grid item md={10} xl={11}>\n          <List>\n            <ListItem>\n              <ListItemIcon>\n                <Tooltip title={t('groupProfileCard.listItemTitle.entityRef')}>\n                  <PermIdentityIcon />\n                </Tooltip>\n              </ListItemIcon>\n              <ListItemText\n                primary={stringifyEntityRef(group)}\n                secondary={t('groupProfileCard.listItemTitle.entityRef')}\n              />\n            </ListItem>\n            {profile?.email && (\n              <ListItem>\n                <ListItemIcon>\n                  <Tooltip title={t('groupProfileCard.listItemTitle.email')}>\n                    <EmailIcon />\n                  </Tooltip>\n                </ListItemIcon>\n                <ListItemText\n                  primary={<Link to={emailHref}>{profile.email}</Link>}\n                  secondary={t('groupProfileCard.listItemTitle.email')}\n                />\n              </ListItem>\n            )}\n            <ListItem>\n              <ListItemIcon>\n                <Tooltip\n                  title={t('groupProfileCard.listItemTitle.parentGroup')}\n                >\n                  <AccountTreeIcon />\n                </Tooltip>\n              </ListItemIcon>\n              <ListItemText\n                primary={\n                  parentRelations.length ? (\n                    <EntityRefLinks\n                      entityRefs={parentRelations}\n                      defaultKind=\"Group\"\n                    />\n                  ) : (\n                    'N/A'\n                  )\n                }\n                secondary={t('groupProfileCard.listItemTitle.parentGroup')}\n              />\n            </ListItem>\n            <ListItem>\n              <ListItemIcon>\n                <Tooltip\n                  title={t('groupProfileCard.listItemTitle.childGroups')}\n                >\n                  <GroupIcon />\n                </Tooltip>\n              </ListItemIcon>\n              <ListItemText\n                primary={\n                  childRelations.length ? (\n                    <EntityRefLinks\n                      entityRefs={childRelations}\n                      defaultKind=\"Group\"\n                    />\n                  ) : (\n                    'N/A'\n                  )\n                }\n                secondary={t('groupProfileCard.listItemTitle.childGroups')}\n              />\n            </ListItem>\n            {props?.showLinks && <LinksGroup links={links} />}\n          </List>\n        </Grid>\n      </Grid>\n    </InfoCard>\n  );\n};\n"],"names":[],"mappings":"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"}