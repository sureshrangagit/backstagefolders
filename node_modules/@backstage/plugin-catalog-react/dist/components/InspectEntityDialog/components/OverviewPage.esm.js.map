{"version":3,"file":"OverviewPage.esm.js","sources":["../../../../src/components/InspectEntityDialog/components/OverviewPage.tsx"],"sourcesContent":["/*\n * Copyright 2022 The Backstage Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { AlphaEntity } from '@backstage/catalog-model/alpha';\nimport Box from '@material-ui/core/Box';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemSecondaryAction from '@material-ui/core/ListItemSecondaryAction';\nimport Typography from '@material-ui/core/Typography';\nimport { makeStyles } from '@material-ui/core/styles';\nimport groupBy from 'lodash/groupBy';\nimport sortBy from 'lodash/sortBy';\nimport { EntityRefLink } from '../../EntityRefLink';\nimport {\n  Container,\n  HelpIcon,\n  KeyValueListItem,\n  ListItemText,\n  ListSubheader,\n} from './common';\nimport { stringifyEntityRef } from '@backstage/catalog-model';\nimport { CopyTextButton } from '@backstage/core-components';\nimport { catalogReactTranslationRef } from '../../../translation';\nimport { useTranslationRef } from '@backstage/core-plugin-api/alpha';\n\nconst useStyles = makeStyles({\n  root: {\n    display: 'flex',\n    flexDirection: 'column',\n  },\n});\n\nexport function OverviewPage(props: { entity: AlphaEntity }) {\n  const classes = useStyles();\n  const {\n    apiVersion,\n    kind,\n    metadata,\n    spec,\n    relations = [],\n    status = {},\n  } = props.entity;\n\n  const groupedRelations = groupBy(\n    sortBy(relations, r => r.targetRef),\n    'type',\n  );\n  const { t } = useTranslationRef(catalogReactTranslationRef);\n\n  const entityRef = stringifyEntityRef(props.entity);\n  return (\n    <>\n      <DialogContentText variant=\"h2\">\n        {t('inspectEntityDialog.overviewPage.title')}\n      </DialogContentText>\n      <div className={classes.root}>\n        <Container title=\"Identity\">\n          <List dense>\n            <ListItem>\n              <ListItemText primary=\"apiVersion\" secondary={apiVersion} />\n            </ListItem>\n            <ListItem>\n              <ListItemText primary=\"kind\" secondary={kind} />\n            </ListItem>\n            {spec?.type && (\n              <ListItem>\n                <ListItemText\n                  primary=\"spec.type\"\n                  secondary={spec.type?.toString()}\n                />\n              </ListItem>\n            )}\n            {metadata.uid && (\n              <ListItem>\n                <ListItemText primary=\"uid\" secondary={metadata.uid} />\n                <ListItemSecondaryAction>\n                  <CopyTextButton text={metadata.uid} />\n                </ListItemSecondaryAction>\n              </ListItem>\n            )}\n            {metadata.etag && (\n              <ListItem>\n                <ListItemText primary=\"etag\" secondary={metadata.etag} />\n                <ListItemSecondaryAction>\n                  <CopyTextButton text={metadata.etag} />\n                </ListItemSecondaryAction>\n              </ListItem>\n            )}\n            <ListItem>\n              <ListItemText primary=\"entityRef\" secondary={entityRef} />\n              <ListItemSecondaryAction>\n                <CopyTextButton text={entityRef} />\n              </ListItemSecondaryAction>\n            </ListItem>\n          </List>\n        </Container>\n\n        <Container title=\"Metadata\">\n          {!!Object.keys(metadata.annotations || {}).length && (\n            <List\n              dense\n              subheader={\n                <ListSubheader>\n                  Annotations\n                  <HelpIcon to=\"https://backstage.io/docs/features/software-catalog/well-known-annotations\" />\n                </ListSubheader>\n              }\n            >\n              {Object.entries(metadata.annotations!).map(entry => (\n                <KeyValueListItem key={entry[0]} indent entry={entry} />\n              ))}\n            </List>\n          )}\n          {!!Object.keys(metadata.labels || {}).length && (\n            <List dense subheader={<ListSubheader>Labels</ListSubheader>}>\n              {Object.entries(metadata.labels!).map(entry => (\n                <KeyValueListItem key={entry[0]} indent entry={entry} />\n              ))}\n            </List>\n          )}\n          {!!metadata.tags?.length && (\n            <List dense subheader={<ListSubheader>Tags</ListSubheader>}>\n              {metadata.tags.map((tag, index) => (\n                <ListItem key={`${tag}-${index}`}>\n                  <ListItemIcon />\n                  <ListItemText primary={tag} />\n                </ListItem>\n              ))}\n            </List>\n          )}\n        </Container>\n\n        {!!relations.length && (\n          <Container\n            title=\"Relations\"\n            helpLink=\"https://backstage.io/docs/features/software-catalog/well-known-relations\"\n          >\n            {Object.entries(groupedRelations).map(\n              ([type, groupRelations], index) => (\n                <div key={index}>\n                  <List dense subheader={<ListSubheader>{type}</ListSubheader>}>\n                    {groupRelations.map(group => (\n                      <ListItem key={group.targetRef}>\n                        <ListItemText\n                          primary={\n                            <EntityRefLink entityRef={group.targetRef} />\n                          }\n                        />\n                      </ListItem>\n                    ))}\n                  </List>\n                </div>\n              ),\n            )}\n          </Container>\n        )}\n\n        {!!status.items?.length && (\n          <Container\n            title=\"Status\"\n            helpLink=\"https://backstage.io/docs/features/software-catalog/well-known-statuses\"\n          >\n            {status.items.map((item, index) => (\n              <div key={index}>\n                <Typography>\n                  {item.level}: {item.type}\n                </Typography>\n                <Box ml={2}>{item.message}</Box>\n              </div>\n            ))}\n          </Container>\n        )}\n      </div>\n    </>\n  );\n}\n"],"names":[],"mappings":"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"}