{"version":3,"file":"EntityContextMenuItemBlueprint.esm.js","sources":["../../../src/alpha/blueprints/EntityContextMenuItemBlueprint.tsx"],"sourcesContent":["/*\n * Copyright 2025 The Backstage Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { ReactNode, JSX } from 'react';\nimport {\n  coreExtensionData,\n  createExtensionBlueprint,\n  ExtensionBoundary,\n} from '@backstage/frontend-plugin-api';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport { useEntityContextMenu } from '../../hooks/useEntityContextMenu';\nimport {\n  EntityPredicate,\n  entityPredicateToFilterFunction,\n} from '../predicates';\nimport type { Entity } from '@backstage/catalog-model';\nimport { entityFilterFunctionDataRef } from './extensionData';\nimport { createEntityPredicateSchema } from '../predicates/createEntityPredicateSchema';\n/** @alpha */\nexport type UseProps = () =>\n  | {\n      title: ReactNode;\n      href: string;\n      disabled?: boolean;\n    }\n  | {\n      title: ReactNode;\n      onClick: () => void | Promise<void>;\n      disabled?: boolean;\n    };\n\n/** @alpha */\nexport type EntityContextMenuItemParams = {\n  useProps: UseProps;\n  icon: JSX.Element;\n  filter?: EntityPredicate | ((entity: Entity) => boolean);\n};\n\n/** @alpha */\nexport const EntityContextMenuItemBlueprint = createExtensionBlueprint({\n  kind: 'entity-context-menu-item',\n  attachTo: { id: 'page:catalog/entity', input: 'contextMenuItems' },\n  output: [\n    coreExtensionData.reactElement,\n    entityFilterFunctionDataRef.optional(),\n  ],\n  dataRefs: {\n    filterFunction: entityFilterFunctionDataRef,\n  },\n  config: {\n    schema: {\n      filter: z => createEntityPredicateSchema(z).optional(),\n    },\n  },\n  *factory(params: EntityContextMenuItemParams, { node, config }) {\n    const loader = async () => {\n      const Component = () => {\n        const { onMenuClose } = useEntityContextMenu();\n        const { title, ...menuItemProps } = params.useProps();\n        let handleClick = undefined;\n\n        if ('onClick' in menuItemProps) {\n          handleClick = () => {\n            const result = menuItemProps.onClick();\n            if (result && 'then' in result) {\n              result.then(onMenuClose, onMenuClose);\n            } else {\n              onMenuClose();\n            }\n          };\n        }\n\n        return (\n          <MenuItem {...menuItemProps} onClick={handleClick}>\n            <ListItemIcon>{params.icon}</ListItemIcon>\n            <ListItemText primary={title} />\n          </MenuItem>\n        );\n      };\n\n      return <Component />;\n    };\n\n    yield coreExtensionData.reactElement(ExtensionBoundary.lazy(node, loader));\n\n    if (config.filter) {\n      yield entityFilterFunctionDataRef(\n        entityPredicateToFilterFunction(config.filter),\n      );\n    } else if (typeof params.filter === 'function') {\n      yield entityFilterFunctionDataRef(params.filter);\n    } else if (params.filter) {\n      yield entityFilterFunctionDataRef(\n        entityPredicateToFilterFunction(params.filter),\n      );\n    }\n  },\n});\n"],"names":[],"mappings":";;;;;;;;;;AAsDO,MAAM,iCAAiC,wBAAyB,CAAA;AAAA,EACrE,IAAM,EAAA,0BAAA;AAAA,EACN,QAAU,EAAA,EAAE,EAAI,EAAA,qBAAA,EAAuB,OAAO,kBAAmB,EAAA;AAAA,EACjE,MAAQ,EAAA;AAAA,IACN,iBAAkB,CAAA,YAAA;AAAA,IAClB,4BAA4B,QAAS;AAAA,GACvC;AAAA,EACA,QAAU,EAAA;AAAA,IACR,cAAgB,EAAA;AAAA,GAClB;AAAA,EACA,MAAQ,EAAA;AAAA,IACN,MAAQ,EAAA;AAAA,MACN,MAAQ,EAAA,CAAA,CAAA,KAAK,2BAA4B,CAAA,CAAC,EAAE,QAAS;AAAA;AACvD,GACF;AAAA,EACA,CAAC,OAAQ,CAAA,MAAA,EAAqC,EAAE,IAAA,EAAM,QAAU,EAAA;AAC9D,IAAA,MAAM,SAAS,YAAY;AACzB,MAAA,MAAM,YAAY,MAAM;AACtB,QAAM,MAAA,EAAE,WAAY,EAAA,GAAI,oBAAqB,EAAA;AAC7C,QAAA,MAAM,EAAE,KAAO,EAAA,GAAG,aAAc,EAAA,GAAI,OAAO,QAAS,EAAA;AACpD,QAAA,IAAI,WAAc,GAAA,KAAA,CAAA;AAElB,QAAA,IAAI,aAAa,aAAe,EAAA;AAC9B,UAAA,WAAA,GAAc,MAAM;AAClB,YAAM,MAAA,MAAA,GAAS,cAAc,OAAQ,EAAA;AACrC,YAAI,IAAA,MAAA,IAAU,UAAU,MAAQ,EAAA;AAC9B,cAAO,MAAA,CAAA,IAAA,CAAK,aAAa,WAAW,CAAA;AAAA,aAC/B,MAAA;AACL,cAAY,WAAA,EAAA;AAAA;AACd,WACF;AAAA;AAGF,QAAA,uBACG,IAAA,CAAA,QAAA,EAAA,EAAU,GAAG,aAAA,EAAe,SAAS,WACpC,EAAA,QAAA,EAAA;AAAA,0BAAC,GAAA,CAAA,YAAA,EAAA,EAAc,iBAAO,IAAK,EAAA,CAAA;AAAA,0BAC3B,GAAA,CAAC,YAAa,EAAA,EAAA,OAAA,EAAS,KAAO,EAAA;AAAA,SAChC,EAAA,CAAA;AAAA,OAEJ;AAEA,MAAA,2BAAQ,SAAU,EAAA,EAAA,CAAA;AAAA,KACpB;AAEA,IAAA,MAAM,kBAAkB,YAAa,CAAA,iBAAA,CAAkB,IAAK,CAAA,IAAA,EAAM,MAAM,CAAC,CAAA;AAEzE,IAAA,IAAI,OAAO,MAAQ,EAAA;AACjB,MAAM,MAAA,2BAAA;AAAA,QACJ,+BAAA,CAAgC,OAAO,MAAM;AAAA,OAC/C;AAAA,KACS,MAAA,IAAA,OAAO,MAAO,CAAA,MAAA,KAAW,UAAY,EAAA;AAC9C,MAAM,MAAA,2BAAA,CAA4B,OAAO,MAAM,CAAA;AAAA,KACjD,MAAA,IAAW,OAAO,MAAQ,EAAA;AACxB,MAAM,MAAA,2BAAA;AAAA,QACJ,+BAAA,CAAgC,OAAO,MAAM;AAAA,OAC/C;AAAA;AACF;AAEJ,CAAC;;;;"}