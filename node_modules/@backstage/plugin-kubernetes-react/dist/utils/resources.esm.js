const currentToDeclaredResourceToPerc = (current, resource) => {
  if (Number(resource) === 0) return 0;
  if (typeof current === "number" && typeof resource === "number") {
    return Math.round(current / resource * 100);
  }
  const numerator = BigInt(
    typeof current === "number" ? Math.round(current) : Number(current)
  );
  const denominator = BigInt(
    typeof resource === "number" ? Math.round(resource) : Number(resource)
  );
  return Number(numerator * BigInt(100) / denominator);
};
const bytesToMiB = (value) => {
  return `${(parseFloat(value.toString()) / 1024 / 1024).toFixed(0)}MiB`;
};
const formatMillicores = (value) => {
  return `${(parseFloat(value.toString()) * 1e3).toFixed(0)}m`;
};

export { bytesToMiB, currentToDeclaredResourceToPerc, formatMillicores };
//# sourceMappingURL=resources.esm.js.map
