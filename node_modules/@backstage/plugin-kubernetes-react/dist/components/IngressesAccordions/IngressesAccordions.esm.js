import { jsx, jsxs } from 'react/jsx-runtime';
import { useContext } from 'react';
import Accordion from '@material-ui/core/Accordion';
import AccordionDetails from '@material-ui/core/AccordionDetails';
import AccordionSummary from '@material-ui/core/AccordionSummary';
import Grid from '@material-ui/core/Grid';
import ExpandMoreIcon from '@material-ui/icons/ExpandMore';
import { IngressDrawer } from './IngressDrawer.esm.js';
import '@backstage/core-plugin-api';
import 'react-use/esm/useAsync';
import '../../api/types.esm.js';
import 'react-use/esm/useInterval';
import 'react-use/esm/useAsyncRetry';
import '../../kubernetes-auth-provider/types.esm.js';
import '../../hooks/PodNamesWithErrors.esm.js';
import '../../hooks/PodNamesWithMetrics.esm.js';
import { GroupedResponsesContext } from '../../hooks/GroupedResponses.esm.js';
import '../../hooks/Cluster.esm.js';
import '../../hooks/usePodMetrics.esm.js';
import '../../hooks/useMatchingErrors.esm.js';
import { StructuredMetadataTable } from '@backstage/core-components';

const IngressSummary = ({ ingress }) => {
  return /* @__PURE__ */ jsx(
    Grid,
    {
      container: true,
      direction: "row",
      justifyContent: "flex-start",
      alignItems: "center",
      children: /* @__PURE__ */ jsx(Grid, { xs: 12, item: true, children: /* @__PURE__ */ jsx(IngressDrawer, { ingress }) })
    }
  );
};
const IngressCard = ({ ingress }) => {
  return /* @__PURE__ */ jsx(
    StructuredMetadataTable,
    {
      metadata: {
        ...ingress.spec
      },
      options: {
        nestedValuesAsYaml: true
      }
    }
  );
};
const IngressAccordion = ({ ingress }) => {
  return /* @__PURE__ */ jsxs(Accordion, { TransitionProps: { unmountOnExit: true }, children: [
    /* @__PURE__ */ jsx(AccordionSummary, { expandIcon: /* @__PURE__ */ jsx(ExpandMoreIcon, {}), children: /* @__PURE__ */ jsx(IngressSummary, { ingress }) }),
    /* @__PURE__ */ jsx(AccordionDetails, { children: /* @__PURE__ */ jsx(IngressCard, { ingress }) })
  ] });
};
const IngressesAccordions = ({}) => {
  const groupedResponses = useContext(GroupedResponsesContext);
  return /* @__PURE__ */ jsx(
    Grid,
    {
      container: true,
      direction: "row",
      justifyContent: "flex-start",
      alignItems: "flex-start",
      children: groupedResponses.ingresses.map((ingress, i) => /* @__PURE__ */ jsx(Grid, { item: true, xs: true, children: /* @__PURE__ */ jsx(IngressAccordion, { ingress }) }, i))
    }
  );
};

export { IngressesAccordions };
//# sourceMappingURL=IngressesAccordions.esm.js.map
