{"version":3,"file":"ErrorPanel.esm.js","sources":["../../../src/components/ErrorPanel/ErrorPanel.tsx"],"sourcesContent":["/*\n * Copyright 2020 The Backstage Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { ReactNode } from 'react';\nimport Typography from '@material-ui/core/Typography';\nimport { ClusterObjects } from '@backstage/plugin-kubernetes-common';\nimport { WarningPanel } from '@backstage/core-components';\n\nconst clustersWithErrorsToErrorMessage = (\n  clustersWithErrors: ClusterObjects[],\n): ReactNode => {\n  return clustersWithErrors.map((c, i) => {\n    return (\n      <div key={i}>\n        <Typography variant=\"body2\">{`Cluster: ${\n          c.cluster.title || c.cluster.name\n        }`}</Typography>\n        {c.errors.map((e, j) => {\n          return (\n            <Typography variant=\"body2\" key={j}>\n              {e.errorType === 'FETCH_ERROR'\n                ? `Error communicating with Kubernetes: ${e.errorType}, message: ${e.message}`\n                : `Error fetching Kubernetes resource: '${e.resourcePath}', error: ${e.errorType}, status code: ${e.statusCode}`}\n            </Typography>\n          );\n        })}\n        <br />\n      </div>\n    );\n  });\n};\n\n/**\n *\n *\n * @public\n */\nexport type ErrorPanelProps = {\n  entityName: string;\n  errorMessage?: string;\n  clustersWithErrors?: ClusterObjects[];\n  children?: ReactNode;\n};\n\n/**\n *\n *\n * @public\n */\nexport const ErrorPanel = ({\n  entityName,\n  errorMessage,\n  clustersWithErrors,\n}: ErrorPanelProps) => (\n  <WarningPanel\n    title=\"There was a problem retrieving Kubernetes objects\"\n    message={`There was a problem retrieving some Kubernetes resources for the entity: ${entityName}. This could mean that the Error Reporting card is not completely accurate.`}\n  >\n    {clustersWithErrors && (\n      <div>Errors: {clustersWithErrorsToErrorMessage(clustersWithErrors)}</div>\n    )}\n    {errorMessage && (\n      <Typography variant=\"body2\">Errors: {errorMessage}</Typography>\n    )}\n  </WarningPanel>\n);\n"],"names":[],"mappings":";;;;AAqBA,MAAM,gCAAA,GAAmC,CACvC,kBACc,KAAA;AACd,EAAA,OAAO,kBAAmB,CAAA,GAAA,CAAI,CAAC,CAAA,EAAG,CAAM,KAAA;AACtC,IAAA,4BACG,KACC,EAAA,EAAA,QAAA,EAAA;AAAA,sBAAC,GAAA,CAAA,UAAA,EAAA,EAAW,OAAQ,EAAA,OAAA,EAAS,QAC3B,EAAA,CAAA,SAAA,EAAA,CAAA,CAAE,QAAQ,KAAS,IAAA,CAAA,CAAE,OAAQ,CAAA,IAC/B,CAAG,CAAA,EAAA,CAAA;AAAA,MACF,CAAE,CAAA,MAAA,CAAO,GAAI,CAAA,CAAC,GAAG,CAAM,KAAA;AACtB,QACE,uBAAA,GAAA,CAAC,UAAW,EAAA,EAAA,OAAA,EAAQ,OACjB,EAAA,QAAA,EAAA,CAAA,CAAE,cAAc,aACb,GAAA,CAAA,qCAAA,EAAwC,CAAE,CAAA,SAAS,CAAc,WAAA,EAAA,CAAA,CAAE,OAAO,CAC1E,CAAA,GAAA,CAAA,qCAAA,EAAwC,CAAE,CAAA,YAAY,CAAa,UAAA,EAAA,CAAA,CAAE,SAAS,CAAkB,eAAA,EAAA,CAAA,CAAE,UAAU,CAAA,CAAA,EAAA,EAHjF,CAIjC,CAAA;AAAA,OAEH,CAAA;AAAA,0BACA,IAAG,EAAA,EAAA;AAAA,KAAA,EAAA,EAbI,CAcV,CAAA;AAAA,GAEH,CAAA;AACH,CAAA;AAmBO,MAAM,aAAa,CAAC;AAAA,EACzB,UAAA;AAAA,EACA,YAAA;AAAA,EACA;AACF,CACE,qBAAA,IAAA;AAAA,EAAC,YAAA;AAAA,EAAA;AAAA,IACC,KAAM,EAAA,mDAAA;AAAA,IACN,OAAA,EAAS,4EAA4E,UAAU,CAAA,2EAAA,CAAA;AAAA,IAE9F,QAAA,EAAA;AAAA,MAAA,kBAAA,yBACE,KAAI,EAAA,EAAA,QAAA,EAAA;AAAA,QAAA,UAAA;AAAA,QAAS,iCAAiC,kBAAkB;AAAA,OAAE,EAAA,CAAA;AAAA,MAEpE,YACC,oBAAA,IAAA,CAAC,UAAW,EAAA,EAAA,OAAA,EAAQ,OAAQ,EAAA,QAAA,EAAA;AAAA,QAAA,UAAA;AAAA,QAAS;AAAA,OAAa,EAAA;AAAA;AAAA;AAEtD;;;;"}