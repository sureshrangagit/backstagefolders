{"version":3,"file":"KubernetesStructuredMetadataTableDrawer.esm.js","sources":["../../../src/components/KubernetesDrawer/KubernetesStructuredMetadataTableDrawer.tsx"],"sourcesContent":["/*\n * Copyright 2020 The Backstage Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { ReactNode, ChangeEvent, useContext, useState } from 'react';\nimport Button from '@material-ui/core/Button';\nimport Typography from '@material-ui/core/Typography';\nimport IconButton from '@material-ui/core/IconButton';\nimport Drawer from '@material-ui/core/Drawer';\nimport Switch from '@material-ui/core/Switch';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport Grid from '@material-ui/core/Grid';\nimport { makeStyles, createStyles, Theme } from '@material-ui/core/styles';\nimport Close from '@material-ui/icons/Close';\nimport OpenInNewIcon from '@material-ui/icons/OpenInNew';\nimport type { V1ObjectMeta } from '@kubernetes/client-node';\nimport { withStyles } from '@material-ui/core/styles';\nimport {\n  LinkButton as BackstageButton,\n  StructuredMetadataTable,\n  WarningPanel,\n} from '@backstage/core-components';\nimport { ClusterContext } from '../../hooks';\nimport { ClusterAttributes } from '@backstage/plugin-kubernetes-common';\nimport { ManifestYaml } from './ManifestYaml';\nimport { useApi } from '@backstage/core-plugin-api';\nimport { kubernetesClusterLinkFormatterApiRef } from '../../api';\nimport useAsync from 'react-use/esm/useAsync';\n\nconst useDrawerStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    paper: {\n      width: '50%',\n      justifyContent: 'space-between',\n      padding: theme.spacing(2.5),\n    },\n  }),\n);\n\nconst useDrawerContentStyles = makeStyles((_: Theme) =>\n  createStyles({\n    header: {\n      display: 'flex',\n      flexDirection: 'row',\n      justifyContent: 'space-between',\n    },\n    errorMessage: {\n      marginTop: '1em',\n      marginBottom: '1em',\n    },\n    options: {\n      display: 'flex',\n      flexDirection: 'row',\n      justifyContent: 'space-between',\n    },\n    icon: {\n      fontSize: 20,\n    },\n    content: {\n      height: '80%',\n    },\n  }),\n);\n\nconst PodDrawerButton = withStyles({\n  root: {\n    padding: '6px 5px',\n  },\n  label: {\n    textTransform: 'none',\n  },\n})(Button);\n\n/**\n *\n *\n * @public\n */\nexport type LinkErrorPanelProps = {\n  cluster: ClusterAttributes;\n  errorMessage?: string;\n  children?: ReactNode;\n};\n\n/**\n *\n *\n * @public\n */\nexport const LinkErrorPanel = ({\n  cluster,\n  errorMessage,\n}: LinkErrorPanelProps) => (\n  <WarningPanel\n    title=\"There was a problem formatting the link to the Kubernetes dashboard\"\n    message={`Could not format the link to the dashboard of your cluster named '${\n      cluster.name\n    }'. Its dashboardApp property has been set to '${\n      cluster.dashboardApp || 'standard'\n    }.'`}\n  >\n    {errorMessage && (\n      <Typography variant=\"body2\">Errors: {errorMessage}</Typography>\n    )}\n  </WarningPanel>\n);\n\n/**\n *\n *\n * @public\n */\nexport interface KubernetesDrawerable {\n  metadata?: V1ObjectMeta;\n}\n\ninterface KubernetesStructuredMetadataTableDrawerContentProps<\n  T extends KubernetesDrawerable,\n> {\n  toggleDrawer: (e: ChangeEvent<{}>, isOpen: boolean) => void;\n  object: T;\n  renderObject: (obj: T) => object;\n  kind: string;\n}\n\nfunction replaceNullsWithUndefined(someObj: any) {\n  const replacer = (_: any, value: any) =>\n    String(value) === 'null' || String(value) === 'undefined'\n      ? undefined\n      : value;\n\n  return JSON.parse(JSON.stringify(someObj, replacer));\n}\n\nconst KubernetesStructuredMetadataTableDrawerContent = <\n  T extends KubernetesDrawerable,\n>({\n  toggleDrawer,\n  object,\n  renderObject,\n  kind,\n}: KubernetesStructuredMetadataTableDrawerContentProps<T>) => {\n  const [isYaml, setIsYaml] = useState<boolean>(false);\n\n  const formatter = useApi(kubernetesClusterLinkFormatterApiRef);\n  const classes = useDrawerContentStyles();\n  const cluster = useContext(ClusterContext);\n  const { value: clusterLink, error } = useAsync(\n    async () =>\n      formatter.formatClusterLink({\n        dashboardUrl: cluster.dashboardUrl,\n        dashboardApp: cluster.dashboardApp,\n        dashboardParameters: cluster.dashboardParameters,\n        object,\n        kind,\n      }),\n    [cluster, object, kind, formatter],\n  );\n\n  return (\n    <>\n      <div className={classes.header}>\n        <Grid container justifyContent=\"flex-start\" alignItems=\"flex-start\">\n          <Grid item xs={11}>\n            <Typography variant=\"h5\">\n              {object.metadata?.name ?? 'unknown name'}\n            </Typography>\n          </Grid>\n          <Grid item xs={1}>\n            <IconButton\n              key=\"dismiss\"\n              title=\"Close the drawer\"\n              onClick={e => toggleDrawer(e, false)}\n              color=\"inherit\"\n            >\n              <Close className={classes.icon} />\n            </IconButton>\n          </Grid>\n          <Grid item xs={11}>\n            <Typography color=\"textSecondary\" variant=\"body1\">\n              {kind}\n            </Typography>\n          </Grid>\n          <Grid item xs={11}>\n            <FormControlLabel\n              control={\n                <Switch\n                  checked={isYaml}\n                  onChange={event => {\n                    setIsYaml(event.target.checked);\n                  }}\n                  name=\"YAML\"\n                />\n              }\n              label=\"YAML\"\n            />\n          </Grid>\n        </Grid>\n      </div>\n      {error && (\n        <div className={classes.errorMessage}>\n          <LinkErrorPanel\n            cluster={cluster}\n            errorMessage={error.message || error.toString()}\n          />\n        </div>\n      )}\n      <div className={classes.options}>\n        <div>\n          {clusterLink && (\n            <BackstageButton\n              variant=\"outlined\"\n              color=\"primary\"\n              size=\"small\"\n              to={clusterLink}\n              endIcon={<OpenInNewIcon />}\n            >\n              Open Kubernetes Dashboard\n            </BackstageButton>\n          )}\n        </div>\n      </div>\n      <div className={classes.content}>\n        {isYaml && <ManifestYaml object={object} />}\n        {!isYaml && (\n          <StructuredMetadataTable\n            metadata={renderObject(replaceNullsWithUndefined(object))}\n            options={{ nestedValuesAsYaml: true }}\n          />\n        )}\n      </div>\n    </>\n  );\n};\n\n/**\n *\n * @public\n */\nexport interface KubernetesStructuredMetadataTableDrawerProps<\n  T extends KubernetesDrawerable,\n> {\n  object: T;\n  renderObject: (obj: T) => object;\n  buttonVariant?: 'h5' | 'subtitle2';\n  kind: string;\n  expanded?: boolean;\n  children?: ReactNode;\n}\n\n/**\n *\n * @public\n */\nexport const KubernetesStructuredMetadataTableDrawer = <\n  T extends KubernetesDrawerable,\n>({\n  object,\n  renderObject,\n  kind,\n  buttonVariant = 'subtitle2',\n  expanded = false,\n  children,\n}: KubernetesStructuredMetadataTableDrawerProps<T>) => {\n  const [isOpen, setIsOpen] = useState(expanded);\n  const classes = useDrawerStyles();\n\n  const toggleDrawer = (e: ChangeEvent<{}>, newValue: boolean) => {\n    e.stopPropagation();\n    setIsOpen(newValue);\n  };\n\n  return (\n    <>\n      <PodDrawerButton\n        onClick={e => toggleDrawer(e, true)}\n        onFocus={event => event.stopPropagation()}\n      >\n        {children === undefined ? (\n          <Typography variant={buttonVariant}>\n            {object.metadata?.name ?? 'unknown object'}\n          </Typography>\n        ) : (\n          children\n        )}\n      </PodDrawerButton>\n      <Drawer\n        classes={{\n          paper: classes.paper,\n        }}\n        anchor=\"right\"\n        open={isOpen}\n        onClose={(e: any) => toggleDrawer(e, false)}\n        onClick={event => event.stopPropagation()}\n      >\n        <KubernetesStructuredMetadataTableDrawerContent\n          kind={kind}\n          toggleDrawer={toggleDrawer}\n          object={object}\n          renderObject={renderObject}\n        />\n      </Drawer>\n    </>\n  );\n};\n"],"names":["Close","BackstageButton"],"mappings":"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"}