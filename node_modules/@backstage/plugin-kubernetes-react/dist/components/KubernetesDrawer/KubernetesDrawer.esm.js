import { jsxs, Fragment, jsx } from 'react/jsx-runtime';
import { useState } from 'react';
import Drawer from '@material-ui/core/Drawer';
import Grid from '@material-ui/core/Grid';
import IconButton from '@material-ui/core/IconButton';
import Switch from '@material-ui/core/Switch';
import Typography from '@material-ui/core/Typography';
import Button from '@material-ui/core/Button';
import FormControlLabel from '@material-ui/core/FormControlLabel';
import { makeStyles, createStyles, withStyles } from '@material-ui/core/styles';
import CloseIcon from '@material-ui/icons/Close';
import { ManifestYaml } from './ManifestYaml.esm.js';

const useDrawerContentStyles = makeStyles(
  (_theme) => createStyles({
    header: {
      display: "flex",
      flexDirection: "row",
      justifyContent: "space-between"
    },
    content: {
      height: "80%"
    },
    icon: {
      fontSize: 20
    }
  })
);
const KubernetesDrawerContent = ({
  children,
  header,
  kubernetesObject,
  close
}) => {
  const classes = useDrawerContentStyles();
  const [isYaml, setIsYaml] = useState(false);
  return /* @__PURE__ */ jsxs(Fragment, { children: [
    /* @__PURE__ */ jsx("div", { className: classes.header, children: /* @__PURE__ */ jsxs(Grid, { container: true, justifyContent: "flex-start", alignItems: "flex-start", children: [
      /* @__PURE__ */ jsx(Grid, { item: true, xs: 11, children: /* @__PURE__ */ jsx(Typography, { variant: "h5", children: kubernetesObject.metadata?.name }) }),
      /* @__PURE__ */ jsx(Grid, { item: true, xs: 1, children: /* @__PURE__ */ jsx(
        IconButton,
        {
          title: "Close the drawer",
          onClick: () => close(),
          color: "inherit",
          children: /* @__PURE__ */ jsx(CloseIcon, { className: classes.icon })
        },
        "dismiss"
      ) }),
      /* @__PURE__ */ jsx(Grid, { item: true, xs: 12, children: header }),
      /* @__PURE__ */ jsx(Grid, { item: true, xs: 12, children: /* @__PURE__ */ jsx(
        FormControlLabel,
        {
          control: /* @__PURE__ */ jsx(
            Switch,
            {
              checked: isYaml,
              onChange: (event) => {
                setIsYaml(event.target.checked);
              },
              name: "YAML"
            }
          ),
          label: "YAML"
        }
      ) })
    ] }) }),
    /* @__PURE__ */ jsxs("div", { className: classes.content, children: [
      isYaml && /* @__PURE__ */ jsx(ManifestYaml, { object: kubernetesObject }),
      !isYaml && children
    ] })
  ] });
};
const useDrawerStyles = makeStyles(
  (theme) => createStyles({
    paper: {
      width: "50%",
      justifyContent: "space-between",
      padding: theme.spacing(2.5)
    }
  })
);
const DrawerButton = withStyles({
  root: {
    padding: "6px 5px"
  },
  label: {
    textTransform: "none"
  }
})(Button);
const KubernetesDrawer = ({
  open,
  label,
  drawerContentsHeader,
  kubernetesObject,
  children
}) => {
  const classes = useDrawerStyles();
  const [isOpen, setIsOpen] = useState(open ?? false);
  const toggleDrawer = (e, newValue) => {
    e.stopPropagation();
    setIsOpen(newValue);
  };
  return /* @__PURE__ */ jsxs(Fragment, { children: [
    /* @__PURE__ */ jsx(DrawerButton, { onClick: () => setIsOpen(true), children: label }),
    /* @__PURE__ */ jsx(
      Drawer,
      {
        classes: {
          paper: classes.paper
        },
        anchor: "right",
        open: isOpen,
        onClose: (e) => toggleDrawer(e, false),
        onClick: (event) => event.stopPropagation(),
        children: isOpen && /* @__PURE__ */ jsx(
          KubernetesDrawerContent,
          {
            header: drawerContentsHeader,
            kubernetesObject,
            children,
            close: () => setIsOpen(false)
          }
        )
      }
    )
  ] });
};

export { KubernetesDrawer };
//# sourceMappingURL=KubernetesDrawer.esm.js.map
