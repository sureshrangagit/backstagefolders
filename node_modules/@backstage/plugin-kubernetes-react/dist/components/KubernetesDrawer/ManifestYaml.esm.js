import { jsxs, Fragment, jsx } from 'react/jsx-runtime';
import { CodeSnippet } from '@backstage/core-components';
import FormControlLabel from '@material-ui/core/FormControlLabel';
import Switch from '@material-ui/core/Switch';
import jsyaml from 'js-yaml';
import { useState } from 'react';

const ManifestYaml = ({ object }) => {
  const [managedFields, setManagedFields] = useState(false);
  return /* @__PURE__ */ jsxs(Fragment, { children: [
    /* @__PURE__ */ jsx(
      FormControlLabel,
      {
        control: /* @__PURE__ */ jsx(
          Switch,
          {
            checked: managedFields,
            onChange: (event) => {
              setManagedFields(event.target.checked);
            },
            name: "Managed Fields"
          }
        ),
        label: "Managed Fields"
      }
    ),
    /* @__PURE__ */ jsx(
      CodeSnippet,
      {
        language: "yaml",
        text: jsyaml.dump(object, {
          // NOTE: this will remove any field called `managedFields`
          // not just the metadata one
          // TODO: @mclarke make this only remove the `metadata.managedFields`
          replacer: (key, value) => {
            if (!managedFields) {
              return key === "managedFields" ? void 0 : value;
            }
            return value;
          }
        })
      }
    )
  ] });
};

export { ManifestYaml };
//# sourceMappingURL=ManifestYaml.esm.js.map
