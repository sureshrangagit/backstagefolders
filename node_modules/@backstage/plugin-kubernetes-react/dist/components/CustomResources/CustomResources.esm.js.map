{"version":3,"file":"CustomResources.esm.js","sources":["../../../src/components/CustomResources/CustomResources.tsx"],"sourcesContent":["/*\n * Copyright 2020 The Backstage Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { ReactNode, useContext } from 'react';\nimport lodash, { Dictionary } from 'lodash';\nimport { RolloutAccordions } from './ArgoRollouts';\nimport { DefaultCustomResourceAccordions } from './DefaultCustomResource';\nimport { GroupedResponsesContext } from '../../hooks';\n\n/**\n *\n *\n * @public\n */\nexport interface CustomResourcesProps {\n  children?: ReactNode;\n}\n\nconst kindToResource = (customResources: any[]): Dictionary<any[]> => {\n  return lodash.groupBy(customResources, value => {\n    return value.kind;\n  });\n};\n\n/**\n *\n *\n * @public\n */\nexport const CustomResources = ({}: CustomResourcesProps) => {\n  const groupedResponses = useContext(GroupedResponsesContext);\n  const kindToResourceMap = kindToResource(groupedResponses.customResources);\n\n  return (\n    <>\n      {Object.entries(kindToResourceMap).map(([kind, resources], i) => {\n        switch (kind) {\n          case 'Rollout':\n            return <RolloutAccordions key={i} rollouts={resources} />;\n          default:\n            return (\n              <DefaultCustomResourceAccordions\n                key={i}\n                customResources={resources}\n                customResourceName={kind}\n              />\n            );\n        }\n      })}\n    </>\n  );\n};\n"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;AA+BA,MAAM,cAAA,GAAiB,CAAC,eAA8C,KAAA;AACpE,EAAO,OAAA,MAAA,CAAO,OAAQ,CAAA,eAAA,EAAiB,CAAS,KAAA,KAAA;AAC9C,IAAA,OAAO,KAAM,CAAA,IAAA;AAAA,GACd,CAAA;AACH,CAAA;AAOa,MAAA,eAAA,GAAkB,CAAC,EAA6B,KAAA;AAC3D,EAAM,MAAA,gBAAA,GAAmB,WAAW,uBAAuB,CAAA;AAC3D,EAAM,MAAA,iBAAA,GAAoB,cAAe,CAAA,gBAAA,CAAiB,eAAe,CAAA;AAEzE,EACE,uBAAA,GAAA,CAAA,QAAA,EAAA,EACG,QAAO,EAAA,MAAA,CAAA,OAAA,CAAQ,iBAAiB,CAAA,CAAE,GAAI,CAAA,CAAC,CAAC,IAAA,EAAM,SAAS,CAAA,EAAG,CAAM,KAAA;AAC/D,IAAA,QAAQ,IAAM;AAAA,MACZ,KAAK,SAAA;AACH,QAAA,uBAAQ,GAAA,CAAA,iBAAA,EAAA,EAA0B,QAAU,EAAA,SAAA,EAAA,EAAb,CAAwB,CAAA;AAAA,MACzD;AACE,QACE,uBAAA,GAAA;AAAA,UAAC,+BAAA;AAAA,UAAA;AAAA,YAEC,eAAiB,EAAA,SAAA;AAAA,YACjB,kBAAoB,EAAA;AAAA,WAAA;AAAA,UAFf;AAAA,SAGP;AAAA;AAEN,GACD,CACH,EAAA,CAAA;AAEJ;;;;"}