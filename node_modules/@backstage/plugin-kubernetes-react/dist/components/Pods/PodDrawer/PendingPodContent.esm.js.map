{"version":3,"file":"PendingPodContent.esm.js","sources":["../../../../src/components/Pods/PodDrawer/PendingPodContent.tsx"],"sourcesContent":["/*\n * Copyright 2023 The Backstage Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport Grid from '@material-ui/core/Grid';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport Typography from '@material-ui/core/Typography';\nimport { IPodCondition, Pod } from 'kubernetes-models/v1';\nimport {\n  StatusError,\n  StatusOK,\n  StatusWarning,\n} from '@backstage/core-components';\nimport { DateTime } from 'luxon';\n\ninterface PodConditionProps {\n  condition: IPodCondition;\n}\n\nconst PodCondition = ({ condition }: PodConditionProps) => {\n  return (\n    <>\n      {condition.status === 'False' && (\n        <StatusError>\n          {condition.type} - ({condition.reason}{' '}\n          {condition.lastTransitionTime &&\n            DateTime.fromISO(condition.lastTransitionTime).toRelative({\n              locale: 'en',\n            })}\n          ) - {condition.message}{' '}\n        </StatusError>\n      )}\n      {condition.status === 'True' && (\n        <StatusOK>\n          {condition.type} - (\n          {condition.lastTransitionTime &&\n            DateTime.fromISO(condition.lastTransitionTime).toRelative({\n              locale: 'en',\n            })}\n          )\n        </StatusOK>\n      )}\n      {condition.status === 'Unknown' && (\n        <StatusWarning>\n          {condition.type} - (\n          {condition.lastTransitionTime &&\n            DateTime.fromISO(condition.lastTransitionTime).toRelative({\n              locale: 'en',\n            })}\n          ) {condition.message}\n        </StatusWarning>\n      )}\n    </>\n  );\n};\n\n/**\n * Props for PendingPodContent\n *\n * @public\n */\nexport interface PendingPodContentProps {\n  pod: Pod;\n}\n\n/**\n * Shows details about pod's conditions as it starts\n *\n * @public\n */\nexport const PendingPodContent = ({ pod }: PendingPodContentProps) => {\n  // TODO add PodHasNetwork when it's out of alpha\n  // https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle/#pod-conditions\n  const startupConditions = [\n    pod.status?.conditions?.find(c => c.type === 'PodScheduled'),\n    pod.status?.conditions?.find(c => c.type === 'Initialized'),\n    pod.status?.conditions?.find(c => c.type === 'ContainersReady'),\n    pod.status?.conditions?.find(c => c.type === 'Ready'),\n  ].filter((c): c is IPodCondition => !!c); // filter out undefined\n  return (\n    <Grid container spacing={2}>\n      <Grid item xs={12}>\n        <Typography variant=\"h5\">Pod is Pending. Conditions:</Typography>\n        <List>\n          {startupConditions.map(c => (\n            <ListItem key={c.type}>\n              <PodCondition condition={c} />\n            </ListItem>\n          ))}\n        </List>\n      </Grid>\n    </Grid>\n  );\n};\n"],"names":[],"mappings":";;;;;;;;AA+BA,MAAM,YAAe,GAAA,CAAC,EAAE,SAAA,EAAmC,KAAA;AACzD,EAAA,uBAEK,IAAA,CAAA,QAAA,EAAA,EAAA,QAAA,EAAA;AAAA,IAAU,SAAA,CAAA,MAAA,KAAW,OACpB,oBAAA,IAAA,CAAC,WACE,EAAA,EAAA,QAAA,EAAA;AAAA,MAAU,SAAA,CAAA,IAAA;AAAA,MAAK,MAAA;AAAA,MAAK,SAAU,CAAA,MAAA;AAAA,MAAQ,GAAA;AAAA,MACtC,UAAU,kBACT,IAAA,QAAA,CAAS,QAAQ,SAAU,CAAA,kBAAkB,EAAE,UAAW,CAAA;AAAA,QACxD,MAAQ,EAAA;AAAA,OACT,CAAA;AAAA,MAAE,MAAA;AAAA,MACA,SAAU,CAAA,OAAA;AAAA,MAAS;AAAA,KAC1B,EAAA,CAAA;AAAA,IAED,SAAU,CAAA,MAAA,KAAW,MACpB,oBAAA,IAAA,CAAC,QACE,EAAA,EAAA,QAAA,EAAA;AAAA,MAAU,SAAA,CAAA,IAAA;AAAA,MAAK,MAAA;AAAA,MACf,UAAU,kBACT,IAAA,QAAA,CAAS,QAAQ,SAAU,CAAA,kBAAkB,EAAE,UAAW,CAAA;AAAA,QACxD,MAAQ,EAAA;AAAA,OACT,CAAA;AAAA,MAAE;AAAA,KAEP,EAAA,CAAA;AAAA,IAED,SAAU,CAAA,MAAA,KAAW,SACpB,oBAAA,IAAA,CAAC,aACE,EAAA,EAAA,QAAA,EAAA;AAAA,MAAU,SAAA,CAAA,IAAA;AAAA,MAAK,MAAA;AAAA,MACf,UAAU,kBACT,IAAA,QAAA,CAAS,QAAQ,SAAU,CAAA,kBAAkB,EAAE,UAAW,CAAA;AAAA,QACxD,MAAQ,EAAA;AAAA,OACT,CAAA;AAAA,MAAE,IAAA;AAAA,MACF,SAAU,CAAA;AAAA,KACf,EAAA;AAAA,GAEJ,EAAA,CAAA;AAEJ,CAAA;AAgBO,MAAM,iBAAoB,GAAA,CAAC,EAAE,GAAA,EAAkC,KAAA;AAGpE,EAAA,MAAM,iBAAoB,GAAA;AAAA,IACxB,IAAI,MAAQ,EAAA,UAAA,EAAY,KAAK,CAAK,CAAA,KAAA,CAAA,CAAE,SAAS,cAAc,CAAA;AAAA,IAC3D,IAAI,MAAQ,EAAA,UAAA,EAAY,KAAK,CAAK,CAAA,KAAA,CAAA,CAAE,SAAS,aAAa,CAAA;AAAA,IAC1D,IAAI,MAAQ,EAAA,UAAA,EAAY,KAAK,CAAK,CAAA,KAAA,CAAA,CAAE,SAAS,iBAAiB,CAAA;AAAA,IAC9D,IAAI,MAAQ,EAAA,UAAA,EAAY,KAAK,CAAK,CAAA,KAAA,CAAA,CAAE,SAAS,OAAO;AAAA,IACpD,MAAO,CAAA,CAAC,CAA0B,KAAA,CAAC,CAAC,CAAC,CAAA;AACvC,EACE,uBAAA,GAAA,CAAC,IAAK,EAAA,EAAA,SAAA,EAAS,IAAC,EAAA,OAAA,EAAS,CACvB,EAAA,QAAA,kBAAA,IAAA,CAAC,IAAK,EAAA,EAAA,IAAA,EAAI,IAAC,EAAA,EAAA,EAAI,EACb,EAAA,QAAA,EAAA;AAAA,oBAAC,GAAA,CAAA,UAAA,EAAA,EAAW,OAAQ,EAAA,IAAA,EAAK,QAA2B,EAAA,6BAAA,EAAA,CAAA;AAAA,oBACnD,GAAA,CAAA,IAAA,EAAA,EACE,QAAkB,EAAA,iBAAA,CAAA,GAAA,CAAI,uBACpB,GAAA,CAAA,QAAA,EAAA,EACC,QAAC,kBAAA,GAAA,CAAA,YAAA,EAAA,EAAa,WAAW,CAAG,EAAA,CAAA,EAAA,EADf,CAAE,CAAA,IAEjB,CACD,CACH,EAAA;AAAA,GAAA,EACF,CACF,EAAA,CAAA;AAEJ;;;;"}