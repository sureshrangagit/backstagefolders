{"version":3,"file":"PodDrawer.esm.js","sources":["../../../../src/components/Pods/PodDrawer/PodDrawer.tsx"],"sourcesContent":["/*\n * Copyright 2020 The Backstage Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { ItemCardGrid } from '@backstage/core-components';\nimport Grid from '@material-ui/core/Grid';\nimport Typography from '@material-ui/core/Typography';\nimport { createStyles, makeStyles, Theme } from '@material-ui/core/styles';\n\nimport { Pod } from 'kubernetes-models/v1';\n\nimport { ContainerCard } from './ContainerCard';\n\nimport { PodAndErrors } from '../types';\nimport { KubernetesDrawer } from '../../KubernetesDrawer';\nimport { PodDeleteButton } from '../PodDelete/PodDeleteButton';\nimport { PendingPodContent } from './PendingPodContent';\nimport { ErrorList } from '../ErrorList';\nimport { usePodMetrics } from '../../../hooks/usePodMetrics';\nimport { ResourceUtilization } from '../../ResourceUtilization';\nimport { bytesToMiB, formatMillicores } from '../../../utils/resources';\nimport { useIsPodDeleteEnabled } from '../../../hooks';\n\nconst useDrawerContentStyles = makeStyles((_theme: Theme) =>\n  createStyles({\n    header: {\n      display: 'flex',\n      flexDirection: 'row',\n      justifyContent: 'space-between',\n    },\n    content: {\n      height: '80%',\n    },\n    icon: {\n      fontSize: 20,\n    },\n    podoklist: {\n      width: '100%',\n      maxWidth: 360,\n      maxHeight: 360,\n    },\n  }),\n);\n\nfunction getContainerSpecByName(pod: Pod, containerName: string) {\n  return pod.spec?.containers.find(c => c.name === containerName);\n}\n\n/**\n * Props for PodDrawer\n *\n * @public\n */\nexport interface PodDrawerProps {\n  open?: boolean;\n  podAndErrors: PodAndErrors;\n}\n\n/**\n * A Drawer for Kubernetes Pods\n *\n * @public\n */\nexport const PodDrawer = ({ podAndErrors, open }: PodDrawerProps) => {\n  const classes = useDrawerContentStyles();\n  const podMetrics = usePodMetrics(podAndErrors.cluster.name, podAndErrors.pod);\n  const isPodDeleteEnabled = useIsPodDeleteEnabled();\n\n  return (\n    <KubernetesDrawer\n      open={open}\n      drawerContentsHeader={\n        <Typography variant=\"subtitle1\">\n          Pod{' '}\n          {podAndErrors.pod.status?.podIP &&\n            `(${podAndErrors.pod.status?.podIP})`}\n        </Typography>\n      }\n      kubernetesObject={podAndErrors.pod}\n      label={\n        <Typography variant=\"subtitle1\">\n          {podAndErrors.pod.metadata?.name ?? 'unknown'}\n        </Typography>\n      }\n    >\n      <div className={classes.content}>\n        {isPodDeleteEnabled && (\n          <PodDeleteButton\n            podScope={{\n              podName: podAndErrors.pod.metadata?.name ?? 'unknown',\n              podNamespace: podAndErrors.pod.metadata?.namespace ?? 'default',\n              cluster: podAndErrors.cluster,\n            }}\n          />\n        )}\n        {podMetrics && (\n          <Grid container item xs={12}>\n            <Grid item xs={12}>\n              <Typography variant=\"h5\">Resource utilization</Typography>\n            </Grid>\n            <Grid item xs={6}>\n              <ResourceUtilization\n                title=\"CPU requests\"\n                usage={podMetrics.cpu.currentUsage}\n                total={podMetrics.cpu.requestTotal}\n                totalFormatted={formatMillicores(podMetrics.cpu.requestTotal)}\n              />\n              <ResourceUtilization\n                title=\"CPU limits\"\n                usage={podMetrics.cpu.currentUsage}\n                total={podMetrics.cpu.limitTotal}\n                totalFormatted={formatMillicores(podMetrics.cpu.limitTotal)}\n              />\n            </Grid>\n            <Grid item xs={6}>\n              <ResourceUtilization\n                title=\"Memory requests\"\n                usage={podMetrics.memory.currentUsage}\n                total={podMetrics.memory.requestTotal}\n                totalFormatted={bytesToMiB(podMetrics.memory.requestTotal)}\n              />\n              <ResourceUtilization\n                title=\"Memory limits\"\n                usage={podMetrics.memory.currentUsage}\n                total={podMetrics.memory.limitTotal}\n                totalFormatted={bytesToMiB(podMetrics.memory.limitTotal)}\n              />\n            </Grid>\n          </Grid>\n        )}\n        {podAndErrors.pod.status?.phase === 'Pending' && (\n          <PendingPodContent pod={podAndErrors.pod} />\n        )}\n        {podAndErrors.pod.status?.containerStatuses?.length && (\n          <Grid container spacing={2}>\n            <Grid item xs={12}>\n              <Typography variant=\"h5\">Containers</Typography>\n            </Grid>\n            <Grid item xs={12}>\n              <ItemCardGrid>\n                {podAndErrors.pod.status?.containerStatuses?.map(\n                  (containerStatus, i) => {\n                    const containerSpec = getContainerSpecByName(\n                      podAndErrors.pod,\n                      containerStatus.name,\n                    );\n                    const containerMetrics = (\n                      podMetrics?.containers ?? []\n                    ).find(c => c.container === containerStatus.name);\n                    return (\n                      <ContainerCard\n                        key={`container-card-${podAndErrors.pod.metadata?.name}-${i}`}\n                        containerMetrics={containerMetrics}\n                        podScope={{\n                          podName: podAndErrors.pod.metadata?.name ?? 'unknown',\n                          podNamespace:\n                            podAndErrors.pod.metadata?.namespace ?? 'unknown',\n                          cluster: podAndErrors.cluster,\n                        }}\n                        containerSpec={containerSpec}\n                        containerStatus={containerStatus}\n                      />\n                    );\n                  },\n                )}\n              </ItemCardGrid>\n            </Grid>\n            {podAndErrors.errors.length > 0 && (\n              <Grid item xs={12}>\n                <Typography variant=\"h5\">Errors</Typography>\n              </Grid>\n            )}\n            {podAndErrors.errors.length > 0 && (\n              <Grid item xs={12}>\n                <ErrorList podAndErrors={[podAndErrors]} />\n              </Grid>\n            )}\n          </Grid>\n        )}\n      </div>\n    </KubernetesDrawer>\n  );\n};\n"],"names":[],"mappings":"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"}