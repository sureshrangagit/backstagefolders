import { jsx, jsxs } from 'react/jsx-runtime';
import { Fragment } from 'react';
import List from '@material-ui/core/List';
import ListItem from '@material-ui/core/ListItem';
import ListItemText from '@material-ui/core/ListItemText';
import Divider from '@material-ui/core/Divider';
import Paper from '@material-ui/core/Paper';
import Grid from '@material-ui/core/Grid';
import { makeStyles, createStyles } from '@material-ui/core/styles';
import { FixDialog } from '../FixDialog/FixDialog.esm.js';

const useStyles = makeStyles(
  (_theme) => createStyles({
    root: {
      overflow: "auto"
    },
    list: {
      width: "100%"
    }
  })
);
const ErrorList = ({ podAndErrors }) => {
  const classes = useStyles();
  return /* @__PURE__ */ jsx(Paper, { className: classes.root, children: /* @__PURE__ */ jsx(List, { className: classes.list, children: podAndErrors.filter((pae) => pae.errors.length > 0).flatMap((onlyPodWithErrors) => {
    return onlyPodWithErrors.errors.map((error, i) => {
      return /* @__PURE__ */ jsxs(
        Fragment,
        {
          children: [
            i > 0 && /* @__PURE__ */ jsx(Divider, {}, `error-divider${i}`),
            /* @__PURE__ */ jsx(ListItem, { children: /* @__PURE__ */ jsxs(Grid, { container: true, children: [
              /* @__PURE__ */ jsx(Grid, { item: true, xs: 9, children: /* @__PURE__ */ jsx(
                ListItemText,
                {
                  primary: error.message,
                  secondary: onlyPodWithErrors.pod.metadata?.name
                }
              ) }),
              /* @__PURE__ */ jsx(Grid, { item: true, xs: 3, children: /* @__PURE__ */ jsx(
                FixDialog,
                {
                  pod: onlyPodWithErrors.pod,
                  error,
                  clusterName: onlyPodWithErrors.cluster.name
                }
              ) })
            ] }) })
          ]
        },
        `${onlyPodWithErrors.pod.metadata?.name ?? "unknown"}-eli-${i}`
      );
    });
  }) }) });
};

export { ErrorList };
//# sourceMappingURL=ErrorList.esm.js.map
